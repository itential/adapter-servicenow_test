{
    "openapi": "3.0.2",
    "info": {
        "title": "ServiceNow Madrid",
        "version": "1.0.0",
        "description": "Custom built swagger for ServiceNow Madrid. Built May 21, 2019"
    },
    "paths": {
        "/now/table/{tableName}/{sys_id}": {
            "summary": "The Table API allows you to perform create, read, update, and delete (CRUD) operations on existing tables.",
            "description": "The Table API allows you to perform create, read, update, and delete (CRUD) operations on existing tables.",
            "get": {
                "tags": [
                    "Table"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "Name of the table from which to retrieve the records.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the record to retrieve.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "name-value-pairs": {
                                        "value": {
                                            "result": {
                                                "upon_approval": "",
                                                "location": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba",
                                                    "value": "105cf7f3c611227501e75e08b14a38ba"
                                                },
                                                "expected_start": "",
                                                "reopen_count": "",
                                                "close_notes": "",
                                                "additional_assignee_list": "",
                                                "impact": "1",
                                                "urgency": "3",
                                                "correlation_id": "",
                                                "sys_tags": "",
                                                "sys_domain": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/global",
                                                    "value": "global"
                                                },
                                                "description": "",
                                                "group_list": "",
                                                "priority": "3",
                                                "delivery_plan": "",
                                                "sys_mod_count": "4",
                                                "work_notes_list": "",
                                                "business_service": "",
                                                "follow_up": "",
                                                "closed_at": "",
                                                "sla_due": "2015-11-11 22:04:15",
                                                "delivery_task": "",
                                                "sys_updated_on": "2015-11-01 22:37:27",
                                                "parent": "",
                                                "work_end": "",
                                                "number": "INC0000046",
                                                "closed_by": "",
                                                "work_start": "",
                                                "calendar_stc": "",
                                                "category": "software",
                                                "business_duration": "",
                                                "incident_state": "1",
                                                "activity_due": "",
                                                "correlation_display": "",
                                                "company": "",
                                                "active": "true",
                                                "due_date": "",
                                                "assignment_group": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7",
                                                    "value": "8a4dde73c6112278017a6a4baf547aa7"
                                                },
                                                "caller_id": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7",
                                                    "value": "46c6f9efa9fe198101ddf5eed9adf6e7"
                                                },
                                                "knowledge": "false",
                                                "made_sla": "false",
                                                "comments_and_work_notes": "",
                                                "parent_incident": "",
                                                "state": "1",
                                                "user_input": "",
                                                "sys_created_on": "2015-11-01 22:05:30",
                                                "approval_set": "",
                                                "reassignment_count": "1",
                                                "rfc": "",
                                                "child_incidents": "",
                                                "opened_at": "2015-11-02 22:04:15",
                                                "short_description": "Can't access SFA software",
                                                "order": "",
                                                "sys_updated_by": "glide.maint",
                                                "resolved_by": "",
                                                "notify": "1",
                                                "upon_reject": "",
                                                "approval_history": "",
                                                "problem_id": {
                                                    "link": "https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74",
                                                    "value": "a9e4890bc6112276003d7a5a5c774a74"
                                                },
                                                "work_notes": "",
                                                "calendar_duration": "",
                                                "close_code": "",
                                                "sys_id": "a9e30c7dc61122760116894de7bcc7bd",
                                                "approval": "not requested",
                                                "caused_by": "",
                                                "severity": "3",
                                                "sys_created_by": "admin",
                                                "resolved_at": "",
                                                "assigned_to": "",
                                                "business_stc": "",
                                                "wf_activity": "",
                                                "sys_domain_path": "/",
                                                "cmdb_ci": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0",
                                                    "value": "a9c0c8d2c6112276018f7705562f9cb0"
                                                },
                                                "opened_by": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7",
                                                    "value": "46c6f9efa9fe198101ddf5eed9adf6e7"
                                                },
                                                "subcategory": "",
                                                "rejection_goto": "",
                                                "sys_class_name": "incident",
                                                "watch_list": "",
                                                "time_worked": "",
                                                "contact_type": "phone",
                                                "escalation": "0",
                                                "comments": ""
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "queryTableByNameAndId",
                "summary": "Retrieves the record identified by the specified sys_id from the specified table.",
                "description": "Retrieves the record identified by the specified sys_id from the specified table."
            },
            "put": {
                "requestBody": {
                    "description": "name-value pairs for the field(s) to update in the associated table. For example, to update the short description file, enter a name-value pair similar to the following: --data \"{\\\"short_description\\\": \\\"my short desc\\\" }\" \\.\n",
                    "content": {
                        "application/json": {
                            "examples": {
                                "name-value pairs": {
                                    "value": {
                                        "assigned_to": "681b365ec0a80164000fb0b05854a0cd",
                                        "urgency": "1",
                                        "comments": "Elevating urgency, this is a blocking issue"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Table"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "Name of the table from which to retrieve the records.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the record to retrieve.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "name-value pairs": {
                                        "value": {
                                            "result": {
                                                "upon_approval": "proceed",
                                                "location": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmn_location/108752c8c611227501d4ab0e392ba97f",
                                                    "value": "108752c8c611227501d4ab0e392ba97f"
                                                },
                                                "expected_start": "",
                                                "reopen_count": "",
                                                "close_notes": "",
                                                "additional_assignee_list": "",
                                                "impact": "1",
                                                "urgency": "1",
                                                "correlation_id": "",
                                                "sys_tags": "",
                                                "sys_domain": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/global",
                                                    "value": "global"
                                                },
                                                "description": "",
                                                "group_list": "",
                                                "priority": "1",
                                                "delivery_plan": "",
                                                "sys_mod_count": "7",
                                                "work_notes_list": "",
                                                "business_service": "",
                                                "follow_up": "",
                                                "closed_at": "",
                                                "sla_due": "2017-07-05 05:58:24",
                                                "delivery_task": "",
                                                "sys_updated_on": "2016-01-22 14:12:37",
                                                "parent": "",
                                                "work_end": "",
                                                "number": "INC0000050",
                                                "closed_by": "",
                                                "work_start": "",
                                                "calendar_stc": "",
                                                "category": "hardware",
                                                "business_duration": "",
                                                "incident_state": "2",
                                                "activity_due": "2016-01-22 16:12:37",
                                                "correlation_display": "",
                                                "company": {
                                                    "link": "https://instance.service-now.com/api/now/table/core_company/31bea3d53790200044e0bfc8bcbe5dec",
                                                    "value": "31bea3d53790200044e0bfc8bcbe5dec"
                                                },
                                                "active": "true",
                                                "due_date": "",
                                                "assignment_group": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/8a5055c9c61122780043563ef53438e3",
                                                    "value": "8a5055c9c61122780043563ef53438e3"
                                                },
                                                "caller_id": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/5b7c200d0a640069006b3845b5d0fa7c",
                                                    "value": "5b7c200d0a640069006b3845b5d0fa7c"
                                                },
                                                "knowledge": "false",
                                                "made_sla": "true",
                                                "comments_and_work_notes": "",
                                                "parent_incident": "",
                                                "state": "2",
                                                "user_input": "",
                                                "sys_created_on": "2015-11-02 18:05:40",
                                                "approval_set": "",
                                                "reassignment_count": "0",
                                                "rfc": "",
                                                "child_incidents": "",
                                                "opened_at": "2015-11-02 21:58:24",
                                                "short_description": "Can't access Exchange server - is it down?",
                                                "order": "",
                                                "sys_updated_by": "admin",
                                                "resolved_by": "",
                                                "notify": "1",
                                                "upon_reject": "cancel",
                                                "approval_history": "",
                                                "problem_id": "",
                                                "work_notes": "",
                                                "calendar_duration": "",
                                                "close_code": "",
                                                "sys_id": "ef43c6d40a0a0b5700c77f9bf387afe3",
                                                "approval": "not requested",
                                                "caused_by": "",
                                                "severity": "3",
                                                "sys_created_by": "glide.maint",
                                                "resolved_at": "",
                                                "assigned_to": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd",
                                                    "value": "681b365ec0a80164000fb0b05854a0cd"
                                                },
                                                "business_stc": "",
                                                "wf_activity": "",
                                                "sys_domain_path": "/",
                                                "cmdb_ci": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmdb_ci/281190e3c0a8000b003f593aa3f20ca6",
                                                    "value": "281190e3c0a8000b003f593aa3f20ca6"
                                                },
                                                "opened_by": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/glide.maint",
                                                    "value": "glide.maint"
                                                },
                                                "subcategory": "",
                                                "rejection_goto": "",
                                                "sys_class_name": "incident",
                                                "watch_list": "",
                                                "time_worked": "",
                                                "contact_type": "phone",
                                                "escalation": "3",
                                                "comments": ""
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateTableRecord",
                "summary": "Updates the specified record with the request body.",
                "description": "Updates the specified record with the request body.\n\n"
            },
            "delete": {
                "tags": [
                    "Table"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "Name of the table from which to retrieve the records.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the record to retrieve.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteTableRecord",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "tableName",
                    "description": "Name of the table from which to retrieve the records.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the record to retrieve.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/awa/agents/{sys_id}": {
            "summary": "Use the Agent Presence API to get or set agent presence and channel availability.",
            "description": "Use the Agent Presence API to get or set agent presence and channel availability.\n\nThe Agent Presence API is provided within the sn_awa namespace.\n\nRequires the Advanced Work Assignment plugin (com.glide.awa) and awa_integration_user role.",
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Agent Presence"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "The sys_id of the user listed in sys_user table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Not Found. The specified record could not be found.\n"
                    }
                },
                "operationId": "setAgentPresence",
                "summary": "Sets the state of a provided agent’s presence and sets the agent’s channel availability for that state (if provided).",
                "description": "Sets the state of a provided agent’s presence and sets the agent’s channel availability for that state (if provided).\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "The sys_id of the user listed in sys_user table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/standard/{standard_change_template_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "post": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "standard_change_template_id",
                        "description": "Unique identifier of the standard change template on which to base the new standard change request (from [std_change_record_producer] table).\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "changeStandardTemplateById",
                "summary": "Creates one standard change request based on an existing standard change template.",
                "description": "Creates one standard change request based on an existing standard change template as specified by the passed-in template sys_id. Multiple standard change request creations within a single call is not supported.\n\n"
            },
            "parameters": [
                {
                    "name": "standard_change_template_id",
                    "description": "Unique identifier of the standard change template on which to base the new standard change request (from [std_change_record_producer] table).\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/standard": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getStandardChangeRequest",
                "summary": "Retrieves one or more standard change requests based on the specified criteria.",
                "description": "Retrieves one or more standard change requests based on the specified criteria.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                }
            ]
        },
        "/sn_chg_rest/change/standard/{sys_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": "{\n    result: [\n        {\n            sys_id: {\n                value: \"1c87925347c12200e0ef563dbb9a7177\",\n                display_value: \"1c87925347c12200e0ef563dbb9a7177\"\n            },\n            state: {\n                value: \"-5\", \n                display_value: \"New\"\n            },\n            ..., // all valid fields in record, example below\n            short_description: {\n                value: \"Add network switch to cabinet\",\n                display_value: \"Add network switch to cabinet\"\n            },\n        }, \n    ]\n}"
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getStandardChangeRequestById",
                "summary": "Retrieves the standard change request identified by the specified sys_id.",
                "description": "Retrieves the standard change request identified by the specified sys_id."
            },
            "delete": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "deleteStandardChangeRequestById",
                "summary": "Deletes the standard change request identified by the specified sys_id.",
                "description": "Deletes the standard change request identified by the specified sys_id.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/standard/{sys_id}/risk": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/standard/template": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getStandardChangeTemplate",
                "summary": "Retrieves one or more standard change templates based on the specified criteria.",
                "description": "Retrieves one or more standard change templates based on the specified criteria.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                }
            ]
        },
        "/sn_chg_rest/change/standard/template/{sys_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change template to retrieve from the [std_change_record_producer] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getStandardChangeTemplateById",
                "summary": "Retrieves the standard change template identified by the specified sys_id.",
                "description": "Retrieves the standard change template identified by the specified sys_id.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the standard change template to retrieve from the [std_change_record_producer] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/normal": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getNormalChangeRequest",
                "summary": "Retrieves one or more normal change requests based on the specified criteria",
                "description": "Retrieves one or more normal change requests based on the specified criteria\n\n"
            },
            "post": {
                "tags": [
                    "Change Management"
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createNormalChangeRequest",
                "summary": "Creates one normal change request based on the default normal change request record.",
                "description": "Creates one normal change request based on the default normal change request record. Multiple normal change request creations within a single call is not supported."
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                }
            ]
        },
        "/sn_chg_rest/change/normal/{sys_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": "{\n    result: [\n        {\n            sys_id: {\n                value: \"1c87925347c12200e0ef563dbb9a7177\",\n                display_value: \"1c87925347c12200e0ef563dbb9a7177\"\n            },\n            state: {\n                value: \"-5\", \n                display_value: \"New\"\n            },\n            ..., // all valid fields in record, example below\n            short_description: {\n                value: \"Add network switch to cabinet\",\n                display_value: \"Add network switch to cabinet\"\n            },\n        }, \n    ]\n}"
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getNormalChangeRequestById",
                "summary": "Retrieves the normal change request identified by the specified sys_id.",
                "description": "Retrieves the normal change request identified by the specified sys_id.\n\n"
            },
            "delete": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "deleteNormalChangeRequestById",
                "summary": "Deletes the normal change request identified by the specified sys_id.",
                "description": "Deletes the normal change request identified by the specified sys_id.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/emergency": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getEmergencyChangeRequest",
                "summary": "Retrieves one or more emergency change requests based on the specified criteria.",
                "description": "Retrieves one or more emergency change requests based on the specified criteria.\n\n"
            },
            "post": {
                "tags": [
                    "Change Management"
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createEmergencyChangeRequest",
                "summary": "Creates one emergency change request based on the default emergency change request record.",
                "description": "Creates one emergency change request based on the default emergency change request record. Multiple emergency change request creations within a single call is not supported.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                }
            ]
        },
        "/sn_chg_rest/change/emergency/{sys_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": "{\n    result: [\n        {\n            sys_id: {\n                value: \"1c87925347c12200e0ef563dbb9a7177\",\n                display_value: \"1c87925347c12200e0ef563dbb9a7177\"\n            },\n            state: {\n                value: \"-5\", \n                display_value: \"New\"\n            },\n            ..., // all valid fields in record, example below\n            short_description: {\n                value: \"Add network switch to cabinet\",\n                display_value: \"Add network switch to cabinet\"\n            },\n        }, \n    ]\n}"
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getEmergencyChangeRequestById",
                "summary": "Retrieves the emergency change request identified by the specified sys_id.",
                "description": "Retrieves the emergency change request identified by the specified sys_id.\n\n"
            },
            "delete": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "deleteEmergencyChangeRequestById",
                "summary": "Deletes the emergency change request identified by the specified sys_id.",
                "description": "Deletes the emergency change request identified by the specified sys_id.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/{sys_id}/task": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query used to filter the result set.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change request to which to associate this task (from [change_request] table).\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getChangeRequestTask",
                "summary": "Retrieves one or more tasks associated with a specified change request based on the specified criteria.",
                "description": "Retrieves one or more tasks associated with a specified change request based on the specified criteria.\n\n"
            },
            "post": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change request to which to associate this task (from [change_request] table).\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createChangeRequestTask",
                "summary": "Creates one change request task based on the default change request task record.",
                "description": "Creates one change request task based on the default change request task record and associates it with the specified change request. Multiple change request task creations within a single call is not supported.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the change request to which to associate this task (from [change_request] table).\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/{sys_id}/task/{task_sys_id}": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change request to which the specified task is associated (from [change_request] table). Verifies that the specified task is associated with the specified change request.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "task_sys_id",
                        "description": "Unique identifier of the task to retrieve (from [change_task] table).\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": "{\n    result: [\n        {\n            sys_id: {\n                value: \"1c87925347c12200e0ef563dbb9a7177\",\n                display_value: \"1c87925347c12200e0ef563dbb9a7177\"\n            },\n            state: {\n                value: \"-5\", \n                display_value: \"New\"\n            },\n            ..., // all valid fields in record, example below\n            short_description: {\n                value: \"Add network switch to cabinet\",\n                display_value: \"Add network switch to cabinet\"\n            },\n        }, \n    ]\n}"
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getChangeTaskByTaskId",
                "summary": "Retrieves the task for the change request identified by the specified sys_ids.",
                "description": "Retrieves the task for the change request identified by the specified sys_ids.\n\n"
            },
            "delete": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change request to which the specified task is associated (from [change_request] table). Verifies that the specified task is associated with the specified change request.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "task_sys_id",
                        "description": "Unique identifier of the task to retrieve (from [change_task] table).\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "deleteChangeTaskByTaskId",
                "summary": "Deletes the change request task identified by the specified sys_ids.",
                "description": "Deletes the change request task identified by the specified sys_ids.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the change request to which the specified task is associated (from [change_request] table). Verifies that the specified task is associated with the specified change request.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "task_sys_id",
                    "description": "Unique identifier of the task to retrieve (from [change_task] table).\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_chg_rest/change/{sys_id}/conflict": {
            "summary": "The Change Management API provides REST APIs that enable third-party application integration with the ServiceNow Change Management process.",
            "description": "By integrating your application with the ServiceNow Change Management process, all change requests, regardless of where they are initiated, have a single source of truth, providing a single audit source.\n\nThese REST APIs enable integrators to:\n\n- Initiate a standard change request from a published standard change request template.\n\n- Create a change request of type emergency or normal.\n\n- Update any field that exists in the change request table for any change request type.\n\n- Update any field that exists in the change task table and work tasks from creation through closure/cancellation.\n\n- Retrieve a specific change request, standard template, or change request task.\n\n- Retrieve multiple change requests, standard templates, or change request tasks using pagination.\n\n- Generate and process any related approval activity associated with a change request.\n\n- Identify potential scheduling conflicts and identify periods where conflicts do not exist.\n\n- Delete change requests, change request tasks, and conflict checking processes.\n\nUse these REST APIs to integrate your change management process with external applications and when developing ServiceNow client-side applications. Also use these REST APIs as a reference model and guide to the scriptable APIs.\n\nIn addition, administrators can set change properties to configure Change Management behavior. For a list of these properties and a description of their available functionality, see Change Management properties.\n\n",
            "get": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change management request for which to start the conflict checking process (from [change_request] table). For additional information on the conflict checking process, see Conflict detection.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": "{\n    result: [\n        {\n            sys_id: {\n                value: \"1c87925347c12200e0ef563dbb9a7177\",\n                display_value: \"1c87925347c12200e0ef563dbb9a7177\"\n            },\n            state: {\n                value: \"-5\", \n                display_value: \"New\"\n            },\n            ..., // all valid fields in record, example below\n            short_description: {\n                value: \"Add network switch to cabinet\",\n                display_value: \"Add network switch to cabinet\"\n            },\n        }, \n    ]\n}"
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "getChangeRequestConflict",
                "summary": "Retrieves the status of the currently running change request conflict checking process",
                "description": "Retrieves the status of the currently running change request conflict checking process or the results of the last completed conflict checking process for the specified change request.\n\n"
            },
            "post": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the change management request for which to start the conflict checking process (from [change_request] table). For additional information on the conflict checking process, see Conflict detection.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad Request. Request was unable to start due to unresolvable errors. The returned message may provide additional details.\n"
                    }
                },
                "operationId": "createChangeRequestConflict",
                "summary": "Starts a change request conflict checking process for the specified change request (sys_id).",
                "description": "Starts a change request conflict checking process for the specified change request (sys_id).\n\n"
            },
            "delete": {
                "tags": [
                    "Change Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier of the standard change request to retrieve from the [change_request] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "400": {
                        "description": "Bad request. Cancel request failed.\n"
                    },
                    "404": {
                        "description": "Not Found. The specified record could not be found.\n"
                    }
                },
                "operationId": "cancelChangeRequestConflict",
                "summary": "Cancels the running conflict checking process for the specified change request (sys_id).",
                "description": "Cancels the running conflict checking process for the specified change request (sys_id).\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query used to filter the result set. e.g. change=CHG123456",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query"
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier of the change management request for which to start the conflict checking process (from [change_request] table). For additional information on the conflict checking process, see Conflict detection.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/import/{tableName}": {
            "summary": "The Import Set API allows you to interact with import set tables.",
            "description": "The Import Set API allows you to interact with import set tables.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": "{'first_name':'John','last_name':'Public','user_id':'john.public','email':'john.public@company.com'}"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Import Set"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "tableName",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Indicates the import completed successfully.\n"
                    }
                },
                "operationId": "importIntoTable",
                "summary": "Inserts incoming data into a specified staging table.",
                "description": "This method inserts incoming data into a specified staging table and triggers transformation based on predefined transform maps in the import set table.\n\n"
            },
            "parameters": [
                {
                    "name": "tableName",
                    "description": "tableName",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/import/{tableName}/{sys_id}": {
            "summary": "The Import Set API allows you to interact with import set tables.",
            "description": "The Import Set API allows you to interact with import set tables.\n\n",
            "get": {
                "tags": [
                    "Import Set"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "tableName",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sys_id",
                        "description": "sysId",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the query ran successfully.\n"
                    },
                    "404": {
                        "description": "Indicates the specified resource was not available. As import set tables are deleted frequently based on a schedule, GET requests may return 404 NotFound responses if the transformation result no longer exists.\n"
                    }
                },
                "operationId": "getImportById",
                "summary": "This method retrieves the specified import staging record and resulting transformation result.",
                "description": "This method retrieves the specified import staging record and resulting transformation result.\n\n"
            },
            "parameters": [
                {
                    "name": "tableName",
                    "description": "tableName",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "sysId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/cmdb/app_service/{sys_id}/getContent": {
            "summary": "Create, modify, and update application services using REST APIs.",
            "description": "Create, modify, and update application services using REST APIs.\n\n",
            "get": {
                "tags": [
                    "Application Service"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "sysId",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the query ran successfully.\n"
                    },
                    "404": {
                        "description": "Indicates the specified resource was not available. As import set tables are deleted frequently based on a schedule, GET requests may return 404 NotFound responses if the transformation result no longer exists.\n"
                    }
                },
                "operationId": "getApplicationById",
                "summary": "Retrieve a list of CIs in an application service and the relationships between them.",
                "description": "Retrieve a list of CIs in an application service and the relationships between them. Only retrieves content for services that were manually created.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "sysId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/cmdb/app_service/create": {
            "summary": "Create, modify, and update application services using REST APIs.",
            "description": "Create, modify, and update application services using REST APIs.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": "{\n\\\"name\\\": \\\"myTestAppService\\\",\n\\\"comments\\\": \\\"Passing data to the Comments field\\\",\n\\\"service_relations\\\": [\n{ \\\"parent\\\": \\\"\\\",\n\\\"child\\\": \\\"3a70f789c0a8ce010091b0ea635b982a\\\"\n},{ \\\"parent\\\": \\\"3a70f789c0a8ce010091b0ea635b982a\\\",\n\\\"child\\\": \\\"b4fd7c8437201000deeabfc8bcbe5dc1\\\"\n},{ \\\"parent\\\": \\\"b4fd7c8437201000deeabfc8bcbe5dc1\\\",\n\\\"child\\\": \\\"53fdbc8437201000deeabfc8bcbe5d10\\\"\n}\n]\n}"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Application Service"
                ],
                "responses": {
                    "201": {
                        "description": "Indicates the import completed successfully.\n"
                    }
                },
                "operationId": "createApplication",
                "summary": "Create an application service or update an existing application service.",
                "description": "Create an application service or update an existing application service.\n\n"
            }
        },
        "/now/email": {
            "summary": "With the Email API you can receive and send email messages using REST.",
            "description": "With the Email API you can receive and send email messages using REST.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": "{\n             \\\"to\\\": [\n                 \\\"User1 <user1@example.com>\\\",\n                 \\\"User2 <user2@example.com>\\\"\n             ],\n             \\\"cc\\\": [\n                 \\\"User3 <user3@example.com>\\\",\n                 \\\"User4 <user4@example.com>\\\"\n             ],\n             \\\"bcc\\\": [\n                 \\\"User5 <user5@example.com>\\\",\n                 \\\"User6 <user6@example.com>\\\"\n             ],\n             \\\"subject\\\": \\\"Hello There\\\",\n             \\\"text\\\": \\\"Test Message\\\",\n             \\\"html\\\": \\\"<b>Test Message</b>\\\",\n             \\\"table_name\\\": \\\"incident\\\",\n             \\\"table_record_id\\\": \\\"136b2140bd0312004d7d1371f1abbdb6\\\",\n             \\\"headers\\\": {\n                 \\\"X-Custom\\\": \\\"header\\\"\n             }\n         }"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Email"
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully.\n"
                    },
                    "400": {
                        "description": "Indicates that there is an error with the request message. The response body contains information about the error.\n"
                    },
                    "403": {
                        "description": "Indicates that the requesting user does not have access to the record. Verify that the user has the proper role and access permissions.\n"
                    },
                    "500": {
                        "description": "Indicates that there is an unexpected or internal error.\n"
                    }
                },
                "operationId": "createEmail",
                "summary": "This method creates the email record specified in the request body.",
                "description": "This method creates the email record specified in the request body.\n\n"
            }
        },
        "/now/email/{sys_id}": {
            "summary": "With the Email API you can receive and send email messages using REST.",
            "description": "With the Email API you can receive and send email messages using REST.\n\n",
            "get": {
                "tags": [
                    "Email"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "sysId",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the request completed successfully. If a valid query returned no results, the response body contains only an empty result array.\n"
                    },
                    "403": {
                        "description": "Indicates the record is not found or the requesting user does not have access to the record. Verify the user has the proper role and access permissions.\n"
                    }
                },
                "operationId": "getEmail",
                "summary": "This method returns the record details of the specified email record.",
                "description": "This method returns the record details of the specified email record.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "sysId",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/push/{pushApplicationName}/installation": {
            "summary": "A push notification is a text message that appears on a user's mobile device to alert them about something",
            "description": "The Push Installation API enables you to register and unregister the tokens that enable mobile devices to receive push notifications from an application.\n\nA push notification is a text message that appears on a user's mobile device to alert them about something important or to ask them to perform an action. Before using this API, you must register your mobile application with the manufacturer, such as Apple, to acquire a token.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": {
                                        "platform": "Apple"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Push Installation"
                ],
                "parameters": [
                    {
                        "name": "pushApplicationName",
                        "description": "Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully.\n"
                    },
                    "400": {
                        "description": "Indicates that there is an error with the request message. The response body contains information about the error.\n"
                    },
                    "500": {
                        "description": "Indicates that there is an unexpected or internal error.\n"
                    }
                },
                "operationId": "removeInstallation",
                "summary": "Adds or updates tokens that enable devices to receive push notifications from the specified application.",
                "description": "Adds or updates tokens that enable devices to receive push notifications from the specified application.\n\n"
            },
            "parameters": [
                {
                    "name": "pushApplicationName",
                    "description": "Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/push/{pushApplicationName}/removeInstallation": {
            "summary": "A push notification is a text message that appears on a user's mobile device to alert them about something",
            "description": "The Push Installation API enables you to register and unregister the tokens that enable mobile devices to receive push notifications from an application.\n\nA push notification is a text message that appears on a user's mobile device to alert them about something important or to ask them to perform an action. Before using this API, you must register your mobile application with the manufacturer, such as Apple, to acquire a token.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": {
                                        "platform": "Apple",
                                        "token": "544836d77ac2e551bbf78204630509a7d494fc87f52e85da52e5b5d42910e2cf"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Push Installation"
                ],
                "parameters": [
                    {
                        "name": "pushApplicationName",
                        "description": "Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully.\n"
                    },
                    "400": {
                        "description": "Indicates that there is an error with the request message. The response body contains information about the error.\n"
                    },
                    "403": {
                        "description": "Indicates that the requesting user does not have access to the record. Verify that the user has the proper role and access permissions.\n"
                    },
                    "500": {
                        "description": "Indicates that there is an unexpected or internal error.\n"
                    }
                },
                "operationId": "pushInstallation",
                "summary": "Adds or updates tokens that enable devices to receive push notifications from the specified application.",
                "description": "Adds or updates tokens that enable devices to receive push notifications from the specified application.\n\n"
            },
            "parameters": [
                {
                    "name": "pushApplicationName",
                    "description": "Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/v1/clotho/table/{table}/{subject}/{metric}": {
            "summary": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.",
            "description": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.\n\n",
            "get": {
                "tags": [
                    "MetricBase Time Series"
                ],
                "parameters": [
                    {
                        "name": "table",
                        "description": "Name of the table containing the GlideRecord associated with this series.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "subject",
                        "description": "The sys_id of the GlideRecord associated with this series.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "metric",
                        "description": "The field name of the metric.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sysparm_end",
                        "description": "The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "sysparm_start",
                        "description": "The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "getMetricBase",
                "summary": "Retrieve time series data from the MetricBase database.",
                "description": "Retrieve time series data from the MetricBase database.\n\n"
            },
            "parameters": [
                {
                    "name": "table",
                    "description": "Name of the table containing the GlideRecord associated with this series.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "subject",
                    "description": "The sys_id of the GlideRecord associated with this series.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "metric",
                    "description": "The field name of the metric.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sysparm_start",
                    "description": "The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sysparm_end",
                    "description": "The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/v1/clotho/transform/{table}/{metric}": {
            "summary": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.",
            "description": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.\n\n",
            "get": {
                "tags": [
                    "MetricBase Time Series"
                ],
                "parameters": [
                    {
                        "name": "table",
                        "description": "Name of the table containing the GlideRecord associated with this series.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "metric",
                        "description": "The field name of the metric.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sysparm_end",
                        "description": "The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "sysparm_start",
                        "description": "The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "transformMetricBase",
                "summary": "Transforms selected data.",
                "description": "Transforms selected data.\n\n"
            },
            "parameters": [
                {
                    "name": "table",
                    "description": "Name of the table containing the GlideRecord associated with this series.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "metric",
                    "description": "The field name of the metric.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sysparm_start",
                    "description": "The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sysparm_end",
                    "description": "The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/v1/clotho/put": {
            "summary": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.",
            "description": "Use the MetricBase Time Series API to insert data into, retrieve information from, and to run transforms against a MetricBase database.\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "data": {
                                    "value": "{\n  \\\"seriesRef\\\": {\n    \\\"subject\\\": \\\"3D666b051787333200a328c5b836cb0b92\\\",\n    \\\"table\\\": \\\"mb_demo_drone\\\",\n    \\\"metric\\\": \\\"mb_demo_mt_altitude\\\"\n  },\n  \\\"values\\\": [\n    {\n      \\\"timestamp\\\": \\\"2019-03-21T17:05:00Z\\\",\n      \\\"value\\\": 0.150185\n    },\n    {\n      \\\"timestamp\\\": \\\"2019-03-21T17:06:00Z\\\",\n      \\\"value\\\": 0.46074\n    },\n    {\n      \\\"timestamp\\\": \\\"2019-03-21T17:07:00Z\\\",\n      \\\"value\\\": 0.83104\n    },\n    {\n      \\\"timestamp\\\": \\\"2019-03-21T17:08:00Z\\\",\n      \\\"value\\\": 1.260635\n    },\n    {\n      \\\"timestamp\\\": \\\"2019-03-21T17:09:00Z\\\",\n      \\\"value\\\": 1.749\n    }\n  ]\n}"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "MetricBase Time Series"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "createMetricBase",
                "summary": "Adds time-series data to the MetricBase database.",
                "description": "Adds time-series data to the MetricBase database.\n\n"
            }
        },
        "/now/stats/{tableName}": {
            "summary": "The Aggregate API allows you to compute aggregate statistics about existing table and column data.",
            "description": "The Aggregate API allows you to compute aggregate statistics about existing table and column data.\n\n",
            "get": {
                "tags": [
                    "Aggregate"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "An encoded query.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "tableName",
                        "description": "tableName",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully.\n"
                    }
                },
                "operationId": "getAggregate",
                "summary": "This method retrieves records for the specified table and performs aggregate functions on the returned values.",
                "description": "This method retrieves records for the specified table and performs aggregate functions on the returned values.\n\n"
            },
            "parameters": [
                {
                    "name": "tableName",
                    "description": "tableName",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sysparm_query",
                    "description": "An encoded query.\n",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/awa/queues/{sys_id}/work_item": {
            "summary": "Use the Queue API (Advanced Work Assignment) to route a document to a queue.",
            "description": "Use the Queue API (Advanced Work Assignment) to route a document to a queue.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Queue"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique ID of the queue record from the awa_queue table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request completed successfully.\n"
                    },
                    "404": {
                        "description": "The requested resource was not found. This can be caused by an ACL constraint or if the resource does not exist.\n"
                    }
                },
                "operationId": "createQueue",
                "summary": "If an active work item exists, routes a document to a queue.",
                "description": "If an active work item exists, routes a document to a queue. If an active work item does not exist for the specified document, this creates a work item and set its fields accordingly.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique ID of the queue record from the awa_queue table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/global/user_role_inheritance": {
            "summary": "The User Role Inheritance API allows you to see the roles that a specific user inherited.",
            "description": "The User Role Inheritance API allows you to see the roles that a specific user inherited.\n\n",
            "get": {
                "tags": [
                    "User Role Inheritance"
                ],
                "parameters": [
                    {
                        "name": "user_sysid",
                        "description": "Required. sys_id of the user for which to return role information.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully.\n"
                    }
                },
                "operationId": "getUserRoles",
                "summary": "Returns a specified user's granted and inherited roles.",
                "description": "Returns a specified user's granted and inherited roles.\n\n"
            },
            "parameters": [
                {
                    "name": "user_sysid",
                    "description": "Required. sys_id of the user for which to return role information.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/pa/scorecards": {
            "summary": "The Performance Analytics REST API enables you to query data about Performance Analytics Analytics Hubs.",
            "description": "The Performance Analytics REST API enables you to query data about Performance Analytics Analytics Hubs.\n\n",
            "get": {
                "tags": [
                    "Performance Analytics"
                ],
                "parameters": [
                    {
                        "name": "sysparm_uuid",
                        "description": "Enter a colon-separated list of sys_id values to specify which indicators, breakdowns, aggregates, and domains to query. \n\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the query ran successfully.\n"
                    }
                },
                "operationId": "getPerformanceAnalytics",
                "summary": "This method retrieves details about indicators from the Analytics Hub.",
                "description": "This method retrieves details about indicators from the Analytics Hub.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_uuid",
                    "description": "Enter a colon-separated list of sys_id values to specify which indicators, breakdowns, aggregates, and domains to query. \n\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/channels": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "get": {
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_table",
                        "description": "Table name of task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "getChannelsForTable",
                "summary": "This method returns the list of channels for a given task record.",
                "description": "This method returns the list of channels for a given task record.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_table",
                    "description": "Table name of task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/channels_per_task/{commTaskSysId}/{table}": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "get": {
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "commTaskSysId",
                        "description": "Sys id of communication task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "table",
                        "description": "Name of the table defined in the comm_task_handler table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "getChannelsForTableByTaskId",
                "summary": "This method returns meta data of all channels associated with a given communication task id and table.",
                "description": "This method returns meta data of all channels associated with a given communication task id and table. The table name is derived from communication task handler.\n\n"
            },
            "parameters": [
                {
                    "name": "commTaskSysId",
                    "description": "Sys id of communication task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "table",
                    "description": "Name of the table defined in the comm_task_handler table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/communication_detail/{taskSysId}": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "get": {
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "taskSysId",
                        "description": "Sys id of the task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "getCommunicationGroupPlans",
                "summary": "This method returns list of communication plans that includes communication tasks and channels.",
                "description": "This method returns list of communication plans that includes communication tasks and channels.\n\n"
            },
            "parameters": [
                {
                    "name": "taskSysId",
                    "description": "Sys id of the task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/groups/{taskSysId}": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "get": {
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "taskSysId",
                        "description": "Sys id of the task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "getCommunicationPlans",
                "summary": "This method returns list of communication plans that includes communication tasks and channels.",
                "description": "This method returns list of communication plans that includes communication tasks and channels.\n\n"
            },
            "parameters": [
                {
                    "name": "taskSysId",
                    "description": "Sys id of the task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/comm_plan/{commPlanSysId}/recipients": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    }
                },
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_table",
                        "description": "Table name of task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "commPlanSysId",
                        "description": "Sys id of the communication plan.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "manageCommunicationRecipients",
                "summary": "This method manages the recipients of a communication plan.",
                "description": "This method manages the recipients of a communication plan.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_table",
                    "description": "Table name of task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "commPlanSysId",
                    "description": "Sys id of the communication plan.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/adhoc/comm_plan": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    }
                },
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_table",
                        "description": "Table name of task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "createCommunicationPlan",
                "summary": "Create a communication plan and communication task instance",
                "description": "This method is used to create a communication plan and communication task instance without any communication plan or communication task definition.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_table",
                    "description": "Table name of task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/adhoc/comm_task": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    }
                },
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_table",
                        "description": "Table name of task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "createCommunicationTask",
                "summary": "This method is used to create a communication task instance.",
                "description": "This method is used to create a communication task instance.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_table",
                    "description": "Table name of task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/send_updates/{commTaskSysId}/{table}": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    }
                },
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "commTaskSysId",
                        "description": "Sys id of communication task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "table",
                        "description": "Name of the table defined in the comm_task_handler table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "getCommunicationTaskState",
                "summary": "This method returns success status if the channel task is successfully completed.",
                "description": "This method returns success status if the channel task is successfully completed.\n\n"
            },
            "parameters": [
                {
                    "name": "commTaskSysId",
                    "description": "Sys id of communication task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "table",
                    "description": "Name of the table defined in the comm_task_handler table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_comm_management/task_communication_management/update_state_wb_actions/{commTaskSysId}/{table}": {
            "summary": "Use the Task Communication Management API to perform read operations for communication plans.",
            "description": "Use the Task Communication Management API to perform read operations for communication plans.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    }
                },
                "tags": [
                    "Task Communication Management"
                ],
                "parameters": [
                    {
                        "name": "commTaskSysId",
                        "description": "Sys id of communication task.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "table",
                        "description": "Name of the table defined in the comm_task_handler table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    }
                },
                "operationId": "updateCommunicationTask",
                "summary": "This method performs specified action on communication tasks.",
                "description": "This method performs specified action on communication tasks.\n\n"
            },
            "parameters": [
                {
                    "name": "commTaskSysId",
                    "description": "Sys id of communication task.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "table",
                    "description": "Name of the table defined in the comm_task_handler table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/attachment/{sys_id}": {
            "summary": "The Attachment API allows you to upload and query file attachments.",
            "description": "The Attachment API allows you to upload and query file attachments.\n\n",
            "get": {
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "The sys_id of the attachment record you want to get metadata for.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the query ran successfully.\n"
                    }
                },
                "operationId": "getAttachmentMetadataById",
                "summary": "This method gets the metadata for the attachment file with a specific sys_id value.",
                "description": "This method gets the metadata for the attachment file with a specific sys_id value.\n\n"
            },
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request ran successfully.\n"
                    }
                },
                "operationId": "deleteAttachmentById",
                "summary": "This method deletes the attachment with a specific sys_id value.",
                "description": "This method deletes the attachment with a specific sys_id value.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "The sys_id of the attachment record you want to get metadata for.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/attachment/{sys_id}/file": {
            "summary": "The Attachment API allows you to upload and query file attachments.",
            "description": "The Attachment API allows you to upload and query file attachments.\n\n",
            "get": {
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "The sys_id of the attachment record you want to get metadata for.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the query ran successfully.\n"
                    }
                },
                "operationId": "getAttachmentBinaryById",
                "summary": "This method gets the binary file attachment with a specific sys_id value.",
                "description": "This method gets the binary file attachment with a specific sys_id value.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "The sys_id of the attachment record you want to get metadata for.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/attachment/upload": {
            "summary": "The Attachment API allows you to upload and query file attachments.",
            "description": "The Attachment API allows you to upload and query file attachments.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "201": {
                        "description": "Indicates the query ran successfully.\n"
                    }
                },
                "operationId": "uploadMultipartAttachment",
                "summary": "This method uploads a multipart file attachment.",
                "description": "This method uploads a multipart file attachment.\n\n"
            }
        },
        "/now/attachment": {
            "summary": "The Attachment API allows you to upload and query file attachments.",
            "description": "The Attachment API allows you to upload and query file attachments.\n\n",
            "get": {
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "e.g. table_sys_id=c83c5e5347c12200e0ef563dbb9a7190",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates the query ran successfully.\n"
                    }
                },
                "operationId": "getAttachmentsMetadata",
                "summary": "This method gets the metadata for multiple attachments.",
                "description": "This method gets the metadata for multiple attachments.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "An encoded query. Queries for the Attachment API are relative to the Attachments [sys_attachment] table.\nFor example: (sysparm_query=file_name=attachment.doc)",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/attachment/file": {
            "summary": "The Attachment API allows you to upload and query file attachments.",
            "description": "The Attachment API allows you to upload and query file attachments.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "file_name",
                        "description": "The name to give the attachment. This parameter is required to post an attachment.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "table_name",
                        "description": "The name of the table you want to attach the file to. This parameter is required to post an attachment.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "table_sys_id",
                        "description": "The sys_id of the record on the specified table that you want to attach the file to. This parameter is required to post an attachment.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Indicates the query ran successfully.\n"
                    },
                    "400": {
                        "description": "Indicates that one or more mandatory parameters were missing from the request.\n"
                    },
                    "404": {
                        "description": "Indicates the record specified by the table_name and table_sys_id parameters does not exist or is not accessible by the current user.\n"
                    }
                },
                "operationId": "uploadAttachment",
                "summary": "This method uploads a binary file specified in the request body as an attachment.",
                "description": "This method uploads a binary file specified in the request body as an attachment.\n\n"
            },
            "parameters": [
                {
                    "name": "file_name",
                    "description": "The name to give the attachment. This parameter is required to post an attachment.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "table_name",
                    "description": "The name of the table you want to attach the file to. This parameter is required to post an attachment.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "table_sys_id",
                    "description": "The sys_id of the record on the specified table that you want to attach the file to. This parameter is required to post an attachment.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "encryption_context",
                    "description": "The sys_id of an encryption context record. Specify this parameter to allow only users with the specified encryption context to access the attachment. If you do not specify this parameter, the attached file is not encrypted with any encryption context.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                }
            ]
        },
        "/now/account/{id}": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "404": {
                        "description": "Indicates that the request is invalid. Could be due to one of the following reasons:\nRequested case does not exist.\nUser does not have access to the account record."
                    }
                },
                "operationId": "getCSMAccount",
                "summary": "Retrieves the specified CSM account.",
                "description": "Retrieves the specified CSM account.\n\n"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/account": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "queryCSMAccounts",
                "summary": "Retrieves a specified set of CSM accounts.",
                "description": "<p>Gets the user information for the specified ID.</p><br/><b>Sample Request (Python)</b><pre>import&nbsp;http.client<br/><br/>conn&nbsp;=&nbsp;http.client.HTTPSConnection(&quot;HOSTNAME&quot;)<br/><br/>headers&nbsp;=&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;'content-type':&nbsp;&quot;application/json&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;'cache-control':&nbsp;&quot;no-cache&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;'cookie':&nbsp;&quot;JSESSIONID=xxxxxxx&quot;<br/>}<br/><br/>conn.request(&quot;GET&quot;,&nbsp;&quot;/api/v1/users/72548&quot;,&nbsp;headers=headers)<br/><br/>res&nbsp;=&nbsp;conn.getresponse()<br/>data&nbsp;=&nbsp;res.read()<br/><br/>print(data.decode(&quot;utf-8&quot;))</pre> <br/> <b>Sample Response</b><pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;72548,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;тест1&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;email&quot;:&nbsp;&quot;admin2@antest.com&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;groups&quot;:&nbsp;[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;75444,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;testgroup&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;],<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;department&quot;:&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;72520,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;Service&nbsp;Admin&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;comments&quot;:&nbsp;&quot;test&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;adminUser&quot;:&nbsp;true<br/>}</pre>\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_customerservice/case/{id}": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier (sys_id) of the case to retrieve; located in the Case [sn_customerservice_case] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "404": {
                        "description": "Indicates that the request is invalid. Could be due to one of the following reasons:\nRequested case does not exist.\nUser does not have access to the account record."
                    }
                },
                "operationId": "getCSMCase",
                "summary": "Retrieves the specified CSM case.",
                "description": "Retrieves the specified CSM case.\n\n"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier (sys_id) of the case to retrieve; located in the Case [sn_customerservice_case] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "updateCSMCase",
                "summary": "Updates the specified existing CSM case with the passed-in parameters.",
                "description": "Updates the specified existing CSM case with the passed-in parameters.\n\n"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Unique identifier (sys_id) of the case to retrieve; located in the Case [sn_customerservice_case] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_customerservice/case": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "queryCSMCases",
                "summary": "Retrieves a specified set of CSM cases.",
                "description": "Retrieves a specified set of CSM cases.\n\n"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Customer Service Management"
                ],
                "responses": {
                    "201": {
                        "description": "New case record was successfully created.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createCSMCase",
                "summary": "Creates a new CSM case.",
                "description": "Creates a new CSM case.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/consumer/{id}": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "404": {
                        "description": "Indicates that the request is invalid. Could be due to one of the following reasons:\nRequested case does not exist.\nUser does not have access to the account record."
                    }
                },
                "operationId": "getCSMConsumer",
                "summary": "Retrieves the specified CSM consumer record.",
                "description": "Retrieves the specified CSM consumer record.\n\n"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/consumer": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "queryCSMConsumers",
                "summary": "Retrieves a specified set of CSM consumer records.",
                "description": "Retrieves a specified set of CSM consumer records.\n\n"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Customer Service Management"
                ],
                "responses": {
                    "201": {
                        "description": "New consumer record was successfully created.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createCSMConsumer",
                "summary": "Creates a new CSM consumer.",
                "description": "Creates a new CSM consumer.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/contact": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "queryCSMContacts",
                "summary": "Retrieves a specified set of CSM contacts.",
                "description": "Retrieves a specified set of CSM contacts.\n\n"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Customer Service Management"
                ],
                "responses": {
                    "201": {
                        "description": "New contact record was successfully created.\n"
                    },
                    "400": {
                        "description": "Bad Request. A bad request type or malformed request was detected.\n"
                    },
                    "500": {
                        "description": "Internal Server Error. A logic error on the server-side code occurred.\n"
                    }
                },
                "operationId": "createCSMContact",
                "summary": "Creates a new CSM contact.",
                "description": "Creates a new CSM contact.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_query",
                    "description": "Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.\n",
                    "schema": {
                        "type": "object"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/now/contact/{id}": {
            "summary": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.",
            "description": "The Customer Service Management (CSM) REST API enables you to retrieve account, case, contact, and consumer CSM records, and create and update case, contact, and consumer records.\n\n",
            "get": {
                "tags": [
                    "Customer Service Management"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has successfully completed.\n"
                    },
                    "404": {
                        "description": "Indicates that the request is invalid. Could be due to one of the following reasons:\nRequested case does not exist.\nUser does not have access to the account record."
                    }
                },
                "operationId": "getCSMContact",
                "summary": "Retrieves the specified CSM contact.",
                "description": "Retrieves the specified CSM contact.\n\n"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/catalogs": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sysparm_limit",
                        "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.\n"
                    }
                },
                "operationId": "getServiceCatalogs",
                "summary": "Retrieves a list of catalogs to which the user has access based on the passed in parameters.",
                "description": "Retrieves a list of catalogs to which the user has access based on the passed in parameters.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/catalogs/{sys_id}": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has completed successfully and returns the available information for the specified catalog.\n"
                    },
                    "400": {
                        "description": "Indicates that request is invalid for one of the following reasons:\nUser does not have access to the catalog.\nInvalid sys_id."
                    },
                    "500": {
                        "description": "Internal error occurred while executing the request.\n"
                    }
                },
                "operationId": "getServiceCatalogById",
                "summary": "Retrieves the available information for a specified catalog.",
                "description": "Retrieves the available information for a specified catalog.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/catalogs/{sys_id}/categories": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has completed successfully and returns the available information for the specified catalog.\n"
                    },
                    "400": {
                        "description": "Indicates that request is invalid for one of the following reasons:\nUser does not have access to the catalog.\nInvalid sys_id."
                    },
                    "500": {
                        "description": "Internal error occurred while executing the request.\n"
                    }
                },
                "operationId": "getServiceCatalogCategoryInformation",
                "summary": "Retrieves the available information for a specified category.",
                "description": "Retrieves the available information for a specified category.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/categories/{sys_id}": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has completed successfully and returns the available information for the specified catalog.\n"
                    },
                    "400": {
                        "description": "Indicates that request is invalid for one of the following reasons:\nUser does not have access to the catalog.\nInvalid sys_id."
                    },
                    "500": {
                        "description": "Internal error occurred while executing the request.\n"
                    }
                },
                "operationId": "getServiceCatalogCategories",
                "summary": "Retrieves the list of available categories for the specified catalog.",
                "description": "Retrieves the list of available categories for the specified catalog.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sysparm_catalog",
                        "description": "Catalog sys_id of the item. Use this parameter to locate items in a specific catalog.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "sysparm_category",
                        "description": "Category sys_id of the item. Use this parameter to locate catalog items in a specific category.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.\n"
                    },
                    "500": {
                        "description": "Internal error.\n"
                    }
                },
                "operationId": "getServiceCatalogItems",
                "summary": "Retrieves a list of catalog items based on the specified parameters.",
                "description": "Retrieves a list of catalog items based on the specified parameters.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request has completed successfully and returns the available information for the specified catalog.\n"
                    },
                    "400": {
                        "description": "Indicates that request is invalid for one of the following reasons:\nUser does not have access to the catalog.\nInvalid sys_id."
                    },
                    "500": {
                        "description": "Internal error occurred while executing the request.\n"
                    }
                },
                "operationId": "getServiceCatalogItemById",
                "summary": "Retrieves a specified catalog item.",
                "description": "Retrieves a specified catalog item.\n\n"
            },
            "parameters": [
                {
                    "name": "sysparm_limit",
                    "description": "Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "sys_id",
                    "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}/add_to_cart": {
            "summary": "Adds the specified item to the cart of the current user.",
            "description": "Adds the specified item to the cart of the current user.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.\n"
                    },
                    "400": {
                        "description": "The following errors can occur:\nInvalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.\nSecurity constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.\nMandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request."
                    }
                },
                "operationId": "addItemToCart",
                "summary": "Adds the specified item to the cart of the current user.",
                "description": "Adds the specified item to the cart of the current user.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}/submit_producer": {
            "summary": "Retrieves a list of items based on the needs described for an order guide.",
            "description": "Retrieves a list of items based on the needs described for an order guide.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.\n"
                    },
                    "400": {
                        "description": "Indicates that the request is invalid. Could be due to one of the following reasons:\nUser does not have access to the item.\nMandatory variables of one or more items have not been answered. (Only variables defined as mandatory are honored.)"
                    },
                    "500": {
                        "description": "Internal error while calculating items depending on options chosen.\n"
                    }
                },
                "operationId": "getServiceCatalogOrderItems",
                "summary": "Retrieves a list of items based on the needs described for an order guide.",
                "description": "Retrieves a list of items based on the needs described for an order guide.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}/submit_guide": {
            "summary": "Creates a record and returns the Table API relative path and redirect URL to access the created record.",
            "description": "Creates a record and returns the Table API relative path and redirect URL to access the created record.\n\n",
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.\n"
                    },
                    "400": {
                        "description": "The following errors can occur:\nInvalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.\nSecurity constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.\nMandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request."
                    }
                },
                "operationId": "createServiceCatalogRecordGuide",
                "summary": "Creates a record and returns the Table API relative path and redirect URL to access the created record.",
                "description": "Creates a record and returns the Table API relative path and redirect URL to access the created record.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}/checkout_guide": {
            "summary": "Retrieves an array of contents requested for checkout.",
            "description": "Retrieves an array of contents requested for checkout.",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.\n"
                    },
                    "400": {
                        "description": "The following errors can occur:\nInvalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.\nSecurity constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.\nMandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request."
                    }
                },
                "operationId": "getServiceCatalogCheckoutInformation",
                "summary": "Retrieves an array of contents requested for checkout.",
                "description": "Retrieves an array of contents requested for checkout.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/items/{sys_id}/order_now": {
            "summary": "Orders the specified catalog item.",
            "description": "Orders the specified catalog item.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.\n"
                    },
                    "400": {
                        "description": "JSON object containing the variable name and the value. If there are mandatory variables defined for the item, they must be passed to the endpoint.\n"
                    }
                },
                "operationId": "orderNowServiceCatalog",
                "summary": "Orders the specified catalog item.",
                "description": "Orders the specified catalog item.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/cart": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.\n"
                    },
                    "400": {
                        "description": "Indicates that the cart is empty and cannot check out.\n"
                    }
                },
                "operationId": "getServiceCatalogCart",
                "summary": "Retrieves the details of the items within the logged in user's cart.",
                "description": "Retrieves the details of the items within the logged in user's cart.\n\n"
            }
        },
        "/sn_sc/servicecatalog/cart/delivery_address/{user_id}": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "get": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "Unique sys_id of the user whose shipping address is to be retrieved.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.\n"
                    },
                    "400": {
                        "description": "User sys_id is invalid.\n"
                    }
                },
                "operationId": "getServiceCatalogUserDeliveryAddress",
                "summary": "Retrieves the shipping address of the specified user.",
                "description": "Retrieves the shipping address of the specified user.\n\n"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "description": "Unique sys_id of the user whose shipping address is to be retrieved.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/cart/{cart_item_id}": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "put": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "cart_item_id",
                        "description": "Unique identifier of the cart item to update.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Indicates that the request completed successfully and that the item is added to the cart.\n"
                    },
                    "400": {
                        "description": "Following three errors can occur:\nInvalid quantity value:Indicates that either the sysparm_quantity parameter is not provided or contains invalid value.\nSecurity constraints prevent ordering of Item:Indicates that either the item ID specified in the path parameters is either invalid or the user does not have access to the item.\nMandatory Variables are required:Indicates that one or more of the mandatory variable values is not provided in the request."
                    }
                },
                "operationId": "updateServiceCatalogCart",
                "summary": "Updates the specified item in the logged in user's cart.",
                "description": "Updates the specified item in the logged in user's cart.\n\n"
            },
            "delete": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "cart_item_id",
                        "description": "Unique identifier of the cart item to update.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates that the request completed successfully and the specified item was deleted from the cart.\n"
                    },
                    "400": {
                        "description": "Indicates that either the specified cart_item_id is invalid or the user does not have access to the cart item.\n"
                    }
                },
                "operationId": "deleteServiceCatalogCartItems",
                "summary": "Deletes the specified item from the current cart.",
                "description": "Deletes the specified item from the current cart.\n\n"
            },
            "parameters": [
                {
                    "name": "cart_item_id",
                    "description": "Unique identifier of the cart item to update.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/variables/{sys_id}/display_value": {
            "summary": "Returns the display value of the specified variable.",
            "description": "Returns the display value of the specified variable.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique sys_id of the item to add to the current cart.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. Returns the display value of the variable.\n"
                    }
                },
                "operationId": "getServiceCatalogDisplayVariable",
                "summary": "Returns the display value of the specified variable.",
                "description": "Returns the display value of the specified variable.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique sys_id of the item to add to the current cart.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/cart/{sys_id}/empty": {
            "summary": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.",
            "description": "The Service Catalog API lets you access Service Catalog configuration and actions from within the Service Portal.\n\n",
            "delete": {
                "tags": [
                    "Service Catalog"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully and the items in the cart are successfully checked out.\n"
                    },
                    "400": {
                        "description": "Indicates an error for one of the following reasons:\nInvalid cartId.\nUser does not have admin/catalog_admin role, or is trying to empty another user "
                    }
                },
                "operationId": "deleteServiceCatalogCart",
                "summary": "Deletes a specified cart, and the contents of the cart.",
                "description": "Deletes a specified cart, and the contents of the cart. The capabilities of what a user can delete (items and/or cart) depends on the role in which they use to authenticate.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Unique identifier (sys_id) of the catalog to retrieve.\n",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_sc/servicecatalog/cart/checkout": {
            "summary": "Retrieves and processes the checkout for the current cart based on whether the two-step checkout process is enabled.",
            "description": "Retrieves and processes the checkout for the current cart based on whether the two-step checkout process is enabled.\n\n",
            "post": {
                "tags": [
                    "Service Catalog"
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully. Returns the total and subtotal information and information on the items in the cart.\n"
                    },
                    "400": {
                        "description": "Indicates that the cart is empty and cannot check out.\n"
                    }
                },
                "operationId": "checkoutCartServiceCatalog",
                "summary": "Retrieves and processes the checkout for the current cart based on whether the two-step checkout process is enabled.",
                "description": "Retrieves and processes the checkout for the current cart based on whether the two-step checkout process is enabled.\n\n"
            }
        },
        "/sn_sc/servicecatalog/cart/submit_order": {
            "summary": "Checks out the user cart, based on the current check-out type (one-step or two-step ).",
            "description": "Checks out the user cart, based on the current check-out type (one-step or two-step ).\n\n",
            "post": {
                "tags": [
                    "Service Catalog"
                ],
                "responses": {
                    "200": {
                        "description": "Indicates that the request completed successfully and the items in the cart are successfully checked out.\n"
                    },
                    "400": {
                        "description": "Indicates that the user cart is empty.\n"
                    }
                },
                "operationId": "submitOrderServiceCatalog",
                "summary": "Checks out the user cart, based on the current check-out type (one-step or two-step ).",
                "description": "Checks out the user cart, based on the current check-out type (one-step or two-step ).\n\n"
            }
        },
        "/now/table/{tableName}": {
            "summary": "The Table API allows you to perform create, read, update, and delete (CRUD) operations on existing tables.",
            "description": "The Table API allows you to perform create, read, update, and delete (CRUD) operations on existing tables.",
            "get": {
                "tags": [
                    "Table"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "Name of the table from which to retrieve the records.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "sysparm_query",
                        "description": "e.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "name-value-pairs": {
                                        "value": {
                                            "result": {
                                                "upon_approval": "",
                                                "location": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba",
                                                    "value": "105cf7f3c611227501e75e08b14a38ba"
                                                },
                                                "expected_start": "",
                                                "reopen_count": "",
                                                "close_notes": "",
                                                "additional_assignee_list": "",
                                                "impact": "1",
                                                "urgency": "3",
                                                "correlation_id": "",
                                                "sys_tags": "",
                                                "sys_domain": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/global",
                                                    "value": "global"
                                                },
                                                "description": "",
                                                "group_list": "",
                                                "priority": "3",
                                                "delivery_plan": "",
                                                "sys_mod_count": "4",
                                                "work_notes_list": "",
                                                "business_service": "",
                                                "follow_up": "",
                                                "closed_at": "",
                                                "sla_due": "2015-11-11 22:04:15",
                                                "delivery_task": "",
                                                "sys_updated_on": "2015-11-01 22:37:27",
                                                "parent": "",
                                                "work_end": "",
                                                "number": "INC0000046",
                                                "closed_by": "",
                                                "work_start": "",
                                                "calendar_stc": "",
                                                "category": "software",
                                                "business_duration": "",
                                                "incident_state": "1",
                                                "activity_due": "",
                                                "correlation_display": "",
                                                "company": "",
                                                "active": "true",
                                                "due_date": "",
                                                "assignment_group": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7",
                                                    "value": "8a4dde73c6112278017a6a4baf547aa7"
                                                },
                                                "caller_id": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7",
                                                    "value": "46c6f9efa9fe198101ddf5eed9adf6e7"
                                                },
                                                "knowledge": "false",
                                                "made_sla": "false",
                                                "comments_and_work_notes": "",
                                                "parent_incident": "",
                                                "state": "1",
                                                "user_input": "",
                                                "sys_created_on": "2015-11-01 22:05:30",
                                                "approval_set": "",
                                                "reassignment_count": "1",
                                                "rfc": "",
                                                "child_incidents": "",
                                                "opened_at": "2015-11-02 22:04:15",
                                                "short_description": "Can't access SFA software",
                                                "order": "",
                                                "sys_updated_by": "glide.maint",
                                                "resolved_by": "",
                                                "notify": "1",
                                                "upon_reject": "",
                                                "approval_history": "",
                                                "problem_id": {
                                                    "link": "https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74",
                                                    "value": "a9e4890bc6112276003d7a5a5c774a74"
                                                },
                                                "work_notes": "",
                                                "calendar_duration": "",
                                                "close_code": "",
                                                "sys_id": "a9e30c7dc61122760116894de7bcc7bd",
                                                "approval": "not requested",
                                                "caused_by": "",
                                                "severity": "3",
                                                "sys_created_by": "admin",
                                                "resolved_at": "",
                                                "assigned_to": "",
                                                "business_stc": "",
                                                "wf_activity": "",
                                                "sys_domain_path": "/",
                                                "cmdb_ci": {
                                                    "link": "https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0",
                                                    "value": "a9c0c8d2c6112276018f7705562f9cb0"
                                                },
                                                "opened_by": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7",
                                                    "value": "46c6f9efa9fe198101ddf5eed9adf6e7"
                                                },
                                                "subcategory": "",
                                                "rejection_goto": "",
                                                "sys_class_name": "incident",
                                                "watch_list": "",
                                                "time_worked": "",
                                                "contact_type": "phone",
                                                "escalation": "0",
                                                "comments": ""
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "queryTableByName",
                "summary": "Retrieves all the record in the table",
                "description": "Retrieves all the records from the specified table."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "name-value pairs": {
                                    "value": {
                                        "short_description": "Unable to connect to office wifi",
                                        "assignment_group": "287ebd7da9fe198100f92cc8d1d2154e",
                                        "urgency": "2",
                                        "impact": "2"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Table"
                ],
                "parameters": [
                    {
                        "name": "tableName",
                        "description": "Name of the table from which to retrieve the records.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "name-value pairs": {
                                        "value": {
                                            "result": {
                                                "upon_approval": "proceed",
                                                "location": "",
                                                "expected_start": "",
                                                "reopen_count": "0",
                                                "close_notes": "",
                                                "additional_assignee_list": "",
                                                "impact": "2",
                                                "urgency": "2",
                                                "correlation_id": "",
                                                "sys_tags": "",
                                                "sys_domain": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/global",
                                                    "value": "global"
                                                },
                                                "description": "",
                                                "group_list": "",
                                                "priority": "3",
                                                "delivery_plan": "",
                                                "sys_mod_count": "0",
                                                "work_notes_list": "",
                                                "business_service": "",
                                                "follow_up": "",
                                                "closed_at": "",
                                                "sla_due": "",
                                                "delivery_task": "",
                                                "sys_updated_on": "2016-01-22 14:28:24",
                                                "parent": "",
                                                "work_end": "",
                                                "number": "INC0010002",
                                                "closed_by": "",
                                                "work_start": "",
                                                "calendar_stc": "",
                                                "category": "inquiry",
                                                "business_duration": "",
                                                "incident_state": "1",
                                                "activity_due": "",
                                                "correlation_display": "",
                                                "company": "",
                                                "active": "true",
                                                "due_date": "",
                                                "assignment_group": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user_group/287ebd7da9fe198100f92cc8d1d2154e",
                                                    "value": "287ebd7da9fe198100f92cc8d1d2154e"
                                                },
                                                "caller_id": "",
                                                "knowledge": "false",
                                                "made_sla": "true",
                                                "comments_and_work_notes": "",
                                                "parent_incident": "",
                                                "state": "1",
                                                "user_input": "",
                                                "sys_created_on": "2016-01-22 14:28:24",
                                                "approval_set": "",
                                                "reassignment_count": "0",
                                                "rfc": "",
                                                "child_incidents": "0",
                                                "opened_at": "2016-01-22 14:28:24",
                                                "short_description": "Unable to connect to office wifi",
                                                "order": "",
                                                "sys_updated_by": "admin",
                                                "resolved_by": "",
                                                "notify": "1",
                                                "upon_reject": "cancel",
                                                "approval_history": "",
                                                "problem_id": "",
                                                "work_notes": "",
                                                "calendar_duration": "",
                                                "close_code": "",
                                                "sys_id": "c537bae64f411200adf9f8e18110c76e",
                                                "approval": "not requested",
                                                "caused_by": "",
                                                "severity": "3",
                                                "sys_created_by": "admin",
                                                "resolved_at": "",
                                                "assigned_to": "",
                                                "business_stc": "",
                                                "wf_activity": "",
                                                "sys_domain_path": "/",
                                                "cmdb_ci": "",
                                                "opened_by": {
                                                    "link": "https://instance.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441",
                                                    "value": "6816f79cc0a8016401c5a33be04be441"
                                                },
                                                "subcategory": "",
                                                "rejection_goto": "",
                                                "sys_class_name": "incident",
                                                "watch_list": "",
                                                "time_worked": "",
                                                "contact_type": "phone",
                                                "escalation": "0",
                                                "comments": ""
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createRecordInTable",
                "summary": "Inserts one record in the specified table. Multiple record insertion is not supported by this method.",
                "description": "Inserts one record in the specified table. Multiple record insertion is not supported by this method."
            },
            "parameters": [
                {
                    "name": "tableName",
                    "description": "Name of the table from which to retrieve the records.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/change_request": {
            "description": "",
            "get": {
                "tags": [
                    "TableChangeRequest"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getChangeRequests",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": "The function will return all changes that are found unless you provide either the number or the id. In those cases it will return the change(s) that match the specified criteria. If an id is provided, it will be the only criteria utilized."
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableChangeRequest"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createChangeRequest",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/change_request/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableChangeRequest"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getChangeRequestById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": "The function will return all changes that are found unless you provide either the number or the id. In those cases it will return the change(s) that match the specified criteria. If an id is provided, it will be the only criteria utilized."
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableChangeRequest"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateChangeRequest",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableChangeRequest"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteChangeRequest",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/incident/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableIncident"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getIncidentById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableIncident"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateIncident",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableIncident"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteIncident",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/incident": {
            "description": "",
            "get": {
                "tags": [
                    "TableIncident"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getIncidents",
                "summary": "Returns the Incident from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableIncident"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createIncident",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/sys_user_group/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableGroup"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getGroupById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableGroup"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateGroup",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableGroup"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteGroup",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/sys_user_group": {
            "description": "",
            "get": {
                "tags": [
                    "TableGroup"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. name=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getGroups",
                "summary": "Returns the group from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableGroup"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createGroup",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/cmdb_ci/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableConfigItem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getConfigItemById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableConfigItem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateConfigItem",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableConfigItem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteConfigItem",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/cmdb_ci": {
            "description": "",
            "get": {
                "tags": [
                    "TableConfigItem"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getConfigItems",
                "summary": "Returns the ConfigItem from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableConfigItem"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createConfigItem",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/kb_knowledge/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableArticle"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getArticleById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableArticle"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateArticle",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableArticle"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteArticle",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/kb_knowledge": {
            "description": "",
            "get": {
                "tags": [
                    "TableArticle"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getArticles",
                "summary": "Returns the Article from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableArticle"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createArticle",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/problem/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableProblem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getProblemById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableProblem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateProblem",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableProblem"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteProblem",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/problem": {
            "description": "",
            "get": {
                "tags": [
                    "TableProblem"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getProblems",
                "summary": "Returns the Problem from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableProblem"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createProblem",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/sc_request/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableRequests"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getRequestsById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableRequests"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateRequests",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableRequests"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteRequests",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/sc_request": {
            "description": "",
            "get": {
                "tags": [
                    "TableRequests"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getRequests",
                "summary": "Returns the Requests from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableRequests"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createRequests",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/sc_req_item/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableRequestItems"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getRequestItemsById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableRequestItems"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateRequestItems",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableRequestItems"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteRequestItems",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/sc_req_item": {
            "description": "",
            "get": {
                "tags": [
                    "TableRequestItems"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. number=CHG12345",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getRequestItems",
                "summary": "Returns the RequestItems from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableRequestItems"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createRequestItems",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/now/table/sys_user/{sysId}": {
            "description": "",
            "get": {
                "tags": [
                    "TableUsers"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getUsersById",
                "summary": "Returns the changes from the provided ServiceNow instance.",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "description": "the change data to update in ServiceNow ",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableUsers"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the request completed successfully.\n"
                    }
                },
                "operationId": "updateUsers",
                "summary": "Updates a change in the provided ServiceNow instance.",
                "description": "The function will update the specified change with the information provided and return the status of the update."
            },
            "delete": {
                "tags": [
                    "TableUsers"
                ],
                "parameters": [
                    {
                        "name": "sysId",
                        "description": "the id of the change to retrieve. aka sys_id",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "deleteUsers",
                "summary": "Deletes the specified record from the specified table.",
                "description": "Deletes the specified record from the specified table.\n\n"
            },
            "parameters": [
                {
                    "name": "sysId",
                    "description": "the id of the change to retrieve. aka sys_id",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/now/table/sys_user": {
            "description": "",
            "get": {
                "tags": [
                    "TableUsers"
                ],
                "parameters": [
                    {
                        "name": "sysparm_query",
                        "description": "E.g. name=username",
                        "schema": {
                            "type": "object"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getChangeRequestExample"
                                }
                            }
                        },
                        "description": "Request completed successfully. If a valid query returned no results, the response body contains only an empty result array."
                    },
                    "404": {
                        "content": {
                            "application/json": {

                            }
                        },
                        "description": "Indicates the record is not found or the requesting user does not have access to the record."
                    }
                },
                "operationId": "getUsers",
                "summary": "Returns the Users from the provided ServiceNow instance.",
                "description": ""
            },
            "post": {
                "requestBody": {
                    "description": "the change data to create in ServiceNow",
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "TableUsers"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createChangeRequestExample"
                                }
                            }
                        },
                        "description": "Indicates the request completed successfully."
                    }
                },
                "operationId": "createUsers",
                "summary": "Creates a change in the provided ServiceNow instance.",
                "description": "The function will create the change with the information provided and return the change number for future reference."
            }
        },
        "/sn_major_inc_mgmt/mim/state/{sys_id}": {
            "summary": "Use the Major Incident Management API to perform read operations for major incident.",
            "description": "Use the Major Incident Management API to perform read operations for major incident.\n\n",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {

                        }
                    },
                    "required": true
                },
                "tags": [
                    "Major Incident Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Sys id of the incident.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "createMajorIncident",
                "summary": "This method performs UI actions and returns success status on completion of action.",
                "description": "This method performs UI actions and returns success status on completion of action. The UI actions can be Promote to Major Incident (PROMOTE), Resolve Major Incident (RESOLVE), Close Major Incident (CLOSE), Reject Major Incident (REJECT), Create New Major Incident (CREATE_NEW_MI), or Refresh Impacted Services (REFRESH_IMPACTED_SERVICES).\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Sys id of the incident.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/sn_major_inc_mgmt/mim/status/{sys_id}": {
            "summary": "Use the Major Incident Management API to perform read operations for major incident.",
            "description": "Use the Major Incident Management API to perform read operations for major incident.\n\n",
            "get": {
                "tags": [
                    "Major Incident Management"
                ],
                "parameters": [
                    {
                        "name": "sys_id",
                        "description": "Sys id of the incident.\n",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success."
                    }
                },
                "operationId": "getMajorIncident",
                "summary": "This method retrieves records for communication cards. The cards include total count of each card.",
                "description": "This method retrieves records for communication cards. The cards include total count of each card.\n\n"
            },
            "parameters": [
                {
                    "name": "sys_id",
                    "description": "Sys id of the incident.\n",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "getTableNameExample": {
                "title": "Root Type for getTableNameExample",
                "description": "The root of the getTableNameExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "closed_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "rejection_goto": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "wf_activity": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\n  \"result\": {\n    \"parent\": \"\",\n    \"made_sla\": \"true\",\n    \"watch_list\": \"\",\n    \"upon_reject\": \"cancel\",\n    \"sys_updated_on\": \"2016-01-19 04:52:04\",\n    \"approval_history\": \"\",\n    \"number\": \"PRB0000050\",\n    \"sys_updated_by\": \"glide.maint\",\n    \"opened_by\": {\n      \"link\": \"https://instance.service-now.com/api/now/table/sys_user/glide.maint\",\n      \"value\": \"glide.maint\"\n    },\n    \"user_input\": \"\",\n    \"sys_created_on\": \"2016-01-19 04:51:19\",\n    \"sys_domain\": {\n      \"link\": \"https://instance.service-now.com/api/now/table/sys_user_group/global\",\n      \"value\": \"global\"\n    },\n    \"state\": \"4\",\n    \"sys_created_by\": \"glide.maint\",\n    \"knowledge\": \"false\",\n    \"order\": \"\",\n    \"closed_at\": \"2016-01-19 04:52:04\",\n    \"cmdb_ci\": {\n      \"link\": \"https://instance.service-now.com/api/now/table/cmdb_ci/55b35562c0a8010e01cff22378e0aea9\",\n      \"value\": \"55b35562c0a8010e01cff22378e0aea9\"\n    },\n    \"delivery_plan\": \"\",\n    \"impact\": \"3\",\n    \"active\": \"false\",\n    \"work_notes_list\": \"\",\n    \"business_service\": \"\",\n    \"priority\": \"4\",\n    \"sys_domain_path\": \"/\",\n    \"time_worked\": \"\",\n    \"expected_start\": \"\",\n    \"rejection_goto\": \"\",\n    \"opened_at\": \"2016-01-19 04:49:47\",\n    \"business_duration\": \"1970-01-01 00:00:00\",\n    \"group_list\": \"\",\n    \"work_end\": \"\",\n    \"approval_set\": \"\",\n    \"wf_activity\": \"\",\n    \"work_notes\": \"\",\n    \"short_description\": \"Switch occasionally drops connections\",\n    \"correlation_display\": \"\",\n    \"delivery_task\": \"\",\n    \"work_start\": \"\",\n    \"assignment_group\": \"\",\n    \"additional_assignee_list\": \"\",\n    \"description\": \"Switch occasionally drops connections\",\n    \"calendar_duration\": \"1970-01-01 00:02:17\",\n    \"close_notes\": \"updated firmware\",\n    \"sys_class_name\": \"problem\",\n    \"closed_by\": \"\",\n    \"follow_up\": \"\",\n    \"sys_id\": \"04ce72c9c0a8016600b5b7f75ac67b5b\",\n    \"contact_type\": \"phone\",\n    \"urgency\": \"3\",\n    \"company\": \"\",\n    \"reassignment_count\": \"\",\n    \"activity_due\": \"\",\n    \"assigned_to\": \"\",\n    \"comments\": \"\",\n    \"approval\": \"not requested\",\n    \"sla_due\": \"\",\n    \"comments_and_work_notes\": \"\",\n    \"due_date\": \"\",\n    \"sys_mod_count\": \"1\",\n    \"sys_tags\": \"\",\n    \"escalation\": \"0\",\n    \"upon_approval\": \"proceed\",\n    \"correlation_id\": \"\",\n    \"location\": \"\"\n  }\n}"
            },
            "getConfigItemsExample": {
                "title": "Root Type for getConfigItemsExample",
                "description": "The root of the getConfigItemsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "sys_id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "summary": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subcategory": {
                                "type": "string"
                            },
                            "operational_status": {
                                "type": "string"
                            },
                            "ip_address": {
                                "type": "string"
                            },
                            "mac_address": {
                                "type": "string"
                            },
                            "fqdn": {
                                "type": "string"
                            },
                            "install_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "created_by": {
                                "type": "string"
                            },
                            "updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "updated_by": {
                                "type": "string"
                            },
                            "asset_tag": {
                                "type": "string"
                            },
                            "serial_number": {
                                "type": "string"
                            },
                            "model_number": {
                                "type": "string"
                            },
                            "warranty_expiration": {
                                "format": "date",
                                "type": "string"
                            },
                            "fault_count": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"sys_id\":\"00a96c0d3790200044e0bfc8bcbe5db4\",\"name\":\"MacBook Pro 15\",\"summary\":\"\",\"category\":\"Hardware\",\"subcategory\":\"Computer\",\"operational_status\":\"1\",\"ip_address\":\"\",\"mac_address\":\"\",\"fqdn\":\"\",\"install_date\":\"2014-07-22 07:00:00\",\"created_on\":\"2012-02-18 08:14:21\",\"created_by\":\"admin\",\"updated_on\":\"2017-07-24 13:48:43\",\"updated_by\":\"system\",\"asset_tag\":\"P1000503\",\"serial_number\":\"ABE-486-V17263-DO\",\"model_number\":\"\",\"warranty_expiration\":\"2017-07-21\",\"fault_count\":\"0\",\"comments\":\"\"}}"
            },
            "createConfigItemExample": {
                "title": "Root Type for createConfigItemExample",
                "description": "The root of the createConfigItemExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "sys_id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "summary": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "subcategory": {
                                "type": "string"
                            },
                            "operational_status": {
                                "type": "string"
                            },
                            "ip_address": {
                                "type": "string"
                            },
                            "mac_address": {
                                "type": "string"
                            },
                            "fqdn": {
                                "type": "string"
                            },
                            "install_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "created_by": {
                                "type": "string"
                            },
                            "updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "updated_by": {
                                "type": "string"
                            },
                            "asset_tag": {
                                "type": "string"
                            },
                            "serial_number": {
                                "type": "string"
                            },
                            "model_number": {
                                "type": "string"
                            },
                            "warranty_expiration": {
                                "format": "date",
                                "type": "string"
                            },
                            "fault_count": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"sys_id\":\"00a96c0d3790200044e0bfc8bcbe5db4\",\"name\":\"MacBook Pro 15\",\"summary\":\"\",\"category\":\"Hardware\",\"subcategory\":\"Computer\",\"operational_status\":\"1\",\"ip_address\":\"\",\"mac_address\":\"\",\"fqdn\":\"\",\"install_date\":\"2014-07-22 07:00:00\",\"created_on\":\"2012-02-18 08:14:21\",\"created_by\":\"admin\",\"updated_on\":\"2017-07-24 13:48:43\",\"updated_by\":\"system\",\"asset_tag\":\"P1000503\",\"serial_number\":\"ABE-486-V17263-DO\",\"model_number\":\"\",\"warranty_expiration\":\"2017-07-21\",\"fault_count\":\"0\",\"comments\":\"\"}}"
            },
            "getIncidentExample": {
                "title": "Root Type for getIncidentExample",
                "description": "The root of the getIncidentExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "caused_by": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "child_incidents": {
                                "type": "string"
                            },
                            "hold_reason": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "resolved_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "calendar_stc": {
                                "type": "string"
                            },
                            "closed_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "rfc": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "caller_id": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "resolved_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "subcategory": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "close_code": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "business_stc": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "notify": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "parent_incident": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "incident_state": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "problem_id": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "severity": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "reopen_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"false\",\"caused_by\":\"\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2017-03-11 20:16:07\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"child_incidents\":\"\",\"hold_reason\":\"\",\"approval_history\":\"\",\"number\":\"INC0000001\",\"resolved_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681ccaf9c0a8016400b98a06818d57c7\",\"value\":\"681ccaf9c0a8016400b98a06818d57c7\"},\"user_input\":\"\",\"sys_created_on\":\"2015-07-11 18:24:13\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"7\",\"sys_created_by\":\"pat\",\"knowledge\":\"false\",\"order\":\"\",\"calendar_stc\":\"7937181\",\"closed_at\":\"2016-12-10 23:10:06\",\"cmdb_ci\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmdb_ci/b0c4030ac0a800090152e7a4564ca36c\",\"value\":\"b0c4030ac0a800090152e7a4564ca36c\"},\"delivery_plan\":\"\",\"impact\":\"1\",\"active\":\"false\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"1\",\"sys_domain_path\":\"/\",\"rfc\":\"\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-12-09 23:09:51\",\"business_duration\":\"1970-01-22 21:46:21\",\"group_list\":\"\",\"work_end\":\"\",\"caller_id\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/5137153cc611227c000bbd1bd8cd2005\",\"value\":\"5137153cc611227c000bbd1bd8cd2005\"},\"resolved_at\":\"2017-03-11 19:56:12\",\"approval_set\":\"\",\"subcategory\":\"\",\"work_notes\":\"\",\"short_description\":\"Can't read email\",\"close_code\":\"Closed/Resolved by Caller\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/d625dccec0a8016700a222a0f7900d06\",\"value\":\"d625dccec0a8016700a222a0f7900d06\"},\"additional_assignee_list\":\"\",\"business_stc\":\"1892781\",\"description\":\"User can't access email on mail.company.com.\\\\n\\\\t\\\\t\",\"calendar_duration\":\"1970-04-02 20:46:21\",\"close_notes\":\"Closed before close notes were made mandatory\\\\n\\\\t\\\\t\",\"notify\":\"1\",\"sys_class_name\":\"incident\",\"closed_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/9ee1b13dc6112271007f9d0efdb69cd0\",\"value\":\"9ee1b13dc6112271007f9d0efdb69cd0\"},\"follow_up\":\"\",\"parent_incident\":\"\",\"sys_id\":\"9c573169c611228700193229fff72400\",\"contact_type\":\"\",\"incident_state\":\"7\",\"urgency\":\"1\",\"problem_id\":{\"link\":\"https://dev10467.service-now.com/api/now/table/problem/9d3a266ac6112287004e37fb2ceb0133\",\"value\":\"9d3a266ac6112287004e37fb2ceb0133\"},\"company\":\"\",\"reassignment_count\":\"1\",\"activity_due\":\"\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/46b87022a9fe198101a78787e40d7547\",\"value\":\"46b87022a9fe198101a78787e40d7547\"},\"severity\":\"1\",\"comments\":\"\",\"approval\":\"\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"\",\"sys_mod_count\":\"21\",\"reopen_count\":\"\",\"sys_tags\":\"\",\"escalation\":\"0\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"location\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_location/1083361cc611227501b682158cabf646\",\"value\":\"1083361cc611227501b682158cabf646\"},\"u_pronghorn_instance\":\"demo-0\",\"category\":\"network\"}}"
            },
            "createIncidentExample": {
                "title": "Root Type for createIncidentExample",
                "description": "The root of the createIncidentExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "caused_by": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "child_incidents": {
                                "type": "string"
                            },
                            "hold_reason": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "resolved_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "calendar_stc": {
                                "type": "string"
                            },
                            "closed_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "rfc": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "caller_id": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "resolved_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "subcategory": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "close_code": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "business_stc": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "notify": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "parent_incident": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "incident_state": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "problem_id": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "severity": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "reopen_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"false\",\"caused_by\":\"\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2017-03-11 20:16:07\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"child_incidents\":\"\",\"hold_reason\":\"\",\"approval_history\":\"\",\"number\":\"INC0000001\",\"resolved_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681ccaf9c0a8016400b98a06818d57c7\",\"value\":\"681ccaf9c0a8016400b98a06818d57c7\"},\"user_input\":\"\",\"sys_created_on\":\"2015-07-11 18:24:13\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"7\",\"sys_created_by\":\"pat\",\"knowledge\":\"false\",\"order\":\"\",\"calendar_stc\":\"7937181\",\"closed_at\":\"2016-12-10 23:10:06\",\"cmdb_ci\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmdb_ci/b0c4030ac0a800090152e7a4564ca36c\",\"value\":\"b0c4030ac0a800090152e7a4564ca36c\"},\"delivery_plan\":\"\",\"impact\":\"1\",\"active\":\"false\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"1\",\"sys_domain_path\":\"/\",\"rfc\":\"\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-12-09 23:09:51\",\"business_duration\":\"1970-01-22 21:46:21\",\"group_list\":\"\",\"work_end\":\"\",\"caller_id\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/5137153cc611227c000bbd1bd8cd2005\",\"value\":\"5137153cc611227c000bbd1bd8cd2005\"},\"resolved_at\":\"2017-03-11 19:56:12\",\"approval_set\":\"\",\"subcategory\":\"\",\"work_notes\":\"\",\"short_description\":\"Can't read email\",\"close_code\":\"Closed/Resolved by Caller\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/d625dccec0a8016700a222a0f7900d06\",\"value\":\"d625dccec0a8016700a222a0f7900d06\"},\"additional_assignee_list\":\"\",\"business_stc\":\"1892781\",\"description\":\"User can't access email on mail.company.com.\\\\n\\\\t\\\\t\",\"calendar_duration\":\"1970-04-02 20:46:21\",\"close_notes\":\"Closed before close notes were made mandatory\\\\n\\\\t\\\\t\",\"notify\":\"1\",\"sys_class_name\":\"incident\",\"closed_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/9ee1b13dc6112271007f9d0efdb69cd0\",\"value\":\"9ee1b13dc6112271007f9d0efdb69cd0\"},\"follow_up\":\"\",\"parent_incident\":\"\",\"sys_id\":\"9c573169c611228700193229fff72400\",\"contact_type\":\"\",\"incident_state\":\"7\",\"urgency\":\"1\",\"problem_id\":{\"link\":\"https://dev10467.service-now.com/api/now/table/problem/9d3a266ac6112287004e37fb2ceb0133\",\"value\":\"9d3a266ac6112287004e37fb2ceb0133\"},\"company\":\"\",\"reassignment_count\":\"1\",\"activity_due\":\"\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/46b87022a9fe198101a78787e40d7547\",\"value\":\"46b87022a9fe198101a78787e40d7547\"},\"severity\":\"1\",\"comments\":\"\",\"approval\":\"\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"\",\"sys_mod_count\":\"21\",\"reopen_count\":\"\",\"sys_tags\":\"\",\"escalation\":\"0\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"location\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_location/1083361cc611227501b682158cabf646\",\"value\":\"1083361cc611227501b682158cabf646\"},\"u_pronghorn_instance\":\"demo-0\",\"category\":\"network\"}}"
            },
            "getProblemsExample": {
                "title": "Root Type for getProblemsExample",
                "description": "The root of the getProblemsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "work_around": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "rfc": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "known_error": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "related_incidents": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "problem_state": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"false\",\"watch_list\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2016-10-10 22:39:09\",\"approval_history\":\"\",\"number\":\"PRB0000001\",\"sys_updated_by\":\"glide.maint\",\"work_around\":\"\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"sys_created_on\":\"2016-07-03 23:48:36\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"3\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"closed_at\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"rfc\":{\"link\":\"https://dev10467.service-now.com/api/now/table/change_request/46e9b4afa9fe198101026e122b85f442\",\"value\":\"46e9b4afa9fe198101026e122b85f442\"},\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-07-03 23:48:36\",\"business_duration\":\"\",\"group_list\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"work_notes\":\"\",\"short_description\":\"Windows XP SP2 causing errors in Enterprise\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"known_error\":\"false\",\"additional_assignee_list\":\"\",\"description\":\"SP2 is causing several applications not to work anymore. \",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"problem\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"46eaa7c9a9fe198100bbe282da0d4b7d\",\"contact_type\":\"phone\",\"urgency\":\"3\",\"company\":\"\",\"reassignment_count\":\"\",\"related_incidents\":\"\",\"activity_due\":\"\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd\",\"value\":\"681b365ec0a80164000fb0b05854a0cd\"},\"comments\":\"\",\"approval\":\"not requested\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"\",\"problem_state\":\"3\",\"sys_mod_count\":\"1\",\"sys_tags\":\"\",\"escalation\":\"1\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"location\":\"\"}}"
            },
            "createProblemsExample": {
                "title": "Root Type for createProblemsExample",
                "description": "The root of the createProblemsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "work_around": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "rfc": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "known_error": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "related_incidents": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "problem_state": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"false\",\"watch_list\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2016-10-10 22:39:09\",\"approval_history\":\"\",\"number\":\"PRB0000001\",\"sys_updated_by\":\"glide.maint\",\"work_around\":\"\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"sys_created_on\":\"2016-07-03 23:48:36\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"3\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"closed_at\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"rfc\":{\"link\":\"https://dev10467.service-now.com/api/now/table/change_request/46e9b4afa9fe198101026e122b85f442\",\"value\":\"46e9b4afa9fe198101026e122b85f442\"},\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-07-03 23:48:36\",\"business_duration\":\"\",\"group_list\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"work_notes\":\"\",\"short_description\":\"Windows XP SP2 causing errors in Enterprise\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"known_error\":\"false\",\"additional_assignee_list\":\"\",\"description\":\"SP2 is causing several applications not to work anymore. \",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"problem\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"46eaa7c9a9fe198100bbe282da0d4b7d\",\"contact_type\":\"phone\",\"urgency\":\"3\",\"company\":\"\",\"reassignment_count\":\"\",\"related_incidents\":\"\",\"activity_due\":\"\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd\",\"value\":\"681b365ec0a80164000fb0b05854a0cd\"},\"comments\":\"\",\"approval\":\"not requested\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"\",\"problem_state\":\"3\",\"sys_mod_count\":\"1\",\"sys_tags\":\"\",\"escalation\":\"1\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"location\":\"\"}}"
            },
            "getRequestsExample": {
                "title": "Root Type for getRequestsExample",
                "description": "The root of the getRequestsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "delivery_address": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "requested_for": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "calendar_stc": {
                                "type": "string"
                            },
                            "special_instructions": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "u_device": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "u_interface_type": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "requested_date": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "u_interface_vlans": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "request_state": {
                                "type": "string"
                            },
                            "stage": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "u_inerface_id": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"delivery_address\":\"\",\"made_sla\":\"true\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"upon_reject\":\"cancel\",\"requested_for\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"sys_updated_on\":\"2017-05-24 19:42:18\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"approval_history\":\"\",\"number\":\"REQ0010001\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"price\":\"600\",\"sys_created_on\":\"2017-03-07 20:58:44\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"1\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"calendar_stc\":\"\",\"special_instructions\":\"\",\"closed_at\":\"\",\"u_device\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2017-03-07 20:58:44\",\"business_duration\":\"\",\"group_list\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"u_interface_type\":\"\",\"work_notes\":\"\",\"short_description\":\"\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"additional_assignee_list\":\"\",\"description\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"sc_request\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"6eed229047801200e0ef563dbb9a71c2\",\"contact_type\":\"\",\"urgency\":\"2\",\"requested_date\":\"\",\"company\":\"\",\"reassignment_count\":\"0\",\"activity_due\":\"\",\"assigned_to\":\"\",\"comments\":\"\",\"u_interface_vlans\":\"\",\"approval\":\"approved\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"2017-03-09 20:58:43\",\"sys_mod_count\":\"1\",\"sys_tags\":\"\",\"request_state\":\"in_process\",\"stage\":\"requested\",\"escalation\":\"0\",\"u_inerface_id\":\"\",\"upon_approval\":\"proceed\",\"correlation_id\":\"\",\"location\":\"\",\"u_pronghorn_instance\":\"demo-0\"}}"
            },
            "createRequestExample": {
                "title": "Root Type for createRequestExample",
                "description": "The root of the createRequestExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "delivery_address": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "requested_for": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "calendar_stc": {
                                "type": "string"
                            },
                            "special_instructions": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "u_device": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "u_interface_type": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "requested_date": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "u_interface_vlans": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "request_state": {
                                "type": "string"
                            },
                            "stage": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "u_inerface_id": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"delivery_address\":\"\",\"made_sla\":\"true\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"upon_reject\":\"cancel\",\"requested_for\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"sys_updated_on\":\"2017-05-24 19:42:18\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"approval_history\":\"\",\"number\":\"REQ0010001\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"price\":\"600\",\"sys_created_on\":\"2017-03-07 20:58:44\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"1\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"calendar_stc\":\"\",\"special_instructions\":\"\",\"closed_at\":\"\",\"u_device\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2017-03-07 20:58:44\",\"business_duration\":\"\",\"group_list\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"u_interface_type\":\"\",\"work_notes\":\"\",\"short_description\":\"\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"additional_assignee_list\":\"\",\"description\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"sc_request\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"6eed229047801200e0ef563dbb9a71c2\",\"contact_type\":\"\",\"urgency\":\"2\",\"requested_date\":\"\",\"company\":\"\",\"reassignment_count\":\"0\",\"activity_due\":\"\",\"assigned_to\":\"\",\"comments\":\"\",\"u_interface_vlans\":\"\",\"approval\":\"approved\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"2017-03-09 20:58:43\",\"sys_mod_count\":\"1\",\"sys_tags\":\"\",\"request_state\":\"in_process\",\"stage\":\"requested\",\"escalation\":\"0\",\"u_inerface_id\":\"\",\"upon_approval\":\"proceed\",\"correlation_id\":\"\",\"location\":\"\",\"u_pronghorn_instance\":\"demo-0\"}}"
            },
            "getRequestItemsExample": {
                "title": "Root Type for getRequestItemsExample",
                "description": "The root of the getRequestItemsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "sc_catalog": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "recurring_frequency": {
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "context": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "backordered": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "configuration_item": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "order_guide": {
                                "type": "string"
                            },
                            "request": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "recurring_price": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "billable": {
                                "type": "string"
                            },
                            "cat_item": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "stage": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "estimated_delivery": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"true\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"sc_catalog\":\"\",\"upon_reject\":\"cancel\",\"sys_updated_on\":\"2017-04-07 12:04:19\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"approval_history\":\"\",\"number\":\"RITM0010001\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"price\":\"0\",\"sys_created_on\":\"2017-04-07 12:04:17\",\"recurring_frequency\":\"\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"context\":{\"link\":\"https://dev10467.service-now.com/api/now/table/wf_context/355bd5200f02320044df4e9ce1050e44\",\"value\":\"355bd5200f02320044df4e9ce1050e44\"},\"state\":\"1\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"closed_at\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"backordered\":\"false\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2017-04-07 12:04:17\",\"business_duration\":\"\",\"group_list\":\"\",\"configuration_item\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"work_notes\":\"\",\"order_guide\":\"\",\"request\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sc_request/6d5bd5200f02320044df4e9ce1050e3e\",\"value\":\"6d5bd5200f02320044df4e9ce1050e3e\"},\"short_description\":\"Manage projects, Organize tasks, Collaborate\\\\n\\\\t\\\\t\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"additional_assignee_list\":\"\",\"description\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"sc_req_item\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"ad5bd5200f02320044df4e9ce1050e3e\",\"contact_type\":\"\",\"urgency\":\"3\",\"company\":\"\",\"reassignment_count\":\"0\",\"activity_due\":\"\",\"assigned_to\":\"\",\"comments\":\"\",\"quantity\":\"1\",\"approval\":\"approved\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"2017-04-09 12:04:17\",\"sys_mod_count\":\"1\",\"recurring_price\":\"0\",\"sys_tags\":\"\",\"billable\":\"false\",\"cat_item\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sc_cat_item/abe6a1ea4fc3c2c0960f95bd0210c7d2\",\"value\":\"abe6a1ea4fc3c2c0960f95bd0210c7d2\"},\"stage\":\"fulfillment\",\"escalation\":\"0\",\"upon_approval\":\"proceed\",\"correlation_id\":\"\",\"location\":\"\",\"u_pronghorn_instance\":\"demo-0\",\"estimated_delivery\":\"\"}}\n   "
            },
            "createRequestItemsExample": {
                "title": "Root Type for createRequestItemsExample",
                "description": "The root of the createRequestItemsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "sc_catalog": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "u_pronghorn_workflow": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "recurring_frequency": {
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "context": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "closed_at": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "backordered": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "configuration_item": {
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "order_guide": {
                                "type": "string"
                            },
                            "request": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "string"
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "due_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "recurring_price": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "billable": {
                                "type": "string"
                            },
                            "cat_item": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "stage": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "estimated_delivery": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"made_sla\":\"true\",\"watch_list\":\"\",\"u_pronghorn_job\":\"\",\"sc_catalog\":\"\",\"upon_reject\":\"cancel\",\"sys_updated_on\":\"2017-04-07 12:04:19\",\"u_pronghorn_workflow\":\"Port Turn Up dot1q\",\"approval_history\":\"\",\"number\":\"RITM0010001\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"price\":\"0\",\"sys_created_on\":\"2017-04-07 12:04:17\",\"recurring_frequency\":\"\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"context\":{\"link\":\"https://dev10467.service-now.com/api/now/table/wf_context/355bd5200f02320044df4e9ce1050e44\",\"value\":\"355bd5200f02320044df4e9ce1050e44\"},\"state\":\"1\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"closed_at\":\"\",\"cmdb_ci\":\"\",\"delivery_plan\":\"\",\"backordered\":\"false\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"business_service\":\"\",\"priority\":\"4\",\"sys_domain_path\":\"/\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2017-04-07 12:04:17\",\"business_duration\":\"\",\"group_list\":\"\",\"configuration_item\":\"\",\"work_end\":\"\",\"approval_set\":\"\",\"work_notes\":\"\",\"order_guide\":\"\",\"request\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sc_request/6d5bd5200f02320044df4e9ce1050e3e\",\"value\":\"6d5bd5200f02320044df4e9ce1050e3e\"},\"short_description\":\"Manage projects, Organize tasks, Collaborate\\\\n\\\\t\\\\t\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"assignment_group\":\"\",\"additional_assignee_list\":\"\",\"description\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_class_name\":\"sc_req_item\",\"closed_by\":\"\",\"follow_up\":\"\",\"sys_id\":\"ad5bd5200f02320044df4e9ce1050e3e\",\"contact_type\":\"\",\"urgency\":\"3\",\"company\":\"\",\"reassignment_count\":\"0\",\"activity_due\":\"\",\"assigned_to\":\"\",\"comments\":\"\",\"quantity\":\"1\",\"approval\":\"approved\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"due_date\":\"2017-04-09 12:04:17\",\"sys_mod_count\":\"1\",\"recurring_price\":\"0\",\"sys_tags\":\"\",\"billable\":\"false\",\"cat_item\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sc_cat_item/abe6a1ea4fc3c2c0960f95bd0210c7d2\",\"value\":\"abe6a1ea4fc3c2c0960f95bd0210c7d2\"},\"stage\":\"fulfillment\",\"escalation\":\"0\",\"upon_approval\":\"proceed\",\"correlation_id\":\"\",\"location\":\"\",\"u_pronghorn_instance\":\"demo-0\",\"estimated_delivery\":\"\"}}"
            },
            "getChangeRequestExample": {
                "title": "Root Type for getChangeRequestExample",
                "description": "The root of the getChangeRequestExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "test_plan": {
                                "type": "string"
                            },
                            "cab_delegate": {
                                "type": "string"
                            },
                            "requested_by_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "phase": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "cab_recommendation": {
                                "type": "string"
                            },
                            "production_system": {
                                "type": "string"
                            },
                            "review_date": {
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "requested_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "change_plan": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "implementation_plan": {
                                "type": "string"
                            },
                            "end_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "outside_maintenance_schedule": {
                                "type": "string"
                            },
                            "std_change_producer_version": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "review_status": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "start_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "backout_plan": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "conflict_status": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "closed_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "review_comments": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "phase_state": {
                                "type": "string"
                            },
                            "cab_date": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "u_pronghorn_wait_task": {
                                "type": "string"
                            },
                            "close_code": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "on_hold_reason": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "cab_required": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "scope": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "justification": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "on_hold": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "conflict_last_run": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "risk": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "risk_impact_analysis": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"reason\":\"\",\"watch_list\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2017-03-11 12:42:23\",\"type\":\"normal\",\"approval_history\":\"\",\"number\":\"CHG0000001\",\"test_plan\":\"Multi-User testing on Sunday night\",\"cab_delegate\":\"\",\"requested_by_date\":\"2016-09-11 00:00:00\",\"state\":\"-5\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"phase\":\"requested\",\"cmdb_ci\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0\",\"value\":\"a9c0c8d2c6112276018f7705562f9cb0\"},\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"priority\":\"3\",\"sys_domain_path\":\"/\",\"cab_recommendation\":\"\",\"production_system\":\"false\",\"review_date\":\"\",\"business_duration\":\"\",\"group_list\":\"\",\"requested_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/5137153cc611227c000bbd1bd8cd2007\",\"value\":\"5137153cc611227c000bbd1bd8cd2007\"},\"change_plan\":\"Backup dataset, image current system, reinstall previous\\\\n            release, test\\\\n        \",\"approval_set\":\"\",\"implementation_plan\":\"\",\"end_date\":\"2017-02-27 01:00:00\",\"short_description\":\"Rollback Oracle Version\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"additional_assignee_list\":\"\",\"outside_maintenance_schedule\":\"false\",\"std_change_producer_version\":\"\",\"sys_class_name\":\"change_request\",\"closed_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"follow_up\":\"\",\"reassignment_count\":\"\",\"review_status\":\"3\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd\",\"value\":\"681b365ec0a80164000fb0b05854a0cd\"},\"start_date\":\"2017-02-26 23:00:00\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"escalation\":\"0\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"made_sla\":\"false\",\"backout_plan\":\"Current prod environment to be snapshotted with VmWare\\\\n            prior to change.\\\\n        \",\"u_pronghorn_job\":\"\",\"conflict_status\":\"\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"sys_created_on\":\"2016-09-04 22:12:50\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"closed_at\":\"2017-03-06 09:46:25\",\"review_comments\":\"\",\"business_service\":\"\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-09-04 22:12:50\",\"work_end\":\"\",\"phase_state\":\"open\",\"cab_date\":\"\",\"work_notes\":\"\",\"u_pronghorn_wait_task\":\"\",\"close_code\":\"\",\"assignment_group\":\"\",\"description\":\"Performance of the Siebel SFA software has been severely\\\\n            degraded since the upgrade performed this weekend.\\\\n\\\\n            We moved to an unsupported Oracle DB version. Need to rollback the\\\\n            Oracle Instance to a supported version.\\\\n        \",\"on_hold_reason\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_id\":\"a9e9c33dc61122760072455df62663d2\",\"contact_type\":\"phone\",\"cab_required\":\"false\",\"urgency\":\"3\",\"scope\":\"3\",\"company\":\"\",\"justification\":\"\",\"activity_due\":\"\",\"comments\":\"\",\"approval\":\"requested\",\"due_date\":\"\",\"sys_mod_count\":\"21\",\"on_hold\":\"false\",\"sys_tags\":\"\",\"conflict_last_run\":\"\",\"location\":\"\",\"risk\":\"2\",\"u_pronghorn_instance\":\"demo-0\",\"category\":\"Software\",\"risk_impact_analysis\":\"\"}}"
            },
            "createChangeRequestExample": {
                "title": "Root Type for createChangeRequestExample",
                "description": "The root of the createChangeRequestExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "watch_list": {
                                "type": "string"
                            },
                            "upon_reject": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "approval_history": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "test_plan": {
                                "type": "string"
                            },
                            "cab_delegate": {
                                "type": "string"
                            },
                            "requested_by_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "knowledge": {
                                "type": "string"
                            },
                            "order": {
                                "type": "string"
                            },
                            "phase": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_plan": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "work_notes_list": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "cab_recommendation": {
                                "type": "string"
                            },
                            "production_system": {
                                "type": "string"
                            },
                            "review_date": {
                                "type": "string"
                            },
                            "business_duration": {
                                "type": "string"
                            },
                            "group_list": {
                                "type": "string"
                            },
                            "requested_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "change_plan": {
                                "type": "string"
                            },
                            "approval_set": {
                                "type": "string"
                            },
                            "implementation_plan": {
                                "type": "string"
                            },
                            "end_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "short_description": {
                                "type": "string"
                            },
                            "correlation_display": {
                                "type": "string"
                            },
                            "delivery_task": {
                                "type": "string"
                            },
                            "work_start": {
                                "type": "string"
                            },
                            "additional_assignee_list": {
                                "type": "string"
                            },
                            "outside_maintenance_schedule": {
                                "type": "string"
                            },
                            "std_change_producer_version": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "closed_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "follow_up": {
                                "type": "string"
                            },
                            "reassignment_count": {
                                "type": "string"
                            },
                            "review_status": {
                                "type": "string"
                            },
                            "assigned_to": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "start_date": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sla_due": {
                                "type": "string"
                            },
                            "comments_and_work_notes": {
                                "type": "string"
                            },
                            "escalation": {
                                "type": "string"
                            },
                            "upon_approval": {
                                "type": "string"
                            },
                            "correlation_id": {
                                "type": "string"
                            },
                            "made_sla": {
                                "type": "string"
                            },
                            "backout_plan": {
                                "type": "string"
                            },
                            "u_pronghorn_job": {
                                "type": "string"
                            },
                            "conflict_status": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "opened_by": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "user_input": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "closed_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "review_comments": {
                                "type": "string"
                            },
                            "business_service": {
                                "type": "string"
                            },
                            "time_worked": {
                                "type": "string"
                            },
                            "expected_start": {
                                "type": "string"
                            },
                            "opened_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "work_end": {
                                "type": "string"
                            },
                            "phase_state": {
                                "type": "string"
                            },
                            "cab_date": {
                                "type": "string"
                            },
                            "work_notes": {
                                "type": "string"
                            },
                            "u_pronghorn_wait_task": {
                                "type": "string"
                            },
                            "close_code": {
                                "type": "string"
                            },
                            "assignment_group": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "on_hold_reason": {
                                "type": "string"
                            },
                            "calendar_duration": {
                                "type": "string"
                            },
                            "close_notes": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "contact_type": {
                                "type": "string"
                            },
                            "cab_required": {
                                "type": "string"
                            },
                            "urgency": {
                                "type": "string"
                            },
                            "scope": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "justification": {
                                "type": "string"
                            },
                            "activity_due": {
                                "type": "string"
                            },
                            "comments": {
                                "type": "string"
                            },
                            "approval": {
                                "type": "string"
                            },
                            "due_date": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "on_hold": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "conflict_last_run": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "risk": {
                                "type": "string"
                            },
                            "u_pronghorn_instance": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "risk_impact_analysis": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"reason\":\"\",\"watch_list\":\"\",\"upon_reject\":\"\",\"sys_updated_on\":\"2017-03-11 12:42:23\",\"type\":\"normal\",\"approval_history\":\"\",\"number\":\"CHG0000001\",\"test_plan\":\"Multi-User testing on Sunday night\",\"cab_delegate\":\"\",\"requested_by_date\":\"2016-09-11 00:00:00\",\"state\":\"-5\",\"sys_created_by\":\"admin\",\"knowledge\":\"false\",\"order\":\"\",\"phase\":\"requested\",\"cmdb_ci\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0\",\"value\":\"a9c0c8d2c6112276018f7705562f9cb0\"},\"delivery_plan\":\"\",\"impact\":\"3\",\"active\":\"true\",\"work_notes_list\":\"\",\"priority\":\"3\",\"sys_domain_path\":\"/\",\"cab_recommendation\":\"\",\"production_system\":\"false\",\"review_date\":\"\",\"business_duration\":\"\",\"group_list\":\"\",\"requested_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/5137153cc611227c000bbd1bd8cd2007\",\"value\":\"5137153cc611227c000bbd1bd8cd2007\"},\"change_plan\":\"Backup dataset, image current system, reinstall previous\\\\n            release, test\\\\n        \",\"approval_set\":\"\",\"implementation_plan\":\"\",\"end_date\":\"2017-02-27 01:00:00\",\"short_description\":\"Rollback Oracle Version\",\"correlation_display\":\"\",\"delivery_task\":\"\",\"work_start\":\"\",\"additional_assignee_list\":\"\",\"outside_maintenance_schedule\":\"false\",\"std_change_producer_version\":\"\",\"sys_class_name\":\"change_request\",\"closed_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"follow_up\":\"\",\"reassignment_count\":\"\",\"review_status\":\"3\",\"assigned_to\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd\",\"value\":\"681b365ec0a80164000fb0b05854a0cd\"},\"start_date\":\"2017-02-26 23:00:00\",\"sla_due\":\"\",\"comments_and_work_notes\":\"\",\"escalation\":\"0\",\"upon_approval\":\"\",\"correlation_id\":\"\",\"made_sla\":\"false\",\"backout_plan\":\"Current prod environment to be snapshotted with VmWare\\\\n            prior to change.\\\\n        \",\"u_pronghorn_job\":\"\",\"conflict_status\":\"\",\"sys_updated_by\":\"admin\",\"opened_by\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441\",\"value\":\"6816f79cc0a8016401c5a33be04be441\"},\"user_input\":\"\",\"sys_created_on\":\"2016-09-04 22:12:50\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"closed_at\":\"2017-03-06 09:46:25\",\"review_comments\":\"\",\"business_service\":\"\",\"time_worked\":\"\",\"expected_start\":\"\",\"opened_at\":\"2016-09-04 22:12:50\",\"work_end\":\"\",\"phase_state\":\"open\",\"cab_date\":\"\",\"work_notes\":\"\",\"u_pronghorn_wait_task\":\"\",\"close_code\":\"\",\"assignment_group\":\"\",\"description\":\"Performance of the Siebel SFA software has been severely\\\\n            degraded since the upgrade performed this weekend.\\\\n\\\\n            We moved to an unsupported Oracle DB version. Need to rollback the\\\\n            Oracle Instance to a supported version.\\\\n        \",\"on_hold_reason\":\"\",\"calendar_duration\":\"\",\"close_notes\":\"\",\"sys_id\":\"a9e9c33dc61122760072455df62663d2\",\"contact_type\":\"phone\",\"cab_required\":\"false\",\"urgency\":\"3\",\"scope\":\"3\",\"company\":\"\",\"justification\":\"\",\"activity_due\":\"\",\"comments\":\"\",\"approval\":\"requested\",\"due_date\":\"\",\"sys_mod_count\":\"21\",\"on_hold\":\"false\",\"sys_tags\":\"\",\"conflict_last_run\":\"\",\"location\":\"\",\"risk\":\"2\",\"u_pronghorn_instance\":\"demo-0\",\"category\":\"Software\",\"risk_impact_analysis\":\"\"}}"
            },
            "getArticlesExample": {
                "title": "Root Type for getArticlesExample",
                "description": "The root of the getArticlesExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "short_description": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "wiki": {
                                "type": "object"
                            },
                            "direct": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "disable_suggesting": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "use_count": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "flagged": {
                                "type": "string"
                            },
                            "disable_commenting": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "valid_to": {
                                "format": "date",
                                "type": "string"
                            },
                            "retired": {
                                "type": "string"
                            },
                            "workflow_state": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "display_attachments": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string"
                            },
                            "sys_view_count": {
                                "type": "string"
                            },
                            "article_type": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "author": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "can_read_user_criteria": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "cannot_read_user_criteria": {
                                "type": "string"
                            },
                            "published": {
                                "format": "date",
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "kb_knowledge_base": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "meta": {
                                "type": "string"
                            },
                            "topic": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "kb_category": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": "{\n  \"result\": {\n    \"short_description\": \"How to Deal with Spam\",\n    \"roles\": \"\",\n    \"wiki\": null,\n    \"direct\": \"false\",\n    \"rating\": \"\",\n    \"description\": \"\",\n    \"source\": \"\",\n    \"sys_updated_on\": \"2014-12-19 15:54:36\",\n    \"disable_suggesting\": \"false\",\n    \"sys_class_name\": \"kb_knowledge\",\n    \"number\": \"KB0000011\",\n    \"sys_id\": \"0b48fd75474321009db4b5b08b9a71c2\",\n    \"use_count\": \"0\",\n    \"sys_updated_by\": \"johnoliver.mendoza\",\n    \"flagged\": \"false\",\n    \"disable_commenting\": \"false\",\n    \"sys_created_on\": \"2014-09-09 23:31:10\",\n    \"sys_domain\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\n      \"value\": \"global\"\n    },\n    \"valid_to\": \"2020-01-01\",\n    \"retired\": \"\",\n    \"workflow_state\": \"published\",\n    \"text\": \"some html\",\n    \"sys_created_by\": \"johnoliver.mendoza\",\n    \"display_attachments\": \"false\",\n    \"image\": \"\",\n    \"sys_view_count\": \"0\",\n    \"article_type\": \"text\",\n    \"cmdb_ci\": \"\",\n    \"author\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/sys_user/62d78687c0a8010e00b3d84178adc913\",\n      \"value\": \"62d78687c0a8010e00b3d84178adc913\"\n    },\n    \"can_read_user_criteria\": \"\",\n    \"sys_mod_count\": \"4\",\n    \"active\": \"true\",\n    \"cannot_read_user_criteria\": \"\",\n    \"published\": \"2014-09-09\",\n    \"sys_domain_path\": \"/\",\n    \"sys_tags\": \"\",\n    \"kb_knowledge_base\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/kb_knowledge_base/a7e8a78bff0221009b20ffffffffff17\",\n      \"value\": \"a7e8a78bff0221009b20ffffffffff17\"\n    },\n    \"meta\": \"\",\n    \"topic\": \"Policies\",\n    \"category\": \"\",\n    \"kb_category\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/kb_category/5681bf8bff0221009b20ffffffffff95\",\n      \"value\": \"5681bf8bff0221009b20ffffffffff95\"\n    }\n  }\n}"
            },
            "createArticlesExample": {
                "title": "Root Type for createArticlesExample",
                "description": "The root of the createArticlesExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "short_description": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "wiki": {
                                "type": "object"
                            },
                            "direct": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "disable_suggesting": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "use_count": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "flagged": {
                                "type": "string"
                            },
                            "disable_commenting": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "valid_to": {
                                "format": "date",
                                "type": "string"
                            },
                            "retired": {
                                "type": "string"
                            },
                            "workflow_state": {
                                "type": "string"
                            },
                            "text": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "display_attachments": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string"
                            },
                            "sys_view_count": {
                                "type": "string"
                            },
                            "article_type": {
                                "type": "string"
                            },
                            "cmdb_ci": {
                                "type": "string"
                            },
                            "author": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "can_read_user_criteria": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "cannot_read_user_criteria": {
                                "type": "string"
                            },
                            "published": {
                                "format": "date",
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "kb_knowledge_base": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "meta": {
                                "type": "string"
                            },
                            "topic": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "kb_category": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": "{\n  \"result\": {\n    \"short_description\": \"How to Deal with Spam\",\n    \"roles\": \"\",\n    \"wiki\": null,\n    \"direct\": \"false\",\n    \"rating\": \"\",\n    \"description\": \"\",\n    \"source\": \"\",\n    \"sys_updated_on\": \"2014-12-19 15:54:36\",\n    \"disable_suggesting\": \"false\",\n    \"sys_class_name\": \"kb_knowledge\",\n    \"number\": \"KB0000011\",\n    \"sys_id\": \"0b48fd75474321009db4b5b08b9a71c2\",\n    \"use_count\": \"0\",\n    \"sys_updated_by\": \"johnoliver.mendoza\",\n    \"flagged\": \"false\",\n    \"disable_commenting\": \"false\",\n    \"sys_created_on\": \"2014-09-09 23:31:10\",\n    \"sys_domain\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\n      \"value\": \"global\"\n    },\n    \"valid_to\": \"2020-01-01\",\n    \"retired\": \"\",\n    \"workflow_state\": \"published\",\n    \"text\": \"some html\",\n    \"sys_created_by\": \"johnoliver.mendoza\",\n    \"display_attachments\": \"false\",\n    \"image\": \"\",\n    \"sys_view_count\": \"0\",\n    \"article_type\": \"text\",\n    \"cmdb_ci\": \"\",\n    \"author\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/sys_user/62d78687c0a8010e00b3d84178adc913\",\n      \"value\": \"62d78687c0a8010e00b3d84178adc913\"\n    },\n    \"can_read_user_criteria\": \"\",\n    \"sys_mod_count\": \"4\",\n    \"active\": \"true\",\n    \"cannot_read_user_criteria\": \"\",\n    \"published\": \"2014-09-09\",\n    \"sys_domain_path\": \"/\",\n    \"sys_tags\": \"\",\n    \"kb_knowledge_base\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/kb_knowledge_base/a7e8a78bff0221009b20ffffffffff17\",\n      \"value\": \"a7e8a78bff0221009b20ffffffffff17\"\n    },\n    \"meta\": \"\",\n    \"topic\": \"Policies\",\n    \"category\": \"\",\n    \"kb_category\": {\n      \"link\": \"https://dev10467.service-now.com/api/now/table/kb_category/5681bf8bff0221009b20ffffffffff95\",\n      \"value\": \"5681bf8bff0221009b20ffffffffff95\"\n    }\n  }\n}"
            },
            "getUsersExample": {
                "title": "Root Type for getUsersExample",
                "description": "The root of the getUsersExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "calendar_integration": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "user_password": {
                                "type": "string"
                            },
                            "last_login_time": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "building": {
                                "type": "string"
                            },
                            "web_service_access_only": {
                                "type": "string"
                            },
                            "notification": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "vip": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "zip": {
                                "type": "string"
                            },
                            "home_phone": {
                                "type": "string"
                            },
                            "time_format": {
                                "type": "string"
                            },
                            "last_login": {
                                "type": "string"
                            },
                            "default_perspective": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "cost_center": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "phone": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "employee_number": {
                                "type": "string"
                            },
                            "password_needs_reset": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "failed_attempts": {
                                "type": "string"
                            },
                            "user_name": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "internal_integration_user": {
                                "type": "string"
                            },
                            "ldap_server": {
                                "type": "string"
                            },
                            "mobile_phone": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "company": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "first_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "introduction": {
                                "type": "string"
                            },
                            "preferred_language": {
                                "type": "string"
                            },
                            "manager": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "locked_out": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "photo": {
                                "type": "string"
                            },
                            "middle_name": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "time_zone": {
                                "type": "string"
                            },
                            "schedule": {
                                "type": "string"
                            },
                            "date_format": {
                                "type": "string"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"calendar_integration\":\"1\",\"country\":\"\",\"user_password\":\"4aFLtbnZOP\",\"last_login_time\":\"\",\"source\":\"\",\"sys_updated_on\":\"2017-03-12 11:48:53\",\"building\":\"\",\"web_service_access_only\":\"false\",\"notification\":\"2\",\"sys_updated_by\":\"developer.program@snc\",\"sys_created_on\":\"2012-02-18 03:04:49\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"\",\"vip\":\"false\",\"sys_created_by\":\"admin\",\"zip\":\"\",\"home_phone\":\"\",\"time_format\":\"\",\"last_login\":\"\",\"default_perspective\":\"\",\"active\":\"true\",\"sys_domain_path\":\"/\",\"cost_center\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_cost_center/91e8bbf43710200044e0bfc8bcbe5daa\",\"value\":\"91e8bbf43710200044e0bfc8bcbe5daa\"},\"phone\":\"\",\"name\":\"Lucius Bagnoli\",\"employee_number\":\"\",\"password_needs_reset\":\"false\",\"gender\":\"Male\",\"city\":\"\",\"failed_attempts\":\"\",\"user_name\":\"lucius.bagnoli\",\"roles\":\"\",\"title\":\"\",\"sys_class_name\":\"sys_user\",\"sys_id\":\"02826bf03710200044e0bfc8bcbe5d3f\",\"internal_integration_user\":\"false\",\"ldap_server\":\"\",\"mobile_phone\":\"\",\"street\":\"\",\"company\":{\"link\":\"https://dev10467.service-now.com/api/now/table/core_company/81fd65ecac1d55eb42a426568fc87a63\",\"value\":\"81fd65ecac1d55eb42a426568fc87a63\"},\"department\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_department/5d7f17f03710200044e0bfc8bcbe5d43\",\"value\":\"5d7f17f03710200044e0bfc8bcbe5d43\"},\"first_name\":\"Lucius\",\"email\":\"lucius.bagnoli@example.com\",\"introduction\":\"\",\"preferred_language\":\"\",\"manager\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/02826bf03710200044e0bfc8bcbe5d88\",\"value\":\"02826bf03710200044e0bfc8bcbe5d88\"},\"locked_out\":\"false\",\"sys_mod_count\":\"5\",\"last_name\":\"Bagnoli\",\"photo\":\"\",\"middle_name\":\"\",\"sys_tags\":\"\",\"time_zone\":\"\",\"schedule\":\"\",\"date_format\":\"\",\"location\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_location/0002c0a93790200044e0bfc8bcbe5df5\",\"value\":\"0002c0a93790200044e0bfc8bcbe5df5\"}}}"
            },
            "createUserExample": {
                "title": "Root Type for createUserExample",
                "description": "The root of the createUserExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "calendar_integration": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "user_password": {
                                "type": "string"
                            },
                            "last_login_time": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "building": {
                                "type": "string"
                            },
                            "web_service_access_only": {
                                "type": "string"
                            },
                            "notification": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_domain": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "state": {
                                "type": "string"
                            },
                            "vip": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            },
                            "zip": {
                                "type": "string"
                            },
                            "home_phone": {
                                "type": "string"
                            },
                            "time_format": {
                                "type": "string"
                            },
                            "last_login": {
                                "type": "string"
                            },
                            "default_perspective": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "sys_domain_path": {
                                "type": "string"
                            },
                            "cost_center": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "phone": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "employee_number": {
                                "type": "string"
                            },
                            "password_needs_reset": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "failed_attempts": {
                                "type": "string"
                            },
                            "user_name": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "sys_class_name": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "internal_integration_user": {
                                "type": "string"
                            },
                            "ldap_server": {
                                "type": "string"
                            },
                            "mobile_phone": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "company": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "department": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "first_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "introduction": {
                                "type": "string"
                            },
                            "preferred_language": {
                                "type": "string"
                            },
                            "manager": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "locked_out": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "photo": {
                                "type": "string"
                            },
                            "middle_name": {
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "time_zone": {
                                "type": "string"
                            },
                            "schedule": {
                                "type": "string"
                            },
                            "date_format": {
                                "type": "string"
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"calendar_integration\":\"1\",\"country\":\"\",\"user_password\":\"4aFLtbnZOP\",\"last_login_time\":\"\",\"source\":\"\",\"sys_updated_on\":\"2017-03-12 11:48:53\",\"building\":\"\",\"web_service_access_only\":\"false\",\"notification\":\"2\",\"sys_updated_by\":\"developer.program@snc\",\"sys_created_on\":\"2012-02-18 03:04:49\",\"sys_domain\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user_group/global\",\"value\":\"global\"},\"state\":\"\",\"vip\":\"false\",\"sys_created_by\":\"admin\",\"zip\":\"\",\"home_phone\":\"\",\"time_format\":\"\",\"last_login\":\"\",\"default_perspective\":\"\",\"active\":\"true\",\"sys_domain_path\":\"/\",\"cost_center\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_cost_center/91e8bbf43710200044e0bfc8bcbe5daa\",\"value\":\"91e8bbf43710200044e0bfc8bcbe5daa\"},\"phone\":\"\",\"name\":\"Lucius Bagnoli\",\"employee_number\":\"\",\"password_needs_reset\":\"false\",\"gender\":\"Male\",\"city\":\"\",\"failed_attempts\":\"\",\"user_name\":\"lucius.bagnoli\",\"roles\":\"\",\"title\":\"\",\"sys_class_name\":\"sys_user\",\"sys_id\":\"02826bf03710200044e0bfc8bcbe5d3f\",\"internal_integration_user\":\"false\",\"ldap_server\":\"\",\"mobile_phone\":\"\",\"street\":\"\",\"company\":{\"link\":\"https://dev10467.service-now.com/api/now/table/core_company/81fd65ecac1d55eb42a426568fc87a63\",\"value\":\"81fd65ecac1d55eb42a426568fc87a63\"},\"department\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_department/5d7f17f03710200044e0bfc8bcbe5d43\",\"value\":\"5d7f17f03710200044e0bfc8bcbe5d43\"},\"first_name\":\"Lucius\",\"email\":\"lucius.bagnoli@example.com\",\"introduction\":\"\",\"preferred_language\":\"\",\"manager\":{\"link\":\"https://dev10467.service-now.com/api/now/table/sys_user/02826bf03710200044e0bfc8bcbe5d88\",\"value\":\"02826bf03710200044e0bfc8bcbe5d88\"},\"locked_out\":\"false\",\"sys_mod_count\":\"5\",\"last_name\":\"Bagnoli\",\"photo\":\"\",\"middle_name\":\"\",\"sys_tags\":\"\",\"time_zone\":\"\",\"schedule\":\"\",\"date_format\":\"\",\"location\":{\"link\":\"https://dev10467.service-now.com/api/now/table/cmn_location/0002c0a93790200044e0bfc8bcbe5df5\",\"value\":\"0002c0a93790200044e0bfc8bcbe5df5\"}}}"
            },
            "getGroupsExample": {
                "title": "Root Type for getGroupsExample",
                "description": "The root of the getGroupsExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "manager": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "cost_center": {
                                "type": "string"
                            },
                            "default_assignee": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "exclude_manager": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "include_members": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"manager\":\"\",\"roles\":\"\",\"sys_mod_count\":\"1\",\"active\":\"true\",\"description\":\"Responsible for Return Material Authorization approvals\\\\n\\\\t\\\\t\\\\tand RMA number allocations in Inventory Management\",\"source\":\"\",\"sys_updated_on\":\"2017-03-11 21:12:50\",\"sys_tags\":\"\",\"type\":\"\",\"sys_id\":\"1c590685c0a8018b2a473a7159ff5d9a\",\"sys_updated_by\":\"dariusz.maint\",\"cost_center\":\"\",\"default_assignee\":\"\",\"sys_created_on\":\"2017-03-11 21:01:31\",\"name\":\"RMA Approvers\",\"exclude_manager\":\"false\",\"email\":\"\",\"include_members\":\"false\",\"sys_created_by\":\"dariusz.maint\"}}"
            },
            "createGroupExample": {
                "title": "Root Type for createGroupExample",
                "description": "The root of the createGroupExample type's schema.",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "string"
                            },
                            "manager": {
                                "type": "string"
                            },
                            "roles": {
                                "type": "string"
                            },
                            "sys_mod_count": {
                                "type": "string"
                            },
                            "active": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "sys_updated_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "sys_tags": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "sys_id": {
                                "type": "string"
                            },
                            "sys_updated_by": {
                                "type": "string"
                            },
                            "cost_center": {
                                "type": "string"
                            },
                            "default_assignee": {
                                "type": "string"
                            },
                            "sys_created_on": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "exclude_manager": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "include_members": {
                                "type": "string"
                            },
                            "sys_created_by": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": "{\"result\":{\"parent\":\"\",\"manager\":\"\",\"roles\":\"\",\"sys_mod_count\":\"1\",\"active\":\"true\",\"description\":\"Responsible for Return Material Authorization approvals\\\\n\\\\t\\\\t\\\\tand RMA number allocations in Inventory Management\",\"source\":\"\",\"sys_updated_on\":\"2017-03-11 21:12:50\",\"sys_tags\":\"\",\"type\":\"\",\"sys_id\":\"1c590685c0a8018b2a473a7159ff5d9a\",\"sys_updated_by\":\"dariusz.maint\",\"cost_center\":\"\",\"default_assignee\":\"\",\"sys_created_on\":\"2017-03-11 21:01:31\",\"name\":\"RMA Approvers\",\"exclude_manager\":\"false\",\"email\":\"\",\"include_members\":\"false\",\"sys_created_by\":\"dariusz.maint\"}}"
            }
        },
        "securitySchemes": {
            "Basic": {
                "scheme": "basic",
                "type": "http"
            }
        }
    },
    "tags": [
        {
            "name": "Table",
            "description": ""
        },
        {
            "name": "Agent Presence",
            "description": ""
        },
        {
            "name": "Aggregate",
            "description": ""
        },
        {
            "name": "Application Service",
            "description": ""
        },
        {
            "name": "Attachment",
            "description": ""
        },
        {
            "name": "Change Management",
            "description": ""
        },
        {
            "name": "Customer Service Management",
            "description": ""
        },
        {
            "name": "Email",
            "description": ""
        },
        {
            "name": "Import Set",
            "description": ""
        },
        {
            "name": "Major Incident Management",
            "description": ""
        },
        {
            "name": "MetricBase Time Series",
            "description": ""
        },
        {
            "name": "Performance Analytics",
            "description": ""
        },
        {
            "name": "Push Installation",
            "description": ""
        },
        {
            "name": "Queue",
            "description": ""
        },
        {
            "name": "Service Catalog",
            "description": ""
        },
        {
            "name": "Task Communication Management",
            "description": ""
        },
        {
            "name": "User Role Inheritance",
            "description": ""
        },
        {
            "name": "TableChangeRequest",
            "description": "Entity for the change_request table"
        },
        {
            "name": "TableConfigItem",
            "description": "Entitiy for table cmdb_ci, aka Config Item"
        },
        {
            "name": "TableIncident",
            "description": ""
        },
        {
            "name": "TableProblems",
            "description": ""
        },
        {
            "name": "TableRequests",
            "description": ""
        },
        {
            "name": "TableRequestItems",
            "description": ""
        },
        {
            "name": "TableKnowledgeBase",
            "description": ""
        },
        {
            "name": "TableUsers",
            "description": ""
        },
        {
            "name": "TableUserGroups",
            "description": ""
        }
    ]
}