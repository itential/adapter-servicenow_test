openapi: 3.0.0
info:
  title: ServiceNow Madrid
  description: Custom built swagger for ServiceNow Madrid. Built May 21, 2019
  contact: {}
  version: '1.0.0'
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
paths:
  /now/table/{tableName}/{sys_id}:
    get:
      tags:
      - Table
      summary: queryTableByNameAndId
      description: Retrieves the record identified by the specified sys_id from the specified table.
      operationId: queryTableByNameAndId
      parameters:
      - name: tableName
        in: path
        description: Name of the table from which to retrieve the records.
        required: true
        style: simple
        schema:
          type: string
      - name: sys_id
        in: path
        description: Unique identifier of the record to retrieve.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/NowTableResponse'
                - example:
                    result:
                      upon_approval: ''
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba
                        value: 105cf7f3c611227501e75e08b14a38ba
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '3'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '4'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2015-11-11 22:04:15
                      delivery_task: ''
                      sys_updated_on: 2015-11-01 22:37:27
                      parent: ''
                      work_end: ''
                      number: INC0000046
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: software
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7
                        value: 8a4dde73c6112278017a6a4baf547aa7
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      knowledge: 'false'
                      made_sla: 'false'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2015-11-01 22:05:30
                      approval_set: ''
                      reassignment_count: '1'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 22:04:15
                      short_description: Can't access SFA software
                      order: ''
                      sys_updated_by: glide.maint
                      resolved_by: ''
                      notify: '1'
                      upon_reject: ''
                      approval_history: ''
                      problem_id:
                        link: https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74
                        value: a9e4890bc6112276003d7a5a5c774a74
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: a9e30c7dc61122760116894de7bcc7bd
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0
                        value: a9c0c8d2c6112276018f7705562f9cb0
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
              examples:
                name-value-pairs:
                  value:
                    result:
                      upon_approval: ''
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba
                        value: 105cf7f3c611227501e75e08b14a38ba
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '3'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '4'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2015-11-11 22:04:15
                      delivery_task: ''
                      sys_updated_on: 2015-11-01 22:37:27
                      parent: ''
                      work_end: ''
                      number: INC0000046
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: software
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7
                        value: 8a4dde73c6112278017a6a4baf547aa7
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      knowledge: 'false'
                      made_sla: 'false'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2015-11-01 22:05:30
                      approval_set: ''
                      reassignment_count: '1'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 22:04:15
                      short_description: Can't access SFA software
                      order: ''
                      sys_updated_by: glide.maint
                      resolved_by: ''
                      notify: '1'
                      upon_reject: ''
                      approval_history: ''
                      problem_id:
                        link: https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74
                        value: a9e4890bc6112276003d7a5a5c774a74
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: a9e30c7dc61122760116894de7bcc7bd
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0
                        value: a9c0c8d2c6112276018f7705562f9cb0
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - Table
      summary: updateTableRecord
      description: >+
        Updates the specified record with the request body.

      operationId: updateTableRecord
      parameters:
      - name: tableName
        in: path
        description: Name of the table from which to retrieve the records.
        required: true
        style: simple
        schema:
          type: string
      - name: sys_id
        in: path
        description: Unique identifier of the record to retrieve.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: 'name-value pairs for the field(s) to update in the associated table. For example, to update the short description file, enter a name-value pair similar to the following: --data "{\"short_description\": \"my short desc\" }" \.'
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NowTableRequest'
              - description: 'name-value pairs for the field(s) to update in the associated table. For example, to update the short description file, enter a name-value pair similar to the following: --data "{\"short_description\": \"my short desc\" }" \.'
                example:
                  assigned_to: 681b365ec0a80164000fb0b05854a0cd
                  urgency: '1'
                  comments: Elevating urgency, this is a blocking issue
            examples:
              name-value pairs:
                value:
                  assigned_to: 681b365ec0a80164000fb0b05854a0cd
                  urgency: '1'
                  comments: Elevating urgency, this is a blocking issue
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/NowTableResponse'
                - example:
                    result:
                      upon_approval: proceed
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/108752c8c611227501d4ab0e392ba97f
                        value: 108752c8c611227501d4ab0e392ba97f
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '1'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '1'
                      delivery_plan: ''
                      sys_mod_count: '7'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2017-07-05 05:58:24
                      delivery_task: ''
                      sys_updated_on: 2016-01-22 14:12:37
                      parent: ''
                      work_end: ''
                      number: INC0000050
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: hardware
                      business_duration: ''
                      incident_state: '2'
                      activity_due: 2016-01-22 16:12:37
                      correlation_display: ''
                      company:
                        link: https://instance.service-now.com/api/now/table/core_company/31bea3d53790200044e0bfc8bcbe5dec
                        value: 31bea3d53790200044e0bfc8bcbe5dec
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a5055c9c61122780043563ef53438e3
                        value: 8a5055c9c61122780043563ef53438e3
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/5b7c200d0a640069006b3845b5d0fa7c
                        value: 5b7c200d0a640069006b3845b5d0fa7c
                      knowledge: 'false'
                      made_sla: 'true'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '2'
                      user_input: ''
                      sys_created_on: 2015-11-02 18:05:40
                      approval_set: ''
                      reassignment_count: '0'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 21:58:24
                      short_description: Can't access Exchange server - is it down?
                      order: ''
                      sys_updated_by: admin
                      resolved_by: ''
                      notify: '1'
                      upon_reject: cancel
                      approval_history: ''
                      problem_id: ''
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: ef43c6d40a0a0b5700c77f9bf387afe3
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: glide.maint
                      resolved_at: ''
                      assigned_to:
                        link: https://instance.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd
                        value: 681b365ec0a80164000fb0b05854a0cd
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/281190e3c0a8000b003f593aa3f20ca6
                        value: 281190e3c0a8000b003f593aa3f20ca6
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/glide.maint
                        value: glide.maint
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '3'
                      comments: ''
              examples:
                name-value pairs:
                  value:
                    result:
                      upon_approval: proceed
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/108752c8c611227501d4ab0e392ba97f
                        value: 108752c8c611227501d4ab0e392ba97f
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '1'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '1'
                      delivery_plan: ''
                      sys_mod_count: '7'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2017-07-05 05:58:24
                      delivery_task: ''
                      sys_updated_on: 2016-01-22 14:12:37
                      parent: ''
                      work_end: ''
                      number: INC0000050
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: hardware
                      business_duration: ''
                      incident_state: '2'
                      activity_due: 2016-01-22 16:12:37
                      correlation_display: ''
                      company:
                        link: https://instance.service-now.com/api/now/table/core_company/31bea3d53790200044e0bfc8bcbe5dec
                        value: 31bea3d53790200044e0bfc8bcbe5dec
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a5055c9c61122780043563ef53438e3
                        value: 8a5055c9c61122780043563ef53438e3
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/5b7c200d0a640069006b3845b5d0fa7c
                        value: 5b7c200d0a640069006b3845b5d0fa7c
                      knowledge: 'false'
                      made_sla: 'true'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '2'
                      user_input: ''
                      sys_created_on: 2015-11-02 18:05:40
                      approval_set: ''
                      reassignment_count: '0'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 21:58:24
                      short_description: Can't access Exchange server - is it down?
                      order: ''
                      sys_updated_by: admin
                      resolved_by: ''
                      notify: '1'
                      upon_reject: cancel
                      approval_history: ''
                      problem_id: ''
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: ef43c6d40a0a0b5700c77f9bf387afe3
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: glide.maint
                      resolved_at: ''
                      assigned_to:
                        link: https://instance.service-now.com/api/now/table/sys_user/681b365ec0a80164000fb0b05854a0cd
                        value: 681b365ec0a80164000fb0b05854a0cd
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/281190e3c0a8000b003f593aa3f20ca6
                        value: 281190e3c0a8000b003f593aa3f20ca6
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/glide.maint
                        value: glide.maint
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '3'
                      comments: ''
      deprecated: false
    delete:
      tags:
      - Table
      summary: deleteTableRecord
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteTableRecord
      parameters:
      - name: tableName
        in: path
        description: Name of the table from which to retrieve the records.
        required: true
        style: simple
        schema:
          type: string
      - name: sys_id
        in: path
        description: Unique identifier of the record to retrieve.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/{tableName}:
    get:
      tags:
      - Table
      summary: queryTableByName
      description: Retrieves all the records from the specified table.
      operationId: queryTableByName
      parameters:
      - name: tableName
        in: path
        description: Name of the table from which to retrieve the records.
        required: true
        style: simple
        schema:
          type: string
      - name: sysparm_query
        in: query
        description: e.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/NowTableResponse'
                - example:
                    result:
                      upon_approval: ''
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba
                        value: 105cf7f3c611227501e75e08b14a38ba
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '3'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '4'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2015-11-11 22:04:15
                      delivery_task: ''
                      sys_updated_on: 2015-11-01 22:37:27
                      parent: ''
                      work_end: ''
                      number: INC0000046
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: software
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7
                        value: 8a4dde73c6112278017a6a4baf547aa7
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      knowledge: 'false'
                      made_sla: 'false'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2015-11-01 22:05:30
                      approval_set: ''
                      reassignment_count: '1'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 22:04:15
                      short_description: Can't access SFA software
                      order: ''
                      sys_updated_by: glide.maint
                      resolved_by: ''
                      notify: '1'
                      upon_reject: ''
                      approval_history: ''
                      problem_id:
                        link: https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74
                        value: a9e4890bc6112276003d7a5a5c774a74
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: a9e30c7dc61122760116894de7bcc7bd
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0
                        value: a9c0c8d2c6112276018f7705562f9cb0
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
              examples:
                name-value-pairs:
                  value:
                    result:
                      upon_approval: ''
                      location:
                        link: https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba
                        value: 105cf7f3c611227501e75e08b14a38ba
                      expected_start: ''
                      reopen_count: ''
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '1'
                      urgency: '3'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '4'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: 2015-11-11 22:04:15
                      delivery_task: ''
                      sys_updated_on: 2015-11-01 22:37:27
                      parent: ''
                      work_end: ''
                      number: INC0000046
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: software
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7
                        value: 8a4dde73c6112278017a6a4baf547aa7
                      caller_id:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      knowledge: 'false'
                      made_sla: 'false'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2015-11-01 22:05:30
                      approval_set: ''
                      reassignment_count: '1'
                      rfc: ''
                      child_incidents: ''
                      opened_at: 2015-11-02 22:04:15
                      short_description: Can't access SFA software
                      order: ''
                      sys_updated_by: glide.maint
                      resolved_by: ''
                      notify: '1'
                      upon_reject: ''
                      approval_history: ''
                      problem_id:
                        link: https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74
                        value: a9e4890bc6112276003d7a5a5c774a74
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: a9e30c7dc61122760116894de7bcc7bd
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci:
                        link: https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0
                        value: a9c0c8d2c6112276018f7705562f9cb0
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
                        value: 46c6f9efa9fe198101ddf5eed9adf6e7
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Table
      summary: createRecordInTable
      description: Inserts one record in the specified table. Multiple record insertion is not supported by this method.
      operationId: createRecordInTable
      parameters:
      - name: tableName
        in: path
        description: Name of the table from which to retrieve the records.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NowTableRequest1'
              - example:
                  short_description: Unable to connect to office wifi
                  assignment_group: 287ebd7da9fe198100f92cc8d1d2154e
                  urgency: '2'
                  impact: '2'
            examples:
              name-value pairs:
                value:
                  short_description: Unable to connect to office wifi
                  assignment_group: 287ebd7da9fe198100f92cc8d1d2154e
                  urgency: '2'
                  impact: '2'
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/NowTableResponse'
                - example:
                    result:
                      upon_approval: proceed
                      location: ''
                      expected_start: ''
                      reopen_count: '0'
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '2'
                      urgency: '2'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '0'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: ''
                      delivery_task: ''
                      sys_updated_on: 2016-01-22 14:28:24
                      parent: ''
                      work_end: ''
                      number: INC0010002
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: inquiry
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/287ebd7da9fe198100f92cc8d1d2154e
                        value: 287ebd7da9fe198100f92cc8d1d2154e
                      caller_id: ''
                      knowledge: 'false'
                      made_sla: 'true'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2016-01-22 14:28:24
                      approval_set: ''
                      reassignment_count: '0'
                      rfc: ''
                      child_incidents: '0'
                      opened_at: 2016-01-22 14:28:24
                      short_description: Unable to connect to office wifi
                      order: ''
                      sys_updated_by: admin
                      resolved_by: ''
                      notify: '1'
                      upon_reject: cancel
                      approval_history: ''
                      problem_id: ''
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: c537bae64f411200adf9f8e18110c76e
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci: ''
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441
                        value: 6816f79cc0a8016401c5a33be04be441
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
              examples:
                name-value pairs:
                  value:
                    result:
                      upon_approval: proceed
                      location: ''
                      expected_start: ''
                      reopen_count: '0'
                      close_notes: ''
                      additional_assignee_list: ''
                      impact: '2'
                      urgency: '2'
                      correlation_id: ''
                      sys_tags: ''
                      sys_domain:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/global
                        value: global
                      description: ''
                      group_list: ''
                      priority: '3'
                      delivery_plan: ''
                      sys_mod_count: '0'
                      work_notes_list: ''
                      business_service: ''
                      follow_up: ''
                      closed_at: ''
                      sla_due: ''
                      delivery_task: ''
                      sys_updated_on: 2016-01-22 14:28:24
                      parent: ''
                      work_end: ''
                      number: INC0010002
                      closed_by: ''
                      work_start: ''
                      calendar_stc: ''
                      category: inquiry
                      business_duration: ''
                      incident_state: '1'
                      activity_due: ''
                      correlation_display: ''
                      company: ''
                      active: 'true'
                      due_date: ''
                      assignment_group:
                        link: https://instance.service-now.com/api/now/table/sys_user_group/287ebd7da9fe198100f92cc8d1d2154e
                        value: 287ebd7da9fe198100f92cc8d1d2154e
                      caller_id: ''
                      knowledge: 'false'
                      made_sla: 'true'
                      comments_and_work_notes: ''
                      parent_incident: ''
                      state: '1'
                      user_input: ''
                      sys_created_on: 2016-01-22 14:28:24
                      approval_set: ''
                      reassignment_count: '0'
                      rfc: ''
                      child_incidents: '0'
                      opened_at: 2016-01-22 14:28:24
                      short_description: Unable to connect to office wifi
                      order: ''
                      sys_updated_by: admin
                      resolved_by: ''
                      notify: '1'
                      upon_reject: cancel
                      approval_history: ''
                      problem_id: ''
                      work_notes: ''
                      calendar_duration: ''
                      close_code: ''
                      sys_id: c537bae64f411200adf9f8e18110c76e
                      approval: not requested
                      caused_by: ''
                      severity: '3'
                      sys_created_by: admin
                      resolved_at: ''
                      assigned_to: ''
                      business_stc: ''
                      wf_activity: ''
                      sys_domain_path: /
                      cmdb_ci: ''
                      opened_by:
                        link: https://instance.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441
                        value: 6816f79cc0a8016401c5a33be04be441
                      subcategory: ''
                      rejection_goto: ''
                      sys_class_name: incident
                      watch_list: ''
                      time_worked: ''
                      contact_type: phone
                      escalation: '0'
                      comments: ''
      deprecated: false
  /now/awa/agents/{sys_id}:
    put:
      tags:
      - Agent Presence
      summary: setAgentPresence
      description: >+
        Sets the state of a provided agent’s presence and sets the agent’s channel availability for that state (if provided).

      operationId: setAgentPresence
      parameters:
      - name: sys_id
        in: path
        description: The sys_id of the user listed in sys_user table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
      deprecated: false
  /now/stats/{tableName}:
    get:
      tags:
      - Aggregate
      summary: getAggregate
      description: >+
        This method retrieves records for the specified table and performs aggregate functions on the returned values.

      operationId: getAggregate
      parameters:
      - name: sysparm_query
        in: query
        description: An encoded query.
        required: true
        style: form
        explode: true
        schema:
          type: object
      - name: tableName
        in: path
        description: tableName
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/cmdb/app_service/{sys_id}/getContent:
    get:
      tags:
      - Application Service
      summary: getApplicationById
      description: >+
        Retrieve a list of CIs in an application service and the relationships between them. Only retrieves content for services that were manually created.

      operationId: getApplicationById
      parameters:
      - name: sys_id
        in: path
        description: sysId
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
        '404':
          description: Indicates the specified resource was not available. As import set tables are deleted frequently based on a schedule, GET requests may return 404 NotFound responses if the transformation result no longer exists.
          headers: {}
          content: {}
      deprecated: false
  /now/cmdb/app_service/create:
    post:
      tags:
      - Application Service
      summary: createApplication
      description: >+
        Create an application service or update an existing application service.

      operationId: createApplication
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            examples:
              data:
                value: >-
                  {

                  \"name\": \"myTestAppService\",

                  \"comments\": \"Passing data to the Comments field\",

                  \"service_relations\": [

                  { \"parent\": \"\",

                  \"child\": \"3a70f789c0a8ce010091b0ea635b982a\"

                  },{ \"parent\": \"3a70f789c0a8ce010091b0ea635b982a\",

                  \"child\": \"b4fd7c8437201000deeabfc8bcbe5dc1\"

                  },{ \"parent\": \"b4fd7c8437201000deeabfc8bcbe5dc1\",

                  \"child\": \"53fdbc8437201000deeabfc8bcbe5d10\"

                  }

                  ]

                  }
        required: true
      responses:
        '201':
          description: Indicates the import completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/attachment/{sys_id}:
    get:
      tags:
      - Attachment
      summary: getAttachmentMetadataById
      description: >+
        This method gets the metadata for the attachment file with a specific sys_id value.

      operationId: getAttachmentMetadataById
      parameters:
      - name: sys_id
        in: path
        description: The sys_id of the attachment record you want to get metadata for.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Attachment
      summary: deleteAttachmentById
      description: >+
        This method deletes the attachment with a specific sys_id value.

      operationId: deleteAttachmentById
      parameters:
      - name: sys_id
        in: path
        description: The sys_id of the attachment record you want to get metadata for.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request ran successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/attachment/{sys_id}/file:
    get:
      tags:
      - Attachment
      summary: getAttachmentBinaryById
      description: >+
        This method gets the binary file attachment with a specific sys_id value.

      operationId: getAttachmentBinaryById
      parameters:
      - name: sys_id
        in: path
        description: The sys_id of the attachment record you want to get metadata for.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/attachment/upload:
    post:
      tags:
      - Attachment
      summary: uploadMultipartAttachment
      description: >+
        This method uploads a multipart file attachment.

      operationId: uploadMultipartAttachment
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema: {}
        required: true
      responses:
        '201':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/attachment:
    get:
      tags:
      - Attachment
      summary: getAttachmentsMetadata
      description: >+
        This method gets the metadata for multiple attachments.

      operationId: getAttachmentsMetadata
      parameters:
      - name: sysparm_query
        in: query
        description: e.g. table_sys_id=c83c5e5347c12200e0ef563dbb9a7190
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/attachment/file:
    post:
      tags:
      - Attachment
      summary: uploadAttachment
      description: >+
        This method uploads a binary file specified in the request body as an attachment.

      operationId: uploadAttachment
      parameters:
      - name: encryption_context
        in: query
        description: The sys_id of an encryption context record. Specify this parameter to allow only users with the specified encryption context to access the attachment. If you do not specify this parameter, the attached file is not encrypted with any encryption context.
        style: form
        explode: true
        schema:
          type: string
      - name: file_name
        in: query
        description: The name to give the attachment. This parameter is required to post an attachment.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: table_name
        in: query
        description: The name of the table you want to attach the file to. This parameter is required to post an attachment.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: table_sys_id
        in: query
        description: The sys_id of the record on the specified table that you want to attach the file to. This parameter is required to post an attachment.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema: {}
        required: true
      responses:
        '201':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
        '400':
          description: Indicates that one or more mandatory parameters were missing from the request.
          headers: {}
          content: {}
        '404':
          description: Indicates the record specified by the table_name and table_sys_id parameters does not exist or is not accessible by the current user.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/standard/{standard_change_template_id}:
    post:
      tags:
      - Change Management
      summary: changeStandardTemplateById
      description: >+
        Creates one standard change request based on an existing standard change template as specified by the passed-in template sys_id. Multiple standard change request creations within a single call is not supported.

      operationId: changeStandardTemplateById
      parameters:
      - name: standard_change_template_id
        in: path
        description: Unique identifier of the standard change template on which to base the new standard change request (from [std_change_record_producer] table).
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/standard:
    get:
      tags:
      - Change Management
      summary: getStandardChangeRequest
      description: >+
        Retrieves one or more standard change requests based on the specified criteria.

      operationId: getStandardChangeRequest
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/standard/{sys_id}:
    get:
      tags:
      - Change Management
      summary: getStandardChangeRequestById
      description: Retrieves the standard change request identified by the specified sys_id.
      operationId: getStandardChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Change Management
      summary: deleteStandardChangeRequestById
      description: >+
        Deletes the standard change request identified by the specified sys_id.

      operationId: deleteStandardChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/standard/template:
    get:
      tags:
      - Change Management
      summary: getStandardChangeTemplate
      description: >+
        Retrieves one or more standard change templates based on the specified criteria.

      operationId: getStandardChangeTemplate
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set.
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/standard/template/{sys_id}:
    get:
      tags:
      - Change Management
      summary: getStandardChangeTemplateById
      description: >+
        Retrieves the standard change template identified by the specified sys_id.

      operationId: getStandardChangeTemplateById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set.
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change template to retrieve from the [std_change_record_producer] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/normal:
    get:
      tags:
      - Change Management
      summary: getNormalChangeRequest
      description: >+
        Retrieves one or more normal change requests based on the specified criteria

      operationId: getNormalChangeRequest
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set.
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Change Management
      summary: createNormalChangeRequest
      description: Creates one normal change request based on the default normal change request record. Multiple normal change request creations within a single call is not supported.
      operationId: createNormalChangeRequest
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/normal/{sys_id}:
    get:
      tags:
      - Change Management
      summary: getNormalChangeRequestById
      description: >+
        Retrieves the normal change request identified by the specified sys_id.

      operationId: getNormalChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Change Management
      summary: deleteNormalChangeRequestById
      description: >+
        Deletes the normal change request identified by the specified sys_id.

      operationId: deleteNormalChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/emergency:
    get:
      tags:
      - Change Management
      summary: getEmergencyChangeRequest
      description: >+
        Retrieves one or more emergency change requests based on the specified criteria.

      operationId: getEmergencyChangeRequest
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set.
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Change Management
      summary: createEmergencyChangeRequest
      description: >+
        Creates one emergency change request based on the default emergency change request record. Multiple emergency change request creations within a single call is not supported.

      operationId: createEmergencyChangeRequest
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/emergency/{sys_id}:
    get:
      tags:
      - Change Management
      summary: getEmergencyChangeRequestById
      description: >+
        Retrieves the emergency change request identified by the specified sys_id.

      operationId: getEmergencyChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Change Management
      summary: deleteEmergencyChangeRequestById
      description: >+
        Deletes the emergency change request identified by the specified sys_id.

      operationId: deleteEmergencyChangeRequestById
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/{sys_id}/task:
    get:
      tags:
      - Change Management
      summary: getChangeRequestTask
      description: >+
        Retrieves one or more tasks associated with a specified change request based on the specified criteria.

      operationId: getChangeRequestTask
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set.
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change request to which to associate this task (from [change_request] table).
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Change Management
      summary: createChangeRequestTask
      description: >+
        Creates one change request task based on the default change request task record and associates it with the specified change request. Multiple change request task creations within a single call is not supported.

      operationId: createChangeRequestTask
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change request to which to associate this task (from [change_request] table).
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/{sys_id}/task/{task_sys_id}:
    get:
      tags:
      - Change Management
      summary: getChangeTaskByTaskId
      description: >+
        Retrieves the task for the change request identified by the specified sys_ids.

      operationId: getChangeTaskByTaskId
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change request to which the specified task is associated (from [change_request] table). Verifies that the specified task is associated with the specified change request.
        required: true
        style: simple
        schema:
          type: string
      - name: task_sys_id
        in: path
        description: Unique identifier of the task to retrieve (from [change_task] table).
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Change Management
      summary: deleteChangeTaskByTaskId
      description: >+
        Deletes the change request task identified by the specified sys_ids.

      operationId: deleteChangeTaskByTaskId
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change request to which the specified task is associated (from [change_request] table). Verifies that the specified task is associated with the specified change request.
        required: true
        style: simple
        schema:
          type: string
      - name: task_sys_id
        in: path
        description: Unique identifier of the task to retrieve (from [change_task] table).
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_chg_rest/change/{sys_id}/conflict:
    get:
      tags:
      - Change Management
      summary: getChangeRequestConflict
      description: >+
        Retrieves the status of the currently running change request conflict checking process or the results of the last completed conflict checking process for the specified change request.

      operationId: getChangeRequestConflict
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change management request for which to start the conflict checking process (from [change_request] table). For additional information on the conflict checking process, see Conflict detection.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Change Management
      summary: createChangeRequestConflict
      description: >+
        Starts a change request conflict checking process for the specified change request (sys_id).

      operationId: createChangeRequestConflict
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the change management request for which to start the conflict checking process (from [change_request] table). For additional information on the conflict checking process, see Conflict detection.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad Request. Request was unable to start due to unresolvable errors. The returned message may provide additional details.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Change Management
      summary: cancelChangeRequestConflict
      description: >+
        Cancels the running conflict checking process for the specified change request (sys_id).

      operationId: cancelChangeRequestConflict
      parameters:
      - name: sysparm_query
        in: query
        description: Encoded query used to filter the result set. e.g. change=CHG123456
        style: form
        explode: true
        schema:
          type: object
      - name: sys_id
        in: path
        description: Unique identifier of the standard change request to retrieve from the [change_request] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Bad request. Cancel request failed.
          headers: {}
          content: {}
        '404':
          description: Not Found. The specified record could not be found.
          headers: {}
          content: {}
      deprecated: false
  /now/account/{id}:
    get:
      tags:
      - Customer Service Management
      summary: getCSMAccount
      description: >+
        Retrieves the specified CSM account.

      operationId: getCSMAccount
      parameters:
      - name: id
        in: path
        description: Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '404':
          description: >-
            Indicates that the request is invalid. Could be due to one of the following reasons:

            Requested case does not exist.

            User does not have access to the account record.
          headers: {}
          content: {}
      deprecated: false
  /now/account:
    get:
      tags:
      - Customer Service Management
      summary: queryCSMAccounts
      description: >
        <p>Gets the user information for the specified ID.</p><br/><b>Sample Request (Python)</b><pre>import&nbsp;http.client<br/><br/>conn&nbsp;=&nbsp;http.client.HTTPSConnection(&quot;HOSTNAME&quot;)<br/><br/>headers&nbsp;=&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;'content-type':&nbsp;&quot;application/json&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;'cache-control':&nbsp;&quot;no-cache&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;'cookie':&nbsp;&quot;JSESSIONID=xxxxxxx&quot;<br/>}<br/><br/>conn.request(&quot;GET&quot;,&nbsp;&quot;/api/v1/users/72548&quot;,&nbsp;headers=headers)<br/><br/>res&nbsp;=&nbsp;conn.getresponse()<br/>data&nbsp;=&nbsp;res.read()<br/><br/>print(data.decode(&quot;utf-8&quot;))</pre> <br/> <b>Sample Response</b><pre>{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;72548,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;тест1&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;email&quot;:&nbsp;&quot;admin2@antest.com&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;groups&quot;:&nbsp;[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;75444,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;testgroup&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;],<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;department&quot;:&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;72520,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;Service&nbsp;Admin&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;comments&quot;:&nbsp;&quot;test&quot;,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&quot;adminUser&quot;:&nbsp;true<br/>}</pre>
      operationId: queryCSMAccounts
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_customerservice/case/{id}:
    get:
      tags:
      - Customer Service Management
      summary: getCSMCase
      description: >+
        Retrieves the specified CSM case.

      operationId: getCSMCase
      parameters:
      - name: id
        in: path
        description: Unique identifier (sys_id) of the case to retrieve; located in the Case [sn_customerservice_case] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '404':
          description: >-
            Indicates that the request is invalid. Could be due to one of the following reasons:

            Requested case does not exist.

            User does not have access to the account record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - Customer Service Management
      summary: updateCSMCase
      description: >+
        Updates the specified existing CSM case with the passed-in parameters.

      operationId: updateCSMCase
      parameters:
      - name: id
        in: path
        description: Unique identifier (sys_id) of the case to retrieve; located in the Case [sn_customerservice_case] table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: Success
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /sn_customerservice/case:
    get:
      tags:
      - Customer Service Management
      summary: queryCSMCases
      description: >+
        Retrieves a specified set of CSM cases.

      operationId: queryCSMCases
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Customer Service Management
      summary: createCSMCase
      description: >+
        Creates a new CSM case.

      operationId: createCSMCase
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: New case record was successfully created.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /now/consumer/{id}:
    get:
      tags:
      - Customer Service Management
      summary: getCSMConsumer
      description: >+
        Retrieves the specified CSM consumer record.

      operationId: getCSMConsumer
      parameters:
      - name: id
        in: path
        description: Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '404':
          description: >-
            Indicates that the request is invalid. Could be due to one of the following reasons:

            Requested case does not exist.

            User does not have access to the account record.
          headers: {}
          content: {}
      deprecated: false
  /now/consumer:
    get:
      tags:
      - Customer Service Management
      summary: queryCSMConsumers
      description: >+
        Retrieves a specified set of CSM consumer records.

      operationId: queryCSMConsumers
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Customer Service Management
      summary: createCSMConsumer
      description: >+
        Creates a new CSM consumer.

      operationId: createCSMConsumer
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: New consumer record was successfully created.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /now/contact:
    get:
      tags:
      - Customer Service Management
      summary: queryCSMContacts
      description: >+
        Retrieves a specified set of CSM contacts.

      operationId: queryCSMContacts
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - Customer Service Management
      summary: createCSMContact
      description: >+
        Creates a new CSM contact.

      operationId: createCSMContact
      parameters:
      - name: sysparm_query
        in: query
        description: 'Encoded query to use to filter the result set. Syntax: sysparm_query=<attr><operator><value>.'
        required: true
        style: form
        explode: true
        schema:
          type: object
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: New contact record was successfully created.
          headers: {}
          content: {}
        '400':
          description: Bad Request. A bad request type or malformed request was detected.
          headers: {}
          content: {}
        '500':
          description: Internal Server Error. A logic error on the server-side code occurred.
          headers: {}
          content: {}
      deprecated: false
  /now/contact/{id}:
    get:
      tags:
      - Customer Service Management
      summary: getCSMContact
      description: >+
        Retrieves the specified CSM contact.

      operationId: getCSMContact
      parameters:
      - name: id
        in: path
        description: Unique identifier (sys_id) of the account to retrieve; located in the Customer [customer_account] table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request has successfully completed.
          headers: {}
          content: {}
        '404':
          description: >-
            Indicates that the request is invalid. Could be due to one of the following reasons:

            Requested case does not exist.

            User does not have access to the account record.
          headers: {}
          content: {}
      deprecated: false
  /now/email:
    post:
      tags:
      - Email
      summary: createEmail
      description: >+
        This method creates the email record specified in the request body.

      operationId: createEmail
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            examples:
              data:
                value: >-
                  {
                               \"to\": [
                                   \"User1 <user1@example.com>\",
                                   \"User2 <user2@example.com>\"
                               ],
                               \"cc\": [
                                   \"User3 <user3@example.com>\",
                                   \"User4 <user4@example.com>\"
                               ],
                               \"bcc\": [
                                   \"User5 <user5@example.com>\",
                                   \"User6 <user6@example.com>\"
                               ],
                               \"subject\": \"Hello There\",
                               \"text\": \"Test Message\",
                               \"html\": \"<b>Test Message</b>\",
                               \"table_name\": \"incident\",
                               \"table_record_id\": \"136b2140bd0312004d7d1371f1abbdb6\",
                               \"headers\": {
                                   \"X-Custom\": \"header\"
                               }
                           }
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Indicates that there is an error with the request message. The response body contains information about the error.
          headers: {}
          content: {}
        '403':
          description: Indicates that the requesting user does not have access to the record. Verify that the user has the proper role and access permissions.
          headers: {}
          content: {}
        '500':
          description: Indicates that there is an unexpected or internal error.
          headers: {}
          content: {}
      deprecated: false
  /now/email/{sys_id}:
    get:
      tags:
      - Email
      summary: getEmail
      description: >+
        This method returns the record details of the specified email record.

      operationId: getEmail
      parameters:
      - name: sys_id
        in: path
        description: sysId
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates the request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content: {}
        '403':
          description: Indicates the record is not found or the requesting user does not have access to the record. Verify the user has the proper role and access permissions.
          headers: {}
          content: {}
      deprecated: false
  /now/import/{tableName}:
    post:
      tags:
      - Import Set
      summary: importIntoTable
      description: >+
        This method inserts incoming data into a specified staging table and triggers transformation based on predefined transform maps in the import set table.

      operationId: importIntoTable
      parameters:
      - name: tableName
        in: path
        description: tableName
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NowImportRequest'
              - example:
                  first_name: John
                  last_name: Public
                  user_id: john.public
                  email: john.public@company.com
            examples:
              data:
                value:
                  first_name: John
                  last_name: Public
                  user_id: john.public
                  email: john.public@company.com
        required: true
      responses:
        '201':
          description: Indicates the import completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/import/{tableName}/{sys_id}:
    get:
      tags:
      - Import Set
      summary: getImportById
      description: >+
        This method retrieves the specified import staging record and resulting transformation result.

      operationId: getImportById
      parameters:
      - name: tableName
        in: path
        description: tableName
        required: true
        style: simple
        schema:
          type: string
      - name: sys_id
        in: path
        description: sysId
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates the query ran successfully.
          headers: {}
          content: {}
        '404':
          description: Indicates the specified resource was not available. As import set tables are deleted frequently based on a schedule, GET requests may return 404 NotFound responses if the transformation result no longer exists.
          headers: {}
          content: {}
      deprecated: false
  /sn_major_inc_mgmt/mim/state/{sys_id}:
    post:
      tags:
      - Major Incident Management
      summary: createMajorIncident
      description: >+
        This method performs UI actions and returns success status on completion of action. The UI actions can be Promote to Major Incident (PROMOTE), Resolve Major Incident (RESOLVE), Close Major Incident (CLOSE), Reject Major Incident (REJECT), Create New Major Incident (CREATE_NEW_MI), or Refresh Impacted Services (REFRESH_IMPACTED_SERVICES).

      operationId: createMajorIncident
      parameters:
      - name: sys_id
        in: path
        description: Sys id of the incident.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Success
          headers: {}
          content: {}
      deprecated: false
  /sn_major_inc_mgmt/mim/status/{sys_id}:
    get:
      tags:
      - Major Incident Management
      summary: getMajorIncident
      description: >+
        This method retrieves records for communication cards. The cards include total count of each card.

      operationId: getMajorIncident
      parameters:
      - name: sys_id
        in: path
        description: Sys id of the incident.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Success.
          headers: {}
          content: {}
      deprecated: false
  /now/v1/clotho/table/{table}/{subject}/{metric}:
    get:
      tags:
      - MetricBase Time Series
      summary: getMetricBase
      description: >+
        Retrieve time series data from the MetricBase database.

      operationId: getMetricBase
      parameters:
      - name: table
        in: path
        description: Name of the table containing the GlideRecord associated with this series.
        required: true
        style: simple
        schema:
          type: string
      - name: subject
        in: path
        description: The sys_id of the GlideRecord associated with this series.
        required: true
        style: simple
        schema:
          type: string
      - name: metric
        in: path
        description: The field name of the metric.
        required: true
        style: simple
        schema:
          type: string
      - name: sysparm_end
        in: query
        description: The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sysparm_start
        in: query
        description: The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          headers: {}
          content: {}
      deprecated: false
  /now/v1/clotho/transform/{table}/{metric}:
    get:
      tags:
      - MetricBase Time Series
      summary: transformMetricBase
      description: >+
        Transforms selected data.

      operationId: transformMetricBase
      parameters:
      - name: table
        in: path
        description: Name of the table containing the GlideRecord associated with this series.
        required: true
        style: simple
        schema:
          type: string
      - name: metric
        in: path
        description: The field name of the metric.
        required: true
        style: simple
        schema:
          type: string
      - name: sysparm_end
        in: query
        description: The end time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sysparm_start
        in: query
        description: The start time of the evaluation period in UTC. The value must be in ISO date format up to seconds. For example, 2017-03-20T17:04:55.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          headers: {}
          content: {}
      deprecated: false
  /now/v1/clotho/put:
    post:
      tags:
      - MetricBase Time Series
      summary: createMetricBase
      description: >+
        Adds time-series data to the MetricBase database.

      operationId: createMetricBase
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            examples:
              data:
                value: >-
                  {
                    \"seriesRef\": {
                      \"subject\": \"3D666b051787333200a328c5b836cb0b92\",
                      \"table\": \"mb_demo_drone\",
                      \"metric\": \"mb_demo_mt_altitude\"
                    },
                    \"values\": [
                      {
                        \"timestamp\": \"2019-03-21T17:05:00Z\",
                        \"value\": 0.150185
                      },
                      {
                        \"timestamp\": \"2019-03-21T17:06:00Z\",
                        \"value\": 0.46074
                      },
                      {
                        \"timestamp\": \"2019-03-21T17:07:00Z\",
                        \"value\": 0.83104
                      },
                      {
                        \"timestamp\": \"2019-03-21T17:08:00Z\",
                        \"value\": 1.260635
                      },
                      {
                        \"timestamp\": \"2019-03-21T17:09:00Z\",
                        \"value\": 1.749
                      }
                    ]
                  }
        required: true
      responses:
        '200':
          description: Success
          headers: {}
          content: {}
      deprecated: false
  /now/pa/scorecards:
    get:
      tags:
      - Performance Analytics
      summary: getPerformanceAnalytics
      description: >+
        This method retrieves details about indicators from the Analytics Hub.

      operationId: getPerformanceAnalytics
      parameters:
      - name: sysparm_uuid
        in: query
        description: Enter a colon-separated list of sys_id values to specify which indicators, breakdowns, aggregates, and domains to query.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the query ran successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/push/{pushApplicationName}/installation:
    post:
      tags:
      - Push Installation
      summary: removeInstallation
      description: >+
        Adds or updates tokens that enable devices to receive push notifications from the specified application.

      operationId: removeInstallation
      parameters:
      - name: pushApplicationName
        in: path
        description: Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NowPushInstallationRequest'
              - example:
                  platform: Apple
            examples:
              data:
                value:
                  platform: Apple
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Indicates that there is an error with the request message. The response body contains information about the error.
          headers: {}
          content: {}
        '500':
          description: Indicates that there is an unexpected or internal error.
          headers: {}
          content: {}
      deprecated: false
  /now/push/{pushApplicationName}/removeInstallation:
    post:
      tags:
      - Push Installation
      summary: pushInstallation
      description: >+
        Adds or updates tokens that enable devices to receive push notifications from the specified application.

      operationId: pushInstallation
      parameters:
      - name: pushApplicationName
        in: path
        description: Name of the application for which to register the push notifications. This parameter must be the same as the value in the Name column for the associated application in the Push Application [sys_push_application] table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NowPushRemoveInstallationRequest'
              - example:
                  platform: Apple
                  token: 544836d77ac2e551bbf78204630509a7d494fc87f52e85da52e5b5d42910e2cf
            examples:
              data:
                value:
                  platform: Apple
                  token: 544836d77ac2e551bbf78204630509a7d494fc87f52e85da52e5b5d42910e2cf
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully.
          headers: {}
          content: {}
        '400':
          description: Indicates that there is an error with the request message. The response body contains information about the error.
          headers: {}
          content: {}
        '403':
          description: Indicates that the requesting user does not have access to the record. Verify that the user has the proper role and access permissions.
          headers: {}
          content: {}
        '500':
          description: Indicates that there is an unexpected or internal error.
          headers: {}
          content: {}
      deprecated: false
  /now/awa/queues/{sys_id}/work_item:
    post:
      tags:
      - Queue
      summary: createQueue
      description: >+
        If an active work item exists, routes a document to a queue. If an active work item does not exist for the specified document, this creates a work item and set its fields accordingly.

      operationId: createQueue
      parameters:
      - name: sys_id
        in: path
        description: Unique ID of the queue record from the awa_queue table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Request completed successfully.
          headers: {}
          content: {}
        '404':
          description: The requested resource was not found. This can be caused by an ACL constraint or if the resource does not exist.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/catalogs:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogs
      description: >+
        Retrieves a list of catalogs to which the user has access based on the passed in parameters.

      operationId: getServiceCatalogs
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/catalogs/{sys_id}:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogById
      description: >+
        Retrieves the available information for a specified catalog.

      operationId: getServiceCatalogById
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sys_id
        in: path
        description: Unique identifier (sys_id) of the catalog to retrieve.
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Indicates that the request has completed successfully and returns the available information for the specified catalog.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates that request is invalid for one of the following reasons:

            User does not have access to the catalog.

            Invalid sys_id.
          headers: {}
          content: {}
        '500':
          description: Internal error occurred while executing the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/catalogs/{sys_id}/categories:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogCategoryInformation
      description: >+
        Retrieves the available information for a specified category.

      operationId: getServiceCatalogCategoryInformation
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sys_id
        in: path
        description: Unique identifier (sys_id) of the catalog to retrieve.
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Indicates that the request has completed successfully and returns the available information for the specified catalog.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates that request is invalid for one of the following reasons:

            User does not have access to the catalog.

            Invalid sys_id.
          headers: {}
          content: {}
        '500':
          description: Internal error occurred while executing the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/categories/{sys_id}:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogCategories
      description: >+
        Retrieves the list of available categories for the specified catalog.

      operationId: getServiceCatalogCategories
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sys_id
        in: path
        description: Unique identifier (sys_id) of the catalog to retrieve.
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Indicates that the request has completed successfully and returns the available information for the specified catalog.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates that request is invalid for one of the following reasons:

            User does not have access to the catalog.

            Invalid sys_id.
          headers: {}
          content: {}
        '500':
          description: Internal error occurred while executing the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogItems
      description: >+
        Retrieves a list of catalog items based on the specified parameters.

      operationId: getServiceCatalogItems
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sysparm_catalog
        in: query
        description: Catalog sys_id of the item. Use this parameter to locate items in a specific catalog.
        style: form
        explode: true
        schema:
          type: string
      - name: sysparm_category
        in: query
        description: Category sys_id of the item. Use this parameter to locate catalog items in a specific category.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.
          headers: {}
          content: {}
        '500':
          description: Internal error.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogItemById
      description: >+
        Retrieves a specified catalog item.

      operationId: getServiceCatalogItemById
      parameters:
      - name: sysparm_limit
        in: query
        description: Maximum number of records to return. Unusually large sysparm_limit values can impact system performance.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sys_id
        in: path
        description: Unique identifier (sys_id) of the catalog to retrieve.
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Indicates that the request has completed successfully and returns the available information for the specified catalog.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates that request is invalid for one of the following reasons:

            User does not have access to the catalog.

            Invalid sys_id.
          headers: {}
          content: {}
        '500':
          description: Internal error occurred while executing the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}/add_to_cart:
    post:
      tags:
      - Service Catalog
      summary: addItemToCart
      description: >+
        Adds the specified item to the cart of the current user.

      operationId: addItemToCart
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.
          headers: {}
          content: {}
        '400':
          description: >-
            The following errors can occur:

            Invalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.

            Security constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.

            Mandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}/submit_producer:
    post:
      tags:
      - Service Catalog
      summary: getServiceCatalogOrderItems
      description: >+
        Retrieves a list of items based on the needs described for an order guide.

      operationId: getServiceCatalogOrderItems
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates that the request is invalid. Could be due to one of the following reasons:

            User does not have access to the item.

            Mandatory variables of one or more items have not been answered. (Only variables defined as mandatory are honored.)
          headers: {}
          content: {}
        '500':
          description: Internal error while calculating items depending on options chosen.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}/submit_guide:
    put:
      tags:
      - Service Catalog
      summary: createServiceCatalogRecordGuide
      description: >+
        Creates a record and returns the Table API relative path and redirect URL to access the created record.

      operationId: createServiceCatalogRecordGuide
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.
          headers: {}
          content: {}
        '400':
          description: >-
            The following errors can occur:

            Invalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.

            Security constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.

            Mandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}/checkout_guide:
    post:
      tags:
      - Service Catalog
      summary: getServiceCatalogCheckoutInformation
      description: >+
        Retrieves an array of contents requested for checkout.

      operationId: getServiceCatalogCheckoutInformation
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.
          headers: {}
          content: {}
        '400':
          description: >-
            The following errors can occur:

            Invalid quantity value: indicates that either the sysparm_quantity parameter is not provided or contains an invalid value.

            Security constraints prevent ordering of Item: indicates that either the cart item sys_id specified in the path parameters is invalid or the user does not have access to the item.

            Mandatory Variables are required: indicates that one or more of the mandatory variables is not provided in the request.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/items/{sys_id}/order_now:
    post:
      tags:
      - Service Catalog
      summary: orderNowServiceCatalog
      description: >+
        Orders the specified catalog item.

      operationId: orderNowServiceCatalog
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully and the items have been added to the cart. The response contains the details of the items currently in the cart.
          headers: {}
          content: {}
        '400':
          description: JSON object containing the variable name and the value. If there are mandatory variables defined for the item, they must be passed to the endpoint.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogCart
      description: >+
        Retrieves the details of the items within the logged in user's cart.

      operationId: getServiceCatalogCart
      parameters: []
      responses:
        '200':
          description: Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.
          headers: {}
          content: {}
        '400':
          description: Indicates that the cart is empty and cannot check out.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart/delivery_address/{user_id}:
    get:
      tags:
      - Service Catalog
      summary: getServiceCatalogUserDeliveryAddress
      description: >+
        Retrieves the shipping address of the specified user.

      operationId: getServiceCatalogUserDeliveryAddress
      parameters:
      - name: user_id
        in: path
        description: Unique sys_id of the user whose shipping address is to be retrieved.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request completed successfully. If a valid query returns no results, the response body only contains an empty result array.
          headers: {}
          content: {}
        '400':
          description: User sys_id is invalid.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart/{cart_item_id}:
    put:
      tags:
      - Service Catalog
      summary: updateServiceCatalogCart
      description: >+
        Updates the specified item in the logged in user's cart.

      operationId: updateServiceCatalogCart
      parameters:
      - name: cart_item_id
        in: path
        description: Unique identifier of the cart item to update.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema: {}
        required: true
      responses:
        '201':
          description: Indicates that the request completed successfully and that the item is added to the cart.
          headers: {}
          content: {}
        '400':
          description: >-
            Following three errors can occur:

            Invalid quantity value:Indicates that either the sysparm_quantity parameter is not provided or contains invalid value.

            Security constraints prevent ordering of Item:Indicates that either the item ID specified in the path parameters is either invalid or the user does not have access to the item.

            Mandatory Variables are required:Indicates that one or more of the mandatory variable values is not provided in the request.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - Service Catalog
      summary: deleteServiceCatalogCartItems
      description: >+
        Deletes the specified item from the current cart.

      operationId: deleteServiceCatalogCartItems
      parameters:
      - name: cart_item_id
        in: path
        description: Unique identifier of the cart item to update.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates that the request completed successfully and the specified item was deleted from the cart.
          headers: {}
          content: {}
        '400':
          description: Indicates that either the specified cart_item_id is invalid or the user does not have access to the cart item.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/variables/{sys_id}/display_value:
    post:
      tags:
      - Service Catalog
      summary: getServiceCatalogDisplayVariable
      description: >+
        Returns the display value of the specified variable.

      operationId: getServiceCatalogDisplayVariable
      parameters:
      - name: sys_id
        in: path
        description: Unique sys_id of the item to add to the current cart.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Indicates that the request completed successfully. Returns the display value of the variable.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart/{sys_id}/empty:
    delete:
      tags:
      - Service Catalog
      summary: deleteServiceCatalogCart
      description: >+
        Deletes a specified cart, and the contents of the cart. The capabilities of what a user can delete (items and/or cart) depends on the role in which they use to authenticate.

      operationId: deleteServiceCatalogCart
      parameters:
      - name: sys_id
        in: path
        description: Unique identifier (sys_id) of the catalog to retrieve.
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        '204':
          description: Request completed successfully and the items in the cart are successfully checked out.
          headers: {}
          content: {}
        '400':
          description: >-
            Indicates an error for one of the following reasons:

            Invalid cartId.

            User does not have admin/catalog_admin role, or is trying to empty another user
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart/checkout:
    post:
      tags:
      - Service Catalog
      summary: checkoutCartServiceCatalog
      description: >+
        Retrieves and processes the checkout for the current cart based on whether the two-step checkout process is enabled.

      operationId: checkoutCartServiceCatalog
      parameters: []
      responses:
        '200':
          description: Indicates that the request completed successfully. Returns the total and subtotal information and information on the items in the cart.
          headers: {}
          content: {}
        '400':
          description: Indicates that the cart is empty and cannot check out.
          headers: {}
          content: {}
      deprecated: false
  /sn_sc/servicecatalog/cart/submit_order:
    post:
      tags:
      - Service Catalog
      summary: submitOrderServiceCatalog
      description: >+
        Checks out the user cart, based on the current check-out type (one-step or two-step ).

      operationId: submitOrderServiceCatalog
      parameters: []
      responses:
        '200':
          description: Indicates that the request completed successfully and the items in the cart are successfully checked out.
          headers: {}
          content: {}
        '400':
          description: Indicates that the user cart is empty.
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/channels:
    get:
      tags:
      - Task Communication Management
      summary: getChannelsForTable
      description: >+
        This method returns the list of channels for a given task record.

      operationId: getChannelsForTable
      parameters:
      - name: sysparm_table
        in: query
        description: Table name of task.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/channels_per_task/{commTaskSysId}/{table}:
    get:
      tags:
      - Task Communication Management
      summary: getChannelsForTableByTaskId
      description: >+
        This method returns meta data of all channels associated with a given communication task id and table. The table name is derived from communication task handler.

      operationId: getChannelsForTableByTaskId
      parameters:
      - name: commTaskSysId
        in: path
        description: Sys id of communication task.
        required: true
        style: simple
        schema:
          type: string
      - name: table
        in: path
        description: Name of the table defined in the comm_task_handler table.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/communication_detail/{taskSysId}:
    get:
      tags:
      - Task Communication Management
      summary: getCommunicationGroupPlans
      description: >+
        This method returns list of communication plans that includes communication tasks and channels.

      operationId: getCommunicationGroupPlans
      parameters:
      - name: taskSysId
        in: path
        description: Sys id of the task.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/groups/{taskSysId}:
    get:
      tags:
      - Task Communication Management
      summary: getCommunicationPlans
      description: >+
        This method returns list of communication plans that includes communication tasks and channels.

      operationId: getCommunicationPlans
      parameters:
      - name: taskSysId
        in: path
        description: Sys id of the task.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/comm_plan/{commPlanSysId}/recipients:
    post:
      tags:
      - Task Communication Management
      summary: manageCommunicationRecipients
      description: >+
        This method manages the recipients of a communication plan.

      operationId: manageCommunicationRecipients
      parameters:
      - name: sysparm_table
        in: query
        description: Table name of task.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: commPlanSysId
        in: path
        description: Sys id of the communication plan.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/adhoc/comm_plan:
    post:
      tags:
      - Task Communication Management
      summary: createCommunicationPlan
      description: >+
        This method is used to create a communication plan and communication task instance without any communication plan or communication task definition.

      operationId: createCommunicationPlan
      parameters:
      - name: sysparm_table
        in: query
        description: Table name of task.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/adhoc/comm_task:
    post:
      tags:
      - Task Communication Management
      summary: createCommunicationTask
      description: >+
        This method is used to create a communication task instance.

      operationId: createCommunicationTask
      parameters:
      - name: sysparm_table
        in: query
        description: Table name of task.
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/send_updates/{commTaskSysId}/{table}:
    post:
      tags:
      - Task Communication Management
      summary: getCommunicationTaskState
      description: >+
        This method returns success status if the channel task is successfully completed.

      operationId: getCommunicationTaskState
      parameters:
      - name: commTaskSysId
        in: path
        description: Sys id of communication task.
        required: true
        style: simple
        schema:
          type: string
      - name: table
        in: path
        description: Name of the table defined in the comm_task_handler table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /sn_comm_management/task_communication_management/update_state_wb_actions/{commTaskSysId}/{table}:
    post:
      tags:
      - Task Communication Management
      summary: updateCommunicationTask
      description: >+
        This method performs specified action on communication tasks.

      operationId: updateCommunicationTask
      parameters:
      - name: commTaskSysId
        in: path
        description: Sys id of communication task.
        required: true
        style: simple
        schema:
          type: string
      - name: table
        in: path
        description: Name of the table defined in the comm_task_handler table.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: success
          headers: {}
          content: {}
      deprecated: false
  /global/user_role_inheritance:
    get:
      tags:
      - User Role Inheritance
      summary: getUserRoles
      description: >+
        Returns a specified user's granted and inherited roles.

      operationId: getUserRoles
      parameters:
      - name: user_sysid
        in: query
        description: Required. sys_id of the user for which to return role information.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Indicates that the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/change_request:
    get:
      tags:
      - TableChangeRequest
      summary: getChangeRequests
      description: The function will return all changes that are found unless you provide either the number or the id. In those cases it will return the change(s) that match the specified criteria. If an id is provided, it will be the only criteria utilized.
      operationId: getChangeRequests
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableChangeRequest
      summary: createChangeRequest
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createChangeRequest
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/change_request/{sysId}:
    get:
      tags:
      - TableChangeRequest
      summary: getChangeRequestById
      description: The function will return all changes that are found unless you provide either the number or the id. In those cases it will return the change(s) that match the specified criteria. If an id is provided, it will be the only criteria utilized.
      operationId: getChangeRequestById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableChangeRequest
      summary: updateChangeRequest
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateChangeRequest
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableChangeRequest
      summary: deleteChangeRequest
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteChangeRequest
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/cmdb_ci/{sysId}:
    get:
      tags:
      - TableConfigItem
      summary: getConfigItemById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getConfigItemById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableConfigItem
      summary: updateConfigItem
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateConfigItem
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableConfigItem
      summary: deleteConfigItem
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteConfigItem
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/cmdb_ci:
    get:
      tags:
      - TableConfigItem
      summary: getConfigItems
      description: Returns the ConfigItem from the provided ServiceNow instance.
      operationId: getConfigItems
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableConfigItem
      summary: createConfigItem
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createConfigItem
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/incident/{sysId}:
    get:
      tags:
      - TableIncident
      summary: getIncidentById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getIncidentById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableIncident
      summary: updateIncident
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateIncident
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableIncident
      summary: deleteIncident
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteIncident
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/incident:
    get:
      tags:
      - TableIncident
      summary: getIncidents
      description: Returns the Incident from the provided ServiceNow instance.
      operationId: getIncidents
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableIncident
      summary: createIncident
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createIncident
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/sc_request/{sysId}:
    get:
      tags:
      - TableRequests
      summary: getRequestsById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getRequestsById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableRequests
      summary: updateRequests
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateRequests
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableRequests
      summary: deleteRequests
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteRequests
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/sc_request:
    get:
      tags:
      - TableRequests
      summary: getRequests
      description: Returns the Requests from the provided ServiceNow instance.
      operationId: getRequests
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableRequests
      summary: createRequests
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createRequests
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/sc_req_item/{sysId}:
    get:
      tags:
      - TableRequestItems
      summary: getRequestItemsById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getRequestItemsById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableRequestItems
      summary: updateRequestItems
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateRequestItems
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableRequestItems
      summary: deleteRequestItems
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteRequestItems
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/sc_req_item:
    get:
      tags:
      - TableRequestItems
      summary: getRequestItems
      description: Returns the RequestItems from the provided ServiceNow instance.
      operationId: getRequestItems
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableRequestItems
      summary: createRequestItems
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createRequestItems
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/sys_user/{sysId}:
    get:
      tags:
      - TableUsers
      summary: getUsersById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getUsersById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableUsers
      summary: updateUsers
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateUsers
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableUsers
      summary: deleteUsers
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteUsers
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/sys_user:
    get:
      tags:
      - TableUsers
      summary: getUsers
      description: Returns the Users from the provided ServiceNow instance.
      operationId: getUsers
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. name=username
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableUsers
      summary: createUsers
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createUsers
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/sys_user_group/{sysId}:
    get:
      tags:
      - TableGroup
      summary: getGroupById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getGroupById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableGroup
      summary: updateGroup
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateGroup
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableGroup
      summary: deleteGroup
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteGroup
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/sys_user_group:
    get:
      tags:
      - TableGroup
      summary: getGroups
      description: Returns the group from the provided ServiceNow instance.
      operationId: getGroups
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. name=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableGroup
      summary: createGroup
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createGroup
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/kb_knowledge/{sysId}:
    get:
      tags:
      - TableArticle
      summary: getArticleById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getArticleById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableArticle
      summary: updateArticle
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateArticle
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableArticle
      summary: deleteArticle
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteArticle
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/kb_knowledge:
    get:
      tags:
      - TableArticle
      summary: getArticles
      description: Returns the Article from the provided ServiceNow instance.
      operationId: getArticles
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableArticle
      summary: createArticle
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createArticle
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
  /now/table/problem/{sysId}:
    get:
      tags:
      - TableProblem
      summary: getProblemById
      description: Returns the changes from the provided ServiceNow instance.
      operationId: getProblemById
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    put:
      tags:
      - TableProblem
      summary: updateProblem
      description: The function will update the specified change with the information provided and return the status of the update.
      operationId: updateProblem
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: the change data to update in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to update in ServiceNow
        required: true
      responses:
        '200':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
    delete:
      tags:
      - TableProblem
      summary: deleteProblem
      description: >+
        Deletes the specified record from the specified table.

      operationId: deleteProblem
      parameters:
      - name: sysId
        in: path
        description: the id of the change to retrieve. aka sys_id
        required: true
        style: simple
        schema:
          type: string
      responses:
        '204':
          description: Indicates the request completed successfully.
          headers: {}
          content: {}
      deprecated: false
  /now/table/problem:
    get:
      tags:
      - TableProblem
      summary: getProblems
      description: Returns the Problem from the provided ServiceNow instance.
      operationId: getProblems
      parameters:
      - name: sysparm_query
        in: query
        description: E.g. number=CHG12345
        style: form
        explode: true
        schema:
          type: object
      responses:
        '200':
          description: Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforgetChangeRequestExample'
                - description: The root of the getChangeRequestExample type's schema.
        '404':
          description: Indicates the record is not found or the requesting user does not have access to the record.
          headers: {}
          content: {}
      deprecated: false
    post:
      tags:
      - TableProblem
      summary: createProblem
      description: The function will create the change with the information provided and return the change number for future reference.
      operationId: createProblem
      parameters: []
      requestBody:
        description: the change data to create in ServiceNow
        content:
          application/json:
            schema:
              type: string
              description: the change data to create in ServiceNow
        required: true
      responses:
        '201':
          description: Indicates the request completed successfully.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RootTypeforcreateChangeRequestExample'
                - description: The root of the createChangeRequestExample type's schema.
      deprecated: false
components:
  schemas:
    RootTypeforgetTableNameExample:
      title: RootTypeforgetTableNameExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
      description: The root of the getTableNameExample type's schema.
    RootTypeforgetConfigItemsExample:
      title: RootTypeforgetConfigItemsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result1'
      description: The root of the getConfigItemsExample type's schema.
    RootTypeforcreateConfigItemExample:
      title: RootTypeforcreateConfigItemExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result1'
      description: The root of the createConfigItemExample type's schema.
    RootTypeforgetIncidentExample:
      title: RootTypeforgetIncidentExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result3'
      description: The root of the getIncidentExample type's schema.
    RootTypeforcreateIncidentExample:
      title: RootTypeforcreateIncidentExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result3'
      description: The root of the createIncidentExample type's schema.
    RootTypeforgetProblemsExample:
      title: RootTypeforgetProblemsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result5'
      description: The root of the getProblemsExample type's schema.
    RootTypeforcreateProblemsExample:
      title: RootTypeforcreateProblemsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result5'
      description: The root of the createProblemsExample type's schema.
    RootTypeforgetRequestsExample:
      title: RootTypeforgetRequestsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result7'
      description: The root of the getRequestsExample type's schema.
    RootTypeforcreateRequestExample:
      title: RootTypeforcreateRequestExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result7'
      description: The root of the createRequestExample type's schema.
    RootTypeforgetRequestItemsExample:
      title: RootTypeforgetRequestItemsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result9'
      description: The root of the getRequestItemsExample type's schema.
    RootTypeforcreateRequestItemsExample:
      title: RootTypeforcreateRequestItemsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result9'
      description: The root of the createRequestItemsExample type's schema.
    RootTypeforgetChangeRequestExample:
      title: RootTypeforgetChangeRequestExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result11'
      description: The root of the getChangeRequestExample type's schema.
    RootTypeforcreateChangeRequestExample:
      title: RootTypeforcreateChangeRequestExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result11'
      description: The root of the createChangeRequestExample type's schema.
    RootTypeforgetArticlesExample:
      title: RootTypeforgetArticlesExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result13'
      description: The root of the getArticlesExample type's schema.
    RootTypeforcreateArticlesExample:
      title: RootTypeforcreateArticlesExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result13'
      description: The root of the createArticlesExample type's schema.
    RootTypeforgetUsersExample:
      title: RootTypeforgetUsersExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result15'
      description: The root of the getUsersExample type's schema.
    RootTypeforcreateUserExample:
      title: RootTypeforcreateUserExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result15'
      description: The root of the createUserExample type's schema.
    RootTypeforgetGroupsExample:
      title: RootTypeforgetGroupsExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result17'
      description: The root of the getGroupsExample type's schema.
    RootTypeforcreateGroupExample:
      title: RootTypeforcreateGroupExample
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result17'
      description: The root of the createGroupExample type's schema.
    AssignedTo:
      title: AssignedTo
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    AssignmentGroup:
      title: AssignmentGroup
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Author:
      title: Author
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    CallerId:
      title: CallerId
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    CatItem:
      title: CatItem
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    ClosedBy:
      title: ClosedBy
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    CmdbCi:
      title: CmdbCi
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Company:
      title: Company
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Context:
      title: Context
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    CostCenter:
      title: CostCenter
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Department:
      title: Department
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    KbCategory:
      title: KbCategory
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    KbKnowledgeBase:
      title: KbKnowledgeBase
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Location:
      title: Location
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Manager:
      title: Manager
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    NowImportRequest:
      title: NowImportRequest
      required:
      - first_name
      - last_name
      - user_id
      - email
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        user_id:
          type: string
        email:
          type: string
      example:
        first_name: John
        last_name: Public
        user_id: john.public
        email: john.public@company.com
    NowPushInstallationRequest:
      title: NowPushInstallationRequest
      required:
      - platform
      type: object
      properties:
        platform:
          type: string
      example:
        platform: Apple
    NowPushRemoveInstallationRequest:
      title: NowPushRemoveInstallationRequest
      required:
      - platform
      - token
      type: object
      properties:
        platform:
          type: string
        token:
          type: string
      example:
        platform: Apple
        token: 544836d77ac2e551bbf78204630509a7d494fc87f52e85da52e5b5d42910e2cf
    NowTableRequest:
      title: NowTableRequest
      required:
      - assigned_to
      - urgency
      - comments
      type: object
      properties:
        assigned_to:
          type: string
        urgency:
          type: string
        comments:
          type: string
      example:
        assigned_to: 681b365ec0a80164000fb0b05854a0cd
        urgency: '1'
        comments: Elevating urgency, this is a blocking issue
    NowTableRequest1:
      title: NowTableRequest1
      required:
      - short_description
      - assignment_group
      - urgency
      - impact
      type: object
      properties:
        short_description:
          type: string
        assignment_group:
          type: string
        urgency:
          type: string
        impact:
          type: string
      example:
        short_description: Unable to connect to office wifi
        assignment_group: 287ebd7da9fe198100f92cc8d1d2154e
        urgency: '2'
        impact: '2'
    NowTableResponse:
      title: NowTableResponse
      required:
      - result
      type: object
      properties:
        result:
          type: object
      example:
        result:
          upon_approval: ''
          location:
            link: https://instance.service-now.com/api/now/table/cmn_location/105cf7f3c611227501e75e08b14a38ba
            value: 105cf7f3c611227501e75e08b14a38ba
          expected_start: ''
          reopen_count: ''
          close_notes: ''
          additional_assignee_list: ''
          impact: '1'
          urgency: '3'
          correlation_id: ''
          sys_tags: ''
          sys_domain:
            link: https://instance.service-now.com/api/now/table/sys_user_group/global
            value: global
          description: ''
          group_list: ''
          priority: '3'
          delivery_plan: ''
          sys_mod_count: '4'
          work_notes_list: ''
          business_service: ''
          follow_up: ''
          closed_at: ''
          sla_due: 2015-11-11 22:04:15
          delivery_task: ''
          sys_updated_on: 2015-11-01 22:37:27
          parent: ''
          work_end: ''
          number: INC0000046
          closed_by: ''
          work_start: ''
          calendar_stc: ''
          category: software
          business_duration: ''
          incident_state: '1'
          activity_due: ''
          correlation_display: ''
          company: ''
          active: 'true'
          due_date: ''
          assignment_group:
            link: https://instance.service-now.com/api/now/table/sys_user_group/8a4dde73c6112278017a6a4baf547aa7
            value: 8a4dde73c6112278017a6a4baf547aa7
          caller_id:
            link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
            value: 46c6f9efa9fe198101ddf5eed9adf6e7
          knowledge: 'false'
          made_sla: 'false'
          comments_and_work_notes: ''
          parent_incident: ''
          state: '1'
          user_input: ''
          sys_created_on: 2015-11-01 22:05:30
          approval_set: ''
          reassignment_count: '1'
          rfc: ''
          child_incidents: ''
          opened_at: 2015-11-02 22:04:15
          short_description: Can't access SFA software
          order: ''
          sys_updated_by: glide.maint
          resolved_by: ''
          notify: '1'
          upon_reject: ''
          approval_history: ''
          problem_id:
            link: https://instance.service-now.com/api/now/table/problem/a9e4890bc6112276003d7a5a5c774a74
            value: a9e4890bc6112276003d7a5a5c774a74
          work_notes: ''
          calendar_duration: ''
          close_code: ''
          sys_id: a9e30c7dc61122760116894de7bcc7bd
          approval: not requested
          caused_by: ''
          severity: '3'
          sys_created_by: admin
          resolved_at: ''
          assigned_to: ''
          business_stc: ''
          wf_activity: ''
          sys_domain_path: /
          cmdb_ci:
            link: https://instance.service-now.com/api/now/table/cmdb_ci/a9c0c8d2c6112276018f7705562f9cb0
            value: a9c0c8d2c6112276018f7705562f9cb0
          opened_by:
            link: https://instance.service-now.com/api/now/table/sys_user/46c6f9efa9fe198101ddf5eed9adf6e7
            value: 46c6f9efa9fe198101ddf5eed9adf6e7
          subcategory: ''
          rejection_goto: ''
          sys_class_name: incident
          watch_list: ''
          time_worked: ''
          contact_type: phone
          escalation: '0'
          comments: ''
    OpenedBy:
      title: OpenedBy
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    ProblemId:
      title: ProblemId
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Request:
      title: Request
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    RequestedBy:
      title: RequestedBy
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    RequestedFor:
      title: RequestedFor
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    ResolvedBy:
      title: ResolvedBy
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    Result:
      title: Result
      type: object
      properties:
        parent:
          type: string
        made_sla:
          type: string
        watch_list:
          type: string
        upon_reject:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        approval_history:
          type: string
        number:
          type: string
        sys_updated_by:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        closed_at:
          type: string
          format: date-time
        cmdb_ci:
          $ref: '#/components/schemas/CmdbCi'
        delivery_plan:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        business_service:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        time_worked:
          type: string
        expected_start:
          type: string
        rejection_goto:
          type: string
        opened_at:
          type: string
          format: date-time
        business_duration:
          type: string
          format: date-time
        group_list:
          type: string
        work_end:
          type: string
        approval_set:
          type: string
        wf_activity:
          type: string
        work_notes:
          type: string
        short_description:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        assignment_group:
          type: string
        additional_assignee_list:
          type: string
        description:
          type: string
        calendar_duration:
          type: string
          format: date-time
        close_notes:
          type: string
        sys_class_name:
          type: string
        closed_by:
          type: string
        follow_up:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        urgency:
          type: string
        company:
          type: string
        reassignment_count:
          type: string
        activity_due:
          type: string
        assigned_to:
          type: string
        comments:
          type: string
        approval:
          type: string
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        due_date:
          type: string
        sys_mod_count:
          type: string
        sys_tags:
          type: string
        escalation:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        location:
          type: string
    Result1:
      title: Result1
      type: object
      properties:
        sys_id:
          type: string
        name:
          type: string
        summary:
          type: string
        category:
          type: string
        subcategory:
          type: string
        operational_status:
          type: string
        ip_address:
          type: string
        mac_address:
          type: string
        fqdn:
          type: string
        install_date:
          type: string
          format: date-time
        created_on:
          type: string
          format: date-time
        created_by:
          type: string
        updated_on:
          type: string
          format: date-time
        updated_by:
          type: string
        asset_tag:
          type: string
        serial_number:
          type: string
        model_number:
          type: string
        warranty_expiration:
          type: string
          format: date
        fault_count:
          type: string
        comments:
          type: string
    Result3:
      title: Result3
      type: object
      properties:
        parent:
          type: string
        made_sla:
          type: string
        caused_by:
          type: string
        watch_list:
          type: string
        u_pronghorn_job:
          type: string
        upon_reject:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        u_pronghorn_workflow:
          type: string
        child_incidents:
          type: string
        hold_reason:
          type: string
        approval_history:
          type: string
        number:
          type: string
        resolved_by:
          $ref: '#/components/schemas/ResolvedBy'
        sys_updated_by:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        calendar_stc:
          type: string
        closed_at:
          type: string
          format: date-time
        cmdb_ci:
          $ref: '#/components/schemas/CmdbCi'
        delivery_plan:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        business_service:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        rfc:
          type: string
        time_worked:
          type: string
        expected_start:
          type: string
        opened_at:
          type: string
          format: date-time
        business_duration:
          type: string
          format: date-time
        group_list:
          type: string
        work_end:
          type: string
        caller_id:
          $ref: '#/components/schemas/CallerId'
        resolved_at:
          type: string
          format: date-time
        approval_set:
          type: string
        subcategory:
          type: string
        work_notes:
          type: string
        short_description:
          type: string
        close_code:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        assignment_group:
          $ref: '#/components/schemas/AssignmentGroup'
        additional_assignee_list:
          type: string
        business_stc:
          type: string
        description:
          type: string
        calendar_duration:
          type: string
          format: date-time
        close_notes:
          type: string
        notify:
          type: string
        sys_class_name:
          type: string
        closed_by:
          $ref: '#/components/schemas/ClosedBy'
        follow_up:
          type: string
        parent_incident:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        incident_state:
          type: string
        urgency:
          type: string
        problem_id:
          $ref: '#/components/schemas/ProblemId'
        company:
          type: string
        reassignment_count:
          type: string
        activity_due:
          type: string
        assigned_to:
          $ref: '#/components/schemas/AssignedTo'
        severity:
          type: string
        comments:
          type: string
        approval:
          type: string
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        due_date:
          type: string
        sys_mod_count:
          type: string
        reopen_count:
          type: string
        sys_tags:
          type: string
        escalation:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        u_pronghorn_instance:
          type: string
        category:
          type: string
    Result5:
      title: Result5
      type: object
      properties:
        parent:
          type: string
        made_sla:
          type: string
        watch_list:
          type: string
        upon_reject:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        approval_history:
          type: string
        number:
          type: string
        sys_updated_by:
          type: string
        work_around:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        closed_at:
          type: string
        cmdb_ci:
          type: string
        delivery_plan:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        business_service:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        rfc:
          $ref: '#/components/schemas/Rfc'
        time_worked:
          type: string
        expected_start:
          type: string
        opened_at:
          type: string
          format: date-time
        business_duration:
          type: string
        group_list:
          type: string
        work_end:
          type: string
        approval_set:
          type: string
        work_notes:
          type: string
        short_description:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        assignment_group:
          type: string
        known_error:
          type: string
        additional_assignee_list:
          type: string
        description:
          type: string
        calendar_duration:
          type: string
        close_notes:
          type: string
        sys_class_name:
          type: string
        closed_by:
          type: string
        follow_up:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        urgency:
          type: string
        company:
          type: string
        reassignment_count:
          type: string
        related_incidents:
          type: string
        activity_due:
          type: string
        assigned_to:
          $ref: '#/components/schemas/AssignedTo'
        comments:
          type: string
        approval:
          type: string
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        due_date:
          type: string
        problem_state:
          type: string
        sys_mod_count:
          type: string
        sys_tags:
          type: string
        escalation:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        location:
          type: string
    Result7:
      title: Result7
      type: object
      properties:
        parent:
          type: string
        delivery_address:
          type: string
        made_sla:
          type: string
        watch_list:
          type: string
        u_pronghorn_job:
          type: string
        upon_reject:
          type: string
        requested_for:
          $ref: '#/components/schemas/RequestedFor'
        sys_updated_on:
          type: string
          format: date-time
        u_pronghorn_workflow:
          type: string
        approval_history:
          type: string
        number:
          type: string
        sys_updated_by:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        price:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        calendar_stc:
          type: string
        special_instructions:
          type: string
        closed_at:
          type: string
        u_device:
          type: string
        cmdb_ci:
          type: string
        delivery_plan:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        business_service:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        time_worked:
          type: string
        expected_start:
          type: string
        opened_at:
          type: string
          format: date-time
        business_duration:
          type: string
        group_list:
          type: string
        work_end:
          type: string
        approval_set:
          type: string
        u_interface_type:
          type: string
        work_notes:
          type: string
        short_description:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        assignment_group:
          type: string
        additional_assignee_list:
          type: string
        description:
          type: string
        calendar_duration:
          type: string
        close_notes:
          type: string
        sys_class_name:
          type: string
        closed_by:
          type: string
        follow_up:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        urgency:
          type: string
        requested_date:
          type: string
        company:
          type: string
        reassignment_count:
          type: string
        activity_due:
          type: string
        assigned_to:
          type: string
        comments:
          type: string
        u_interface_vlans:
          type: string
        approval:
          type: string
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        due_date:
          type: string
          format: date-time
        sys_mod_count:
          type: string
        sys_tags:
          type: string
        request_state:
          type: string
        stage:
          type: string
        escalation:
          type: string
        u_inerface_id:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        location:
          type: string
        u_pronghorn_instance:
          type: string
    Result9:
      title: Result9
      type: object
      properties:
        parent:
          type: string
        made_sla:
          type: string
        watch_list:
          type: string
        u_pronghorn_job:
          type: string
        sc_catalog:
          type: string
        upon_reject:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        u_pronghorn_workflow:
          type: string
        approval_history:
          type: string
        number:
          type: string
        sys_updated_by:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        price:
          type: string
        sys_created_on:
          type: string
          format: date-time
        recurring_frequency:
          type: string
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        context:
          $ref: '#/components/schemas/Context'
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        closed_at:
          type: string
        cmdb_ci:
          type: string
        delivery_plan:
          type: string
        backordered:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        business_service:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        time_worked:
          type: string
        expected_start:
          type: string
        opened_at:
          type: string
          format: date-time
        business_duration:
          type: string
        group_list:
          type: string
        configuration_item:
          type: string
        work_end:
          type: string
        approval_set:
          type: string
        work_notes:
          type: string
        order_guide:
          type: string
        request:
          $ref: '#/components/schemas/Request'
        short_description:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        assignment_group:
          type: string
        additional_assignee_list:
          type: string
        description:
          type: string
        calendar_duration:
          type: string
        close_notes:
          type: string
        sys_class_name:
          type: string
        closed_by:
          type: string
        follow_up:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        urgency:
          type: string
        company:
          type: string
        reassignment_count:
          type: string
        activity_due:
          type: string
        assigned_to:
          type: string
        comments:
          type: string
        quantity:
          type: string
        approval:
          type: string
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        due_date:
          type: string
          format: date-time
        sys_mod_count:
          type: string
        recurring_price:
          type: string
        sys_tags:
          type: string
        billable:
          type: string
        cat_item:
          $ref: '#/components/schemas/CatItem'
        stage:
          type: string
        escalation:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        location:
          type: string
        u_pronghorn_instance:
          type: string
        estimated_delivery:
          type: string
    Result11:
      title: Result11
      type: object
      properties:
        parent:
          type: string
        reason:
          type: string
        watch_list:
          type: string
        upon_reject:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        type:
          type: string
        approval_history:
          type: string
        number:
          type: string
        test_plan:
          type: string
        cab_delegate:
          type: string
        requested_by_date:
          type: string
          format: date-time
        state:
          type: string
        sys_created_by:
          type: string
        knowledge:
          type: string
        order:
          type: string
        phase:
          type: string
        cmdb_ci:
          $ref: '#/components/schemas/CmdbCi'
        delivery_plan:
          type: string
        impact:
          type: string
        active:
          type: string
        work_notes_list:
          type: string
        priority:
          type: string
        sys_domain_path:
          type: string
        cab_recommendation:
          type: string
        production_system:
          type: string
        review_date:
          type: string
        business_duration:
          type: string
        group_list:
          type: string
        requested_by:
          $ref: '#/components/schemas/RequestedBy'
        change_plan:
          type: string
        approval_set:
          type: string
        implementation_plan:
          type: string
        end_date:
          type: string
          format: date-time
        short_description:
          type: string
        correlation_display:
          type: string
        delivery_task:
          type: string
        work_start:
          type: string
        additional_assignee_list:
          type: string
        outside_maintenance_schedule:
          type: string
        std_change_producer_version:
          type: string
        sys_class_name:
          type: string
        closed_by:
          $ref: '#/components/schemas/ClosedBy'
        follow_up:
          type: string
        reassignment_count:
          type: string
        review_status:
          type: string
        assigned_to:
          $ref: '#/components/schemas/AssignedTo'
        start_date:
          type: string
          format: date-time
        sla_due:
          type: string
        comments_and_work_notes:
          type: string
        escalation:
          type: string
        upon_approval:
          type: string
        correlation_id:
          type: string
        made_sla:
          type: string
        backout_plan:
          type: string
        u_pronghorn_job:
          type: string
        conflict_status:
          type: string
        sys_updated_by:
          type: string
        opened_by:
          $ref: '#/components/schemas/OpenedBy'
        user_input:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        closed_at:
          type: string
          format: date-time
        review_comments:
          type: string
        business_service:
          type: string
        time_worked:
          type: string
        expected_start:
          type: string
        opened_at:
          type: string
          format: date-time
        work_end:
          type: string
        phase_state:
          type: string
        cab_date:
          type: string
        work_notes:
          type: string
        u_pronghorn_wait_task:
          type: string
        close_code:
          type: string
        assignment_group:
          type: string
        description:
          type: string
        on_hold_reason:
          type: string
        calendar_duration:
          type: string
        close_notes:
          type: string
        sys_id:
          type: string
        contact_type:
          type: string
        cab_required:
          type: string
        urgency:
          type: string
        scope:
          type: string
        company:
          type: string
        justification:
          type: string
        activity_due:
          type: string
        comments:
          type: string
        approval:
          type: string
        due_date:
          type: string
        sys_mod_count:
          type: string
        on_hold:
          type: string
        sys_tags:
          type: string
        conflict_last_run:
          type: string
        location:
          type: string
        risk:
          type: string
        u_pronghorn_instance:
          type: string
        category:
          type: string
        risk_impact_analysis:
          type: string
    Result13:
      title: Result13
      type: object
      properties:
        short_description:
          type: string
        roles:
          type: string
        wiki:
          type: object
        direct:
          type: string
        rating:
          type: string
        description:
          type: string
        source:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        disable_suggesting:
          type: string
        sys_class_name:
          type: string
        number:
          type: string
        sys_id:
          type: string
        use_count:
          type: string
        sys_updated_by:
          type: string
        flagged:
          type: string
        disable_commenting:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        valid_to:
          type: string
          format: date
        retired:
          type: string
        workflow_state:
          type: string
        text:
          type: string
        sys_created_by:
          type: string
        display_attachments:
          type: string
        image:
          type: string
        sys_view_count:
          type: string
        article_type:
          type: string
        cmdb_ci:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        can_read_user_criteria:
          type: string
        sys_mod_count:
          type: string
        active:
          type: string
        cannot_read_user_criteria:
          type: string
        published:
          type: string
          format: date
        sys_domain_path:
          type: string
        sys_tags:
          type: string
        kb_knowledge_base:
          $ref: '#/components/schemas/KbKnowledgeBase'
        meta:
          type: string
        topic:
          type: string
        category:
          type: string
        kb_category:
          $ref: '#/components/schemas/KbCategory'
    Result15:
      title: Result15
      type: object
      properties:
        calendar_integration:
          type: string
        country:
          type: string
        user_password:
          type: string
        last_login_time:
          type: string
        source:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        building:
          type: string
        web_service_access_only:
          type: string
        notification:
          type: string
        sys_updated_by:
          type: string
        sys_created_on:
          type: string
          format: date-time
        sys_domain:
          $ref: '#/components/schemas/SysDomain'
        state:
          type: string
        vip:
          type: string
        sys_created_by:
          type: string
        zip:
          type: string
        home_phone:
          type: string
        time_format:
          type: string
        last_login:
          type: string
        default_perspective:
          type: string
        active:
          type: string
        sys_domain_path:
          type: string
        cost_center:
          $ref: '#/components/schemas/CostCenter'
        phone:
          type: string
        name:
          type: string
        employee_number:
          type: string
        password_needs_reset:
          type: string
        gender:
          type: string
        city:
          type: string
        failed_attempts:
          type: string
        user_name:
          type: string
        roles:
          type: string
        title:
          type: string
        sys_class_name:
          type: string
        sys_id:
          type: string
        internal_integration_user:
          type: string
        ldap_server:
          type: string
        mobile_phone:
          type: string
        street:
          type: string
        company:
          $ref: '#/components/schemas/Company'
        department:
          $ref: '#/components/schemas/Department'
        first_name:
          type: string
        email:
          type: string
        introduction:
          type: string
        preferred_language:
          type: string
        manager:
          $ref: '#/components/schemas/Manager'
        locked_out:
          type: string
        sys_mod_count:
          type: string
        last_name:
          type: string
        photo:
          type: string
        middle_name:
          type: string
        sys_tags:
          type: string
        time_zone:
          type: string
        schedule:
          type: string
        date_format:
          type: string
        location:
          $ref: '#/components/schemas/Location'
    Result17:
      title: Result17
      type: object
      properties:
        parent:
          type: string
        manager:
          type: string
        roles:
          type: string
        sys_mod_count:
          type: string
        active:
          type: string
        description:
          type: string
        source:
          type: string
        sys_updated_on:
          type: string
          format: date-time
        sys_tags:
          type: string
        type:
          type: string
        sys_id:
          type: string
        sys_updated_by:
          type: string
        cost_center:
          type: string
        default_assignee:
          type: string
        sys_created_on:
          type: string
          format: date-time
        name:
          type: string
        exclude_manager:
          type: string
        email:
          type: string
        include_members:
          type: string
        sys_created_by:
          type: string
    Rfc:
      title: Rfc
      type: object
      properties:
        link:
          type: string
        value:
          type: string
    SysDomain:
      title: SysDomain
      type: object
      properties:
        link:
          type: string
        value:
          type: string
  securitySchemes:
    Basic:
      type: http
      scheme: basic
security: []
tags:
- name: Table
  description: ''
- name: Agent Presence
  description: ''
- name: Aggregate
  description: ''
- name: Application Service
  description: ''
- name: Attachment
  description: ''
- name: Change Management
  description: ''
- name: Customer Service Management
  description: ''
- name: Email
  description: ''
- name: Import Set
  description: ''
- name: Major Incident Management
  description: ''
- name: MetricBase Time Series
  description: ''
- name: Performance Analytics
  description: ''
- name: Push Installation
  description: ''
- name: Queue
  description: ''
- name: Service Catalog
  description: ''
- name: Task Communication Management
  description: ''
- name: User Role Inheritance
  description: ''
- name: TableChangeRequest
  description: Entity for the change_request table
- name: TableConfigItem
  description: Entitiy for table cmdb_ci, aka Config Item
- name: TableIncident
  description: ''
- name: TableProblems
  description: ''
- name: TableRequests
  description: ''
- name: TableRequestItems
  description: ''
- name: TableKnowledgeBase
  description: ''
- name: TableUsers
  description: ''
- name: TableUserGroups
  description: ''
- name: TableGroup
  description: ''
- name: TableArticle
  description: ''
- name: TableProblem
  description: ''
